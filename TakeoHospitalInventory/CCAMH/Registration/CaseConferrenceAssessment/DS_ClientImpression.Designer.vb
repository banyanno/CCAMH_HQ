'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DS_ClientImpression"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DS_ClientImpression
    Inherits Global.System.Data.DataSet
    
    Private tableCCAMH_VIEW_ADVISED_CLIENTS As CCAMH_VIEW_ADVISED_CLIENTSDataTable
    
    Private tableCLIENT_CA_SOCIAL As CLIENT_CA_SOCIALDataTable
    
    Private tableCCAMH_CLIENT_DDISORDER As CCAMH_CLIENT_DDISORDERDataTable
    
    Private tableCCAMH_DDISORDER_DETAIL As CCAMH_DDISORDER_DETAILDataTable
    
    Private tableCCAMH_PSYCHO_MINOR_DETAIL As CCAMH_PSYCHO_MINOR_DETAILDataTable
    
    Private tableCCAMH_NEURO As CCAMH_NEURODataTable
    
    Private tableCCAMH_PSYCHO_MAJOR As CCAMH_PSYCHO_MAJORDataTable
    
    Private tableCCAMH_PSYCHO_MINOR As CCAMH_PSYCHO_MINORDataTable
    
    Private tableCCAMH_PSYCHO_MAJOR_DETAIL As CCAMH_PSYCHO_MAJOR_DETAILDataTable
    
    Private tableCCAMH_CLIENT_NEURO As CCAMH_CLIENT_NEURODataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("CCAMH_VIEW_ADVISED_CLIENTS")) Is Nothing) Then
                MyBase.Tables.Add(New CCAMH_VIEW_ADVISED_CLIENTSDataTable(ds.Tables("CCAMH_VIEW_ADVISED_CLIENTS")))
            End If
            If (Not (ds.Tables("CLIENT_CA_SOCIAL")) Is Nothing) Then
                MyBase.Tables.Add(New CLIENT_CA_SOCIALDataTable(ds.Tables("CLIENT_CA_SOCIAL")))
            End If
            If (Not (ds.Tables("CCAMH_CLIENT_DDISORDER")) Is Nothing) Then
                MyBase.Tables.Add(New CCAMH_CLIENT_DDISORDERDataTable(ds.Tables("CCAMH_CLIENT_DDISORDER")))
            End If
            If (Not (ds.Tables("CCAMH_DDISORDER_DETAIL")) Is Nothing) Then
                MyBase.Tables.Add(New CCAMH_DDISORDER_DETAILDataTable(ds.Tables("CCAMH_DDISORDER_DETAIL")))
            End If
            If (Not (ds.Tables("CCAMH_PSYCHO_MINOR_DETAIL")) Is Nothing) Then
                MyBase.Tables.Add(New CCAMH_PSYCHO_MINOR_DETAILDataTable(ds.Tables("CCAMH_PSYCHO_MINOR_DETAIL")))
            End If
            If (Not (ds.Tables("CCAMH_NEURO")) Is Nothing) Then
                MyBase.Tables.Add(New CCAMH_NEURODataTable(ds.Tables("CCAMH_NEURO")))
            End If
            If (Not (ds.Tables("CCAMH_PSYCHO_MAJOR")) Is Nothing) Then
                MyBase.Tables.Add(New CCAMH_PSYCHO_MAJORDataTable(ds.Tables("CCAMH_PSYCHO_MAJOR")))
            End If
            If (Not (ds.Tables("CCAMH_PSYCHO_MINOR")) Is Nothing) Then
                MyBase.Tables.Add(New CCAMH_PSYCHO_MINORDataTable(ds.Tables("CCAMH_PSYCHO_MINOR")))
            End If
            If (Not (ds.Tables("CCAMH_PSYCHO_MAJOR_DETAIL")) Is Nothing) Then
                MyBase.Tables.Add(New CCAMH_PSYCHO_MAJOR_DETAILDataTable(ds.Tables("CCAMH_PSYCHO_MAJOR_DETAIL")))
            End If
            If (Not (ds.Tables("CCAMH_CLIENT_NEURO")) Is Nothing) Then
                MyBase.Tables.Add(New CCAMH_CLIENT_NEURODataTable(ds.Tables("CCAMH_CLIENT_NEURO")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CCAMH_VIEW_ADVISED_CLIENTS() As CCAMH_VIEW_ADVISED_CLIENTSDataTable
        Get
            Return Me.tableCCAMH_VIEW_ADVISED_CLIENTS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CLIENT_CA_SOCIAL() As CLIENT_CA_SOCIALDataTable
        Get
            Return Me.tableCLIENT_CA_SOCIAL
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CCAMH_CLIENT_DDISORDER() As CCAMH_CLIENT_DDISORDERDataTable
        Get
            Return Me.tableCCAMH_CLIENT_DDISORDER
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CCAMH_DDISORDER_DETAIL() As CCAMH_DDISORDER_DETAILDataTable
        Get
            Return Me.tableCCAMH_DDISORDER_DETAIL
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CCAMH_PSYCHO_MINOR_DETAIL() As CCAMH_PSYCHO_MINOR_DETAILDataTable
        Get
            Return Me.tableCCAMH_PSYCHO_MINOR_DETAIL
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CCAMH_NEURO() As CCAMH_NEURODataTable
        Get
            Return Me.tableCCAMH_NEURO
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CCAMH_PSYCHO_MAJOR() As CCAMH_PSYCHO_MAJORDataTable
        Get
            Return Me.tableCCAMH_PSYCHO_MAJOR
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CCAMH_PSYCHO_MINOR() As CCAMH_PSYCHO_MINORDataTable
        Get
            Return Me.tableCCAMH_PSYCHO_MINOR
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CCAMH_PSYCHO_MAJOR_DETAIL() As CCAMH_PSYCHO_MAJOR_DETAILDataTable
        Get
            Return Me.tableCCAMH_PSYCHO_MAJOR_DETAIL
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CCAMH_CLIENT_NEURO() As CCAMH_CLIENT_NEURODataTable
        Get
            Return Me.tableCCAMH_CLIENT_NEURO
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DS_ClientImpression = CType(MyBase.Clone,DS_ClientImpression)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("CCAMH_VIEW_ADVISED_CLIENTS")) Is Nothing) Then
                MyBase.Tables.Add(New CCAMH_VIEW_ADVISED_CLIENTSDataTable(ds.Tables("CCAMH_VIEW_ADVISED_CLIENTS")))
            End If
            If (Not (ds.Tables("CLIENT_CA_SOCIAL")) Is Nothing) Then
                MyBase.Tables.Add(New CLIENT_CA_SOCIALDataTable(ds.Tables("CLIENT_CA_SOCIAL")))
            End If
            If (Not (ds.Tables("CCAMH_CLIENT_DDISORDER")) Is Nothing) Then
                MyBase.Tables.Add(New CCAMH_CLIENT_DDISORDERDataTable(ds.Tables("CCAMH_CLIENT_DDISORDER")))
            End If
            If (Not (ds.Tables("CCAMH_DDISORDER_DETAIL")) Is Nothing) Then
                MyBase.Tables.Add(New CCAMH_DDISORDER_DETAILDataTable(ds.Tables("CCAMH_DDISORDER_DETAIL")))
            End If
            If (Not (ds.Tables("CCAMH_PSYCHO_MINOR_DETAIL")) Is Nothing) Then
                MyBase.Tables.Add(New CCAMH_PSYCHO_MINOR_DETAILDataTable(ds.Tables("CCAMH_PSYCHO_MINOR_DETAIL")))
            End If
            If (Not (ds.Tables("CCAMH_NEURO")) Is Nothing) Then
                MyBase.Tables.Add(New CCAMH_NEURODataTable(ds.Tables("CCAMH_NEURO")))
            End If
            If (Not (ds.Tables("CCAMH_PSYCHO_MAJOR")) Is Nothing) Then
                MyBase.Tables.Add(New CCAMH_PSYCHO_MAJORDataTable(ds.Tables("CCAMH_PSYCHO_MAJOR")))
            End If
            If (Not (ds.Tables("CCAMH_PSYCHO_MINOR")) Is Nothing) Then
                MyBase.Tables.Add(New CCAMH_PSYCHO_MINORDataTable(ds.Tables("CCAMH_PSYCHO_MINOR")))
            End If
            If (Not (ds.Tables("CCAMH_PSYCHO_MAJOR_DETAIL")) Is Nothing) Then
                MyBase.Tables.Add(New CCAMH_PSYCHO_MAJOR_DETAILDataTable(ds.Tables("CCAMH_PSYCHO_MAJOR_DETAIL")))
            End If
            If (Not (ds.Tables("CCAMH_CLIENT_NEURO")) Is Nothing) Then
                MyBase.Tables.Add(New CCAMH_CLIENT_NEURODataTable(ds.Tables("CCAMH_CLIENT_NEURO")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableCCAMH_VIEW_ADVISED_CLIENTS = CType(MyBase.Tables("CCAMH_VIEW_ADVISED_CLIENTS"),CCAMH_VIEW_ADVISED_CLIENTSDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCCAMH_VIEW_ADVISED_CLIENTS) Is Nothing) Then
                Me.tableCCAMH_VIEW_ADVISED_CLIENTS.InitVars
            End If
        End If
        Me.tableCLIENT_CA_SOCIAL = CType(MyBase.Tables("CLIENT_CA_SOCIAL"),CLIENT_CA_SOCIALDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCLIENT_CA_SOCIAL) Is Nothing) Then
                Me.tableCLIENT_CA_SOCIAL.InitVars
            End If
        End If
        Me.tableCCAMH_CLIENT_DDISORDER = CType(MyBase.Tables("CCAMH_CLIENT_DDISORDER"),CCAMH_CLIENT_DDISORDERDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCCAMH_CLIENT_DDISORDER) Is Nothing) Then
                Me.tableCCAMH_CLIENT_DDISORDER.InitVars
            End If
        End If
        Me.tableCCAMH_DDISORDER_DETAIL = CType(MyBase.Tables("CCAMH_DDISORDER_DETAIL"),CCAMH_DDISORDER_DETAILDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCCAMH_DDISORDER_DETAIL) Is Nothing) Then
                Me.tableCCAMH_DDISORDER_DETAIL.InitVars
            End If
        End If
        Me.tableCCAMH_PSYCHO_MINOR_DETAIL = CType(MyBase.Tables("CCAMH_PSYCHO_MINOR_DETAIL"),CCAMH_PSYCHO_MINOR_DETAILDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCCAMH_PSYCHO_MINOR_DETAIL) Is Nothing) Then
                Me.tableCCAMH_PSYCHO_MINOR_DETAIL.InitVars
            End If
        End If
        Me.tableCCAMH_NEURO = CType(MyBase.Tables("CCAMH_NEURO"),CCAMH_NEURODataTable)
        If (initTable = true) Then
            If (Not (Me.tableCCAMH_NEURO) Is Nothing) Then
                Me.tableCCAMH_NEURO.InitVars
            End If
        End If
        Me.tableCCAMH_PSYCHO_MAJOR = CType(MyBase.Tables("CCAMH_PSYCHO_MAJOR"),CCAMH_PSYCHO_MAJORDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCCAMH_PSYCHO_MAJOR) Is Nothing) Then
                Me.tableCCAMH_PSYCHO_MAJOR.InitVars
            End If
        End If
        Me.tableCCAMH_PSYCHO_MINOR = CType(MyBase.Tables("CCAMH_PSYCHO_MINOR"),CCAMH_PSYCHO_MINORDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCCAMH_PSYCHO_MINOR) Is Nothing) Then
                Me.tableCCAMH_PSYCHO_MINOR.InitVars
            End If
        End If
        Me.tableCCAMH_PSYCHO_MAJOR_DETAIL = CType(MyBase.Tables("CCAMH_PSYCHO_MAJOR_DETAIL"),CCAMH_PSYCHO_MAJOR_DETAILDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCCAMH_PSYCHO_MAJOR_DETAIL) Is Nothing) Then
                Me.tableCCAMH_PSYCHO_MAJOR_DETAIL.InitVars
            End If
        End If
        Me.tableCCAMH_CLIENT_NEURO = CType(MyBase.Tables("CCAMH_CLIENT_NEURO"),CCAMH_CLIENT_NEURODataTable)
        If (initTable = true) Then
            If (Not (Me.tableCCAMH_CLIENT_NEURO) Is Nothing) Then
                Me.tableCCAMH_CLIENT_NEURO.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "DS_ClientImpression"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DS_ClientImpression.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableCCAMH_VIEW_ADVISED_CLIENTS = New CCAMH_VIEW_ADVISED_CLIENTSDataTable()
        MyBase.Tables.Add(Me.tableCCAMH_VIEW_ADVISED_CLIENTS)
        Me.tableCLIENT_CA_SOCIAL = New CLIENT_CA_SOCIALDataTable()
        MyBase.Tables.Add(Me.tableCLIENT_CA_SOCIAL)
        Me.tableCCAMH_CLIENT_DDISORDER = New CCAMH_CLIENT_DDISORDERDataTable()
        MyBase.Tables.Add(Me.tableCCAMH_CLIENT_DDISORDER)
        Me.tableCCAMH_DDISORDER_DETAIL = New CCAMH_DDISORDER_DETAILDataTable()
        MyBase.Tables.Add(Me.tableCCAMH_DDISORDER_DETAIL)
        Me.tableCCAMH_PSYCHO_MINOR_DETAIL = New CCAMH_PSYCHO_MINOR_DETAILDataTable()
        MyBase.Tables.Add(Me.tableCCAMH_PSYCHO_MINOR_DETAIL)
        Me.tableCCAMH_NEURO = New CCAMH_NEURODataTable()
        MyBase.Tables.Add(Me.tableCCAMH_NEURO)
        Me.tableCCAMH_PSYCHO_MAJOR = New CCAMH_PSYCHO_MAJORDataTable()
        MyBase.Tables.Add(Me.tableCCAMH_PSYCHO_MAJOR)
        Me.tableCCAMH_PSYCHO_MINOR = New CCAMH_PSYCHO_MINORDataTable()
        MyBase.Tables.Add(Me.tableCCAMH_PSYCHO_MINOR)
        Me.tableCCAMH_PSYCHO_MAJOR_DETAIL = New CCAMH_PSYCHO_MAJOR_DETAILDataTable()
        MyBase.Tables.Add(Me.tableCCAMH_PSYCHO_MAJOR_DETAIL)
        Me.tableCCAMH_CLIENT_NEURO = New CCAMH_CLIENT_NEURODataTable()
        MyBase.Tables.Add(Me.tableCCAMH_CLIENT_NEURO)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCCAMH_VIEW_ADVISED_CLIENTS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCLIENT_CA_SOCIAL() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCCAMH_CLIENT_DDISORDER() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCCAMH_DDISORDER_DETAIL() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCCAMH_PSYCHO_MINOR_DETAIL() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCCAMH_NEURO() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCCAMH_PSYCHO_MAJOR() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCCAMH_PSYCHO_MINOR() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCCAMH_PSYCHO_MAJOR_DETAIL() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCCAMH_CLIENT_NEURO() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DS_ClientImpression = New DS_ClientImpression()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub CCAMH_VIEW_ADVISED_CLIENTSRowChangeEventHandler(ByVal sender As Object, ByVal e As CCAMH_VIEW_ADVISED_CLIENTSRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub CLIENT_CA_SOCIALRowChangeEventHandler(ByVal sender As Object, ByVal e As CLIENT_CA_SOCIALRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub CCAMH_CLIENT_DDISORDERRowChangeEventHandler(ByVal sender As Object, ByVal e As CCAMH_CLIENT_DDISORDERRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub CCAMH_DDISORDER_DETAILRowChangeEventHandler(ByVal sender As Object, ByVal e As CCAMH_DDISORDER_DETAILRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub CCAMH_PSYCHO_MINOR_DETAILRowChangeEventHandler(ByVal sender As Object, ByVal e As CCAMH_PSYCHO_MINOR_DETAILRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub CCAMH_NEURORowChangeEventHandler(ByVal sender As Object, ByVal e As CCAMH_NEURORowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub CCAMH_PSYCHO_MAJORRowChangeEventHandler(ByVal sender As Object, ByVal e As CCAMH_PSYCHO_MAJORRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub CCAMH_PSYCHO_MINORRowChangeEventHandler(ByVal sender As Object, ByVal e As CCAMH_PSYCHO_MINORRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub CCAMH_PSYCHO_MAJOR_DETAILRowChangeEventHandler(ByVal sender As Object, ByVal e As CCAMH_PSYCHO_MAJOR_DETAILRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub CCAMH_CLIENT_NEURORowChangeEventHandler(ByVal sender As Object, ByVal e As CCAMH_CLIENT_NEURORowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CCAMH_VIEW_ADVISED_CLIENTSDataTable
        Inherits Global.System.Data.TypedTableBase(Of CCAMH_VIEW_ADVISED_CLIENTSRow)
        
        Private columnCLIENT_NO As Global.System.Data.DataColumn
        
        Private columnCLIENT_NAME_KHM As Global.System.Data.DataColumn
        
        Private columnCLIENT_NAME As Global.System.Data.DataColumn
        
        Private columnCLIENT_SEX As Global.System.Data.DataColumn
        
        Private columnCLIENT_AGE As Global.System.Data.DataColumn
        
        Private columnCLIENT_DOB As Global.System.Data.DataColumn
        
        Private columnCLIENT_DATE_REG As Global.System.Data.DataColumn
        
        Private columnCLIENT_ADVISED_ASSESSMENT_DATE As Global.System.Data.DataColumn
        
        Private columnCLIENT_ADVISED_ASSESSMENT As Global.System.Data.DataColumn
        
        Private columnCLIENT_ADDRESS_PHONE As Global.System.Data.DataColumn
        
        Private columnPROV_EN As Global.System.Data.DataColumn
        
        Private columnDIST_EN As Global.System.Data.DataColumn
        
        Private columnVILL_EN As Global.System.Data.DataColumn
        
        Private columnCOMM_EN As Global.System.Data.DataColumn
        
        Private columnCLIENT_IS_ASSESS_CHECKED As Global.System.Data.DataColumn
        
        Private columnCLIENT_ADVICED_ASSESSMENT_DETAIL As Global.System.Data.DataColumn
        
        Private columnCLIENT_ADVICED_ASSESSMENT_NOTE As Global.System.Data.DataColumn
        
        Private columnFULL_ADDRESS_KH As Global.System.Data.DataColumn
        
        Private columnFULL_ADDRESS_ENG As Global.System.Data.DataColumn
        
        Private columnCLIENT_PSYCHIATRIC As Global.System.Data.DataColumn
        
        Private columnCLIENT_NEUROLOGICAL As Global.System.Data.DataColumn
        
        Private columnCLIENT_DDISORDER As Global.System.Data.DataColumn
        
        Private columnCLIENT_PSYCHOLOGICAL As Global.System.Data.DataColumn
        
        Private columnDIAGNOSIS_ID As Global.System.Data.DataColumn
        
        Private columnDIAGNOSIS As Global.System.Data.DataColumn
        
        Private columnNUMBER_VISIT As Global.System.Data.DataColumn
        
        Private columnMAIN_THERAPY_ID As Global.System.Data.DataColumn
        
        Private columnMAIN_THERAPY_NAME As Global.System.Data.DataColumn
        
        Private columnCLIENT_OLD_NO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CCAMH_VIEW_ADVISED_CLIENTS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_NAME_KHMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_NAME_KHM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_SEXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_SEX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_AGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_AGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_DOBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_DOB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_DATE_REGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_DATE_REG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_ADVISED_ASSESSMENT_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_ADVISED_ASSESSMENT_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_ADVISED_ASSESSMENTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_ADVISED_ASSESSMENT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_ADDRESS_PHONEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_ADDRESS_PHONE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PROV_ENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROV_EN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DIST_ENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIST_EN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VILL_ENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVILL_EN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COMM_ENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMM_EN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_IS_ASSESS_CHECKEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_IS_ASSESS_CHECKED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_ADVICED_ASSESSMENT_DETAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_ADVICED_ASSESSMENT_DETAIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_ADVICED_ASSESSMENT_NOTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_ADVICED_ASSESSMENT_NOTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FULL_ADDRESS_KHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFULL_ADDRESS_KH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FULL_ADDRESS_ENGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFULL_ADDRESS_ENG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_PSYCHIATRICColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_PSYCHIATRIC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_NEUROLOGICALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_NEUROLOGICAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_DDISORDERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_DDISORDER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_PSYCHOLOGICALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_PSYCHOLOGICAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DIAGNOSIS_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIAGNOSIS_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DIAGNOSISColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIAGNOSIS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMBER_VISITColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMBER_VISIT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MAIN_THERAPY_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMAIN_THERAPY_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MAIN_THERAPY_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMAIN_THERAPY_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_OLD_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_OLD_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CCAMH_VIEW_ADVISED_CLIENTSRow
            Get
                Return CType(Me.Rows(index),CCAMH_VIEW_ADVISED_CLIENTSRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_VIEW_ADVISED_CLIENTSRowChanging As CCAMH_VIEW_ADVISED_CLIENTSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_VIEW_ADVISED_CLIENTSRowChanged As CCAMH_VIEW_ADVISED_CLIENTSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_VIEW_ADVISED_CLIENTSRowDeleting As CCAMH_VIEW_ADVISED_CLIENTSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_VIEW_ADVISED_CLIENTSRowDeleted As CCAMH_VIEW_ADVISED_CLIENTSRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCCAMH_VIEW_ADVISED_CLIENTSRow(ByVal row As CCAMH_VIEW_ADVISED_CLIENTSRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCCAMH_VIEW_ADVISED_CLIENTSRow( _
                    ByVal CLIENT_NO As Decimal,  _
                    ByVal CLIENT_NAME_KHM As String,  _
                    ByVal CLIENT_NAME As String,  _
                    ByVal CLIENT_SEX As String,  _
                    ByVal CLIENT_AGE As Decimal,  _
                    ByVal CLIENT_DOB As Date,  _
                    ByVal CLIENT_DATE_REG As Date,  _
                    ByVal CLIENT_ADVISED_ASSESSMENT_DATE As Date,  _
                    ByVal CLIENT_ADVISED_ASSESSMENT As String,  _
                    ByVal CLIENT_ADDRESS_PHONE As String,  _
                    ByVal PROV_EN As String,  _
                    ByVal DIST_EN As String,  _
                    ByVal VILL_EN As String,  _
                    ByVal COMM_EN As String,  _
                    ByVal CLIENT_IS_ASSESS_CHECKED As Boolean,  _
                    ByVal CLIENT_ADVICED_ASSESSMENT_DETAIL As Boolean,  _
                    ByVal CLIENT_ADVICED_ASSESSMENT_NOTE As String,  _
                    ByVal FULL_ADDRESS_KH As String,  _
                    ByVal FULL_ADDRESS_ENG As String,  _
                    ByVal CLIENT_PSYCHIATRIC As Boolean,  _
                    ByVal CLIENT_NEUROLOGICAL As Boolean,  _
                    ByVal CLIENT_DDISORDER As Boolean,  _
                    ByVal CLIENT_PSYCHOLOGICAL As Boolean,  _
                    ByVal DIAGNOSIS_ID As Decimal,  _
                    ByVal DIAGNOSIS As String,  _
                    ByVal NUMBER_VISIT As Decimal,  _
                    ByVal MAIN_THERAPY_ID As Decimal,  _
                    ByVal MAIN_THERAPY_NAME As String,  _
                    ByVal CLIENT_OLD_NO As String) As CCAMH_VIEW_ADVISED_CLIENTSRow
            Dim rowCCAMH_VIEW_ADVISED_CLIENTSRow As CCAMH_VIEW_ADVISED_CLIENTSRow = CType(Me.NewRow,CCAMH_VIEW_ADVISED_CLIENTSRow)
            Dim columnValuesArray() As Object = New Object() {CLIENT_NO, CLIENT_NAME_KHM, CLIENT_NAME, CLIENT_SEX, CLIENT_AGE, CLIENT_DOB, CLIENT_DATE_REG, CLIENT_ADVISED_ASSESSMENT_DATE, CLIENT_ADVISED_ASSESSMENT, CLIENT_ADDRESS_PHONE, PROV_EN, DIST_EN, VILL_EN, COMM_EN, CLIENT_IS_ASSESS_CHECKED, CLIENT_ADVICED_ASSESSMENT_DETAIL, CLIENT_ADVICED_ASSESSMENT_NOTE, FULL_ADDRESS_KH, FULL_ADDRESS_ENG, CLIENT_PSYCHIATRIC, CLIENT_NEUROLOGICAL, CLIENT_DDISORDER, CLIENT_PSYCHOLOGICAL, DIAGNOSIS_ID, DIAGNOSIS, NUMBER_VISIT, MAIN_THERAPY_ID, MAIN_THERAPY_NAME, CLIENT_OLD_NO}
            rowCCAMH_VIEW_ADVISED_CLIENTSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCCAMH_VIEW_ADVISED_CLIENTSRow)
            Return rowCCAMH_VIEW_ADVISED_CLIENTSRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CCAMH_VIEW_ADVISED_CLIENTSDataTable = CType(MyBase.Clone,CCAMH_VIEW_ADVISED_CLIENTSDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CCAMH_VIEW_ADVISED_CLIENTSDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCLIENT_NO = MyBase.Columns("CLIENT_NO")
            Me.columnCLIENT_NAME_KHM = MyBase.Columns("CLIENT_NAME_KHM")
            Me.columnCLIENT_NAME = MyBase.Columns("CLIENT_NAME")
            Me.columnCLIENT_SEX = MyBase.Columns("CLIENT_SEX")
            Me.columnCLIENT_AGE = MyBase.Columns("CLIENT_AGE")
            Me.columnCLIENT_DOB = MyBase.Columns("CLIENT_DOB")
            Me.columnCLIENT_DATE_REG = MyBase.Columns("CLIENT_DATE_REG")
            Me.columnCLIENT_ADVISED_ASSESSMENT_DATE = MyBase.Columns("CLIENT_ADVISED_ASSESSMENT_DATE")
            Me.columnCLIENT_ADVISED_ASSESSMENT = MyBase.Columns("CLIENT_ADVISED_ASSESSMENT")
            Me.columnCLIENT_ADDRESS_PHONE = MyBase.Columns("CLIENT_ADDRESS_PHONE")
            Me.columnPROV_EN = MyBase.Columns("PROV_EN")
            Me.columnDIST_EN = MyBase.Columns("DIST_EN")
            Me.columnVILL_EN = MyBase.Columns("VILL_EN")
            Me.columnCOMM_EN = MyBase.Columns("COMM_EN")
            Me.columnCLIENT_IS_ASSESS_CHECKED = MyBase.Columns("CLIENT_IS_ASSESS_CHECKED")
            Me.columnCLIENT_ADVICED_ASSESSMENT_DETAIL = MyBase.Columns("CLIENT_ADVICED_ASSESSMENT_DETAIL")
            Me.columnCLIENT_ADVICED_ASSESSMENT_NOTE = MyBase.Columns("CLIENT_ADVICED_ASSESSMENT_NOTE")
            Me.columnFULL_ADDRESS_KH = MyBase.Columns("FULL_ADDRESS_KH")
            Me.columnFULL_ADDRESS_ENG = MyBase.Columns("FULL_ADDRESS_ENG")
            Me.columnCLIENT_PSYCHIATRIC = MyBase.Columns("CLIENT_PSYCHIATRIC")
            Me.columnCLIENT_NEUROLOGICAL = MyBase.Columns("CLIENT_NEUROLOGICAL")
            Me.columnCLIENT_DDISORDER = MyBase.Columns("CLIENT_DDISORDER")
            Me.columnCLIENT_PSYCHOLOGICAL = MyBase.Columns("CLIENT_PSYCHOLOGICAL")
            Me.columnDIAGNOSIS_ID = MyBase.Columns("DIAGNOSIS_ID")
            Me.columnDIAGNOSIS = MyBase.Columns("DIAGNOSIS")
            Me.columnNUMBER_VISIT = MyBase.Columns("NUMBER_VISIT")
            Me.columnMAIN_THERAPY_ID = MyBase.Columns("MAIN_THERAPY_ID")
            Me.columnMAIN_THERAPY_NAME = MyBase.Columns("MAIN_THERAPY_NAME")
            Me.columnCLIENT_OLD_NO = MyBase.Columns("CLIENT_OLD_NO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCLIENT_NO = New Global.System.Data.DataColumn("CLIENT_NO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_NO)
            Me.columnCLIENT_NAME_KHM = New Global.System.Data.DataColumn("CLIENT_NAME_KHM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_NAME_KHM)
            Me.columnCLIENT_NAME = New Global.System.Data.DataColumn("CLIENT_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_NAME)
            Me.columnCLIENT_SEX = New Global.System.Data.DataColumn("CLIENT_SEX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_SEX)
            Me.columnCLIENT_AGE = New Global.System.Data.DataColumn("CLIENT_AGE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_AGE)
            Me.columnCLIENT_DOB = New Global.System.Data.DataColumn("CLIENT_DOB", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_DOB)
            Me.columnCLIENT_DATE_REG = New Global.System.Data.DataColumn("CLIENT_DATE_REG", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_DATE_REG)
            Me.columnCLIENT_ADVISED_ASSESSMENT_DATE = New Global.System.Data.DataColumn("CLIENT_ADVISED_ASSESSMENT_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_ADVISED_ASSESSMENT_DATE)
            Me.columnCLIENT_ADVISED_ASSESSMENT = New Global.System.Data.DataColumn("CLIENT_ADVISED_ASSESSMENT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_ADVISED_ASSESSMENT)
            Me.columnCLIENT_ADDRESS_PHONE = New Global.System.Data.DataColumn("CLIENT_ADDRESS_PHONE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_ADDRESS_PHONE)
            Me.columnPROV_EN = New Global.System.Data.DataColumn("PROV_EN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROV_EN)
            Me.columnDIST_EN = New Global.System.Data.DataColumn("DIST_EN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIST_EN)
            Me.columnVILL_EN = New Global.System.Data.DataColumn("VILL_EN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVILL_EN)
            Me.columnCOMM_EN = New Global.System.Data.DataColumn("COMM_EN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMM_EN)
            Me.columnCLIENT_IS_ASSESS_CHECKED = New Global.System.Data.DataColumn("CLIENT_IS_ASSESS_CHECKED", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_IS_ASSESS_CHECKED)
            Me.columnCLIENT_ADVICED_ASSESSMENT_DETAIL = New Global.System.Data.DataColumn("CLIENT_ADVICED_ASSESSMENT_DETAIL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_ADVICED_ASSESSMENT_DETAIL)
            Me.columnCLIENT_ADVICED_ASSESSMENT_NOTE = New Global.System.Data.DataColumn("CLIENT_ADVICED_ASSESSMENT_NOTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_ADVICED_ASSESSMENT_NOTE)
            Me.columnFULL_ADDRESS_KH = New Global.System.Data.DataColumn("FULL_ADDRESS_KH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFULL_ADDRESS_KH)
            Me.columnFULL_ADDRESS_ENG = New Global.System.Data.DataColumn("FULL_ADDRESS_ENG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFULL_ADDRESS_ENG)
            Me.columnCLIENT_PSYCHIATRIC = New Global.System.Data.DataColumn("CLIENT_PSYCHIATRIC", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_PSYCHIATRIC)
            Me.columnCLIENT_NEUROLOGICAL = New Global.System.Data.DataColumn("CLIENT_NEUROLOGICAL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_NEUROLOGICAL)
            Me.columnCLIENT_DDISORDER = New Global.System.Data.DataColumn("CLIENT_DDISORDER", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_DDISORDER)
            Me.columnCLIENT_PSYCHOLOGICAL = New Global.System.Data.DataColumn("CLIENT_PSYCHOLOGICAL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_PSYCHOLOGICAL)
            Me.columnDIAGNOSIS_ID = New Global.System.Data.DataColumn("DIAGNOSIS_ID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIAGNOSIS_ID)
            Me.columnDIAGNOSIS = New Global.System.Data.DataColumn("DIAGNOSIS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIAGNOSIS)
            Me.columnNUMBER_VISIT = New Global.System.Data.DataColumn("NUMBER_VISIT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMBER_VISIT)
            Me.columnMAIN_THERAPY_ID = New Global.System.Data.DataColumn("MAIN_THERAPY_ID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMAIN_THERAPY_ID)
            Me.columnMAIN_THERAPY_NAME = New Global.System.Data.DataColumn("MAIN_THERAPY_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMAIN_THERAPY_NAME)
            Me.columnCLIENT_OLD_NO = New Global.System.Data.DataColumn("CLIENT_OLD_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_OLD_NO)
            Me.columnCLIENT_NO.AllowDBNull = false
            Me.columnCLIENT_NAME_KHM.MaxLength = 100
            Me.columnCLIENT_NAME.MaxLength = 100
            Me.columnCLIENT_SEX.MaxLength = 1
            Me.columnCLIENT_ADVISED_ASSESSMENT.MaxLength = 50
            Me.columnCLIENT_ADDRESS_PHONE.MaxLength = 150
            Me.columnPROV_EN.MaxLength = 50
            Me.columnDIST_EN.MaxLength = 50
            Me.columnVILL_EN.MaxLength = 50
            Me.columnCOMM_EN.MaxLength = 50
            Me.columnCLIENT_ADVICED_ASSESSMENT_NOTE.MaxLength = 250
            Me.columnFULL_ADDRESS_KH.ReadOnly = true
            Me.columnFULL_ADDRESS_KH.MaxLength = 231
            Me.columnFULL_ADDRESS_ENG.ReadOnly = true
            Me.columnFULL_ADDRESS_ENG.MaxLength = 245
            Me.columnDIAGNOSIS.MaxLength = 250
            Me.columnMAIN_THERAPY_NAME.MaxLength = 150
            Me.columnCLIENT_OLD_NO.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCCAMH_VIEW_ADVISED_CLIENTSRow() As CCAMH_VIEW_ADVISED_CLIENTSRow
            Return CType(Me.NewRow,CCAMH_VIEW_ADVISED_CLIENTSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CCAMH_VIEW_ADVISED_CLIENTSRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CCAMH_VIEW_ADVISED_CLIENTSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CCAMH_VIEW_ADVISED_CLIENTSRowChangedEvent) Is Nothing) Then
                RaiseEvent CCAMH_VIEW_ADVISED_CLIENTSRowChanged(Me, New CCAMH_VIEW_ADVISED_CLIENTSRowChangeEvent(CType(e.Row,CCAMH_VIEW_ADVISED_CLIENTSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CCAMH_VIEW_ADVISED_CLIENTSRowChangingEvent) Is Nothing) Then
                RaiseEvent CCAMH_VIEW_ADVISED_CLIENTSRowChanging(Me, New CCAMH_VIEW_ADVISED_CLIENTSRowChangeEvent(CType(e.Row,CCAMH_VIEW_ADVISED_CLIENTSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CCAMH_VIEW_ADVISED_CLIENTSRowDeletedEvent) Is Nothing) Then
                RaiseEvent CCAMH_VIEW_ADVISED_CLIENTSRowDeleted(Me, New CCAMH_VIEW_ADVISED_CLIENTSRowChangeEvent(CType(e.Row,CCAMH_VIEW_ADVISED_CLIENTSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CCAMH_VIEW_ADVISED_CLIENTSRowDeletingEvent) Is Nothing) Then
                RaiseEvent CCAMH_VIEW_ADVISED_CLIENTSRowDeleting(Me, New CCAMH_VIEW_ADVISED_CLIENTSRowChangeEvent(CType(e.Row,CCAMH_VIEW_ADVISED_CLIENTSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCCAMH_VIEW_ADVISED_CLIENTSRow(ByVal row As CCAMH_VIEW_ADVISED_CLIENTSRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_ClientImpression = New DS_ClientImpression()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CCAMH_VIEW_ADVISED_CLIENTSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CLIENT_CA_SOCIALDataTable
        Inherits Global.System.Data.TypedTableBase(Of CLIENT_CA_SOCIALRow)
        
        Private columnCLIENT_SOCIAL_ID As Global.System.Data.DataColumn
        
        Private columnCLIENT_NO As Global.System.Data.DataColumn
        
        Private columnCLIENT_COMORBIDITY As Global.System.Data.DataColumn
        
        Private columnCLIENT_CLINICAL_AUDIT As Global.System.Data.DataColumn
        
        Private columnCLIENT_POVERTY_CARD As Global.System.Data.DataColumn
        
        Private columnCLIENT_POVERTY_OTHERS As Global.System.Data.DataColumn
        
        Private columnCLIENT_UNIT_ALL_1 As Global.System.Data.DataColumn
        
        Private columnCLIENT_UNIT_ALL_2 As Global.System.Data.DataColumn
        
        Private columnCLIENT_SOCIAL_SERVICETYPE As Global.System.Data.DataColumn
        
        Private columnCLIENT_REFER_TO As Global.System.Data.DataColumn
        
        Private columnCLIENT_SOCIAL_WORKER As Global.System.Data.DataColumn
        
        Private columnCLIENT_CC_NP_FIT As Global.System.Data.DataColumn
        
        Private columnCLIENT_CC_NP_JERK As Global.System.Data.DataColumn
        
        Private columnCLIENT_CC_NP_BSPELLS As Global.System.Data.DataColumn
        
        Private columnCLIENT_CC_NP_HSHAKING As Global.System.Data.DataColumn
        
        Private columnCLIENT_CC_NP_EYE_BLINK As Global.System.Data.DataColumn
        
        Private columnCLIENT_CC_NP_OS_WEAK As Global.System.Data.DataColumn
        
        Private columnCLIENT_CC_NP_OTHER As Global.System.Data.DataColumn
        
        Private columnCLIENT_CC_PP_HEADACHE As Global.System.Data.DataColumn
        
        Private columnCLIENT_CC_PP_FEAR As Global.System.Data.DataColumn
        
        Private columnCLIENT_CC_PP_THINK As Global.System.Data.DataColumn
        
        Private columnCLIENT_CC_PP_WORRY As Global.System.Data.DataColumn
        
        Private columnCLIENT_CC_PP_STEAL As Global.System.Data.DataColumn
        
        Private columnCLIENT_CC_PP_DISOBE As Global.System.Data.DataColumn
        
        Private columnCLIENT_CC_PP_LIE As Global.System.Data.DataColumn
        
        Private columnCLIENT_CC_PP_ANGRY As Global.System.Data.DataColumn
        
        Private columnCLIENT_CC_PP_IRRIT As Global.System.Data.DataColumn
        
        Private columnCLIENT_CC_PP_SDIFFICULTY As Global.System.Data.DataColumn
        
        Private columnCLIENT_CC_PP_FAINTING As Global.System.Data.DataColumn
        
        Private columnCLIENT_CC_PP_OTHER As Global.System.Data.DataColumn
        
        Private columnCLIENT_CC_MAJOR_TALK As Global.System.Data.DataColumn
        
        Private columnCLIENT_CC_MAJOR_LAUGH As Global.System.Data.DataColumn
        
        Private columnCLIENT_CC_MAJOR_STRAIGHT As Global.System.Data.DataColumn
        
        Private columnCLIENT_CC_MAJOR_AGGR As Global.System.Data.DataColumn
        
        Private columnCLIENT_CC_MAJOR_SDISTURB As Global.System.Data.DataColumn
        
        Private columnCLIENT_CC_MAJOR_APPETITE As Global.System.Data.DataColumn
        
        Private columnCLIENT_CC_MAJOR_SHYNESS As Global.System.Data.DataColumn
        
        Private columnCLIENT_CC_MAJOR_BREAK As Global.System.Data.DataColumn
        
        Private columnCLIENT_CC_MAJOR_GOAWAY As Global.System.Data.DataColumn
        
        Private columnCLIENT_CC_MAJOR_OTHER As Global.System.Data.DataColumn
        
        Private columnCLIENT_CC_DD_NOTALK As Global.System.Data.DataColumn
        
        Private columnCLIENT_CC_DD_NOWALK As Global.System.Data.DataColumn
        
        Private columnCLIENT_CC_DD_PLAYALONE As Global.System.Data.DataColumn
        
        Private columnCLIENT_CC_DD_BEAT As Global.System.Data.DataColumn
        
        Private columnCLIENT_CC_DD_NORESPOND As Global.System.Data.DataColumn
        
        Private columnCLIENT_CC_DD_TIP As Global.System.Data.DataColumn
        
        Private columnCLIENT_CC_DD_POORMEM As Global.System.Data.DataColumn
        
        Private columnCLIENT_CC_DD_POORUNDER As Global.System.Data.DataColumn
        
        Private columnCLIENT_CC_DD_POORSTUDY As Global.System.Data.DataColumn
        
        Private columnCLIENT_CC_DD_THROWING As Global.System.Data.DataColumn
        
        Private columnCLIENT_CC_DD_DROOLING As Global.System.Data.DataColumn
        
        Private columnCLIENT_CC_DD_NONECK As Global.System.Data.DataColumn
        
        Private columnCLIENT_CC_DD_OTHER As Global.System.Data.DataColumn
        
        Private columnCLIENT_PSYCHIATRIC As Global.System.Data.DataColumn
        
        Private columnCLIENT_NEUROLOGICAL As Global.System.Data.DataColumn
        
        Private columnCLIENT_DDISORDER As Global.System.Data.DataColumn
        
        Private columnCLIENT_PSYCHOLOGICAL As Global.System.Data.DataColumn
        
        Private columnCLIENT_ADVISED_ASSESSMENT As Global.System.Data.DataColumn
        
        Private columnCLIENT_ADVISED_ASSESSMENT_DATE As Global.System.Data.DataColumn
        
        Private columnCLIENT_ADVICED_ASSESSMENT_NOTE As Global.System.Data.DataColumn
        
        Private columnCLIENT_ADVICED_ASSESSMENT_DETAIL As Global.System.Data.DataColumn
        
        Private columnCLIENT_NP_NOTES As Global.System.Data.DataColumn
        
        Private columnCLIENT_PP_NOTES As Global.System.Data.DataColumn
        
        Private columnCLIENT_DD_NOTES As Global.System.Data.DataColumn
        
        Private columnCLIENT_IS_ASSESS_CHECKED As Global.System.Data.DataColumn
        
        Private columnMAIN_THERAPY_ID As Global.System.Data.DataColumn
        
        Private columnMAIN_THERAPY_NAME As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CLIENT_CA_SOCIAL"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_SOCIAL_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_SOCIAL_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_COMORBIDITYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_COMORBIDITY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_CLINICAL_AUDITColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_CLINICAL_AUDIT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_POVERTY_CARDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_POVERTY_CARD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_POVERTY_OTHERSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_POVERTY_OTHERS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_UNIT_ALL_1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_UNIT_ALL_1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_UNIT_ALL_2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_UNIT_ALL_2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_SOCIAL_SERVICETYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_SOCIAL_SERVICETYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_REFER_TOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_REFER_TO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_SOCIAL_WORKERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_SOCIAL_WORKER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_CC_NP_FITColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_CC_NP_FIT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_CC_NP_JERKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_CC_NP_JERK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_CC_NP_BSPELLSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_CC_NP_BSPELLS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_CC_NP_HSHAKINGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_CC_NP_HSHAKING
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_CC_NP_EYE_BLINKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_CC_NP_EYE_BLINK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_CC_NP_OS_WEAKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_CC_NP_OS_WEAK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_CC_NP_OTHERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_CC_NP_OTHER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_CC_PP_HEADACHEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_CC_PP_HEADACHE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_CC_PP_FEARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_CC_PP_FEAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_CC_PP_THINKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_CC_PP_THINK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_CC_PP_WORRYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_CC_PP_WORRY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_CC_PP_STEALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_CC_PP_STEAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_CC_PP_DISOBEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_CC_PP_DISOBE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_CC_PP_LIEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_CC_PP_LIE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_CC_PP_ANGRYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_CC_PP_ANGRY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_CC_PP_IRRITColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_CC_PP_IRRIT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_CC_PP_SDIFFICULTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_CC_PP_SDIFFICULTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_CC_PP_FAINTINGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_CC_PP_FAINTING
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_CC_PP_OTHERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_CC_PP_OTHER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_CC_MAJOR_TALKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_CC_MAJOR_TALK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_CC_MAJOR_LAUGHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_CC_MAJOR_LAUGH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_CC_MAJOR_STRAIGHTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_CC_MAJOR_STRAIGHT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_CC_MAJOR_AGGRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_CC_MAJOR_AGGR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_CC_MAJOR_SDISTURBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_CC_MAJOR_SDISTURB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_CC_MAJOR_APPETITEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_CC_MAJOR_APPETITE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_CC_MAJOR_SHYNESSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_CC_MAJOR_SHYNESS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_CC_MAJOR_BREAKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_CC_MAJOR_BREAK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_CC_MAJOR_GOAWAYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_CC_MAJOR_GOAWAY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_CC_MAJOR_OTHERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_CC_MAJOR_OTHER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_CC_DD_NOTALKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_CC_DD_NOTALK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_CC_DD_NOWALKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_CC_DD_NOWALK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_CC_DD_PLAYALONEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_CC_DD_PLAYALONE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_CC_DD_BEATColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_CC_DD_BEAT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_CC_DD_NORESPONDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_CC_DD_NORESPOND
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_CC_DD_TIPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_CC_DD_TIP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_CC_DD_POORMEMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_CC_DD_POORMEM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_CC_DD_POORUNDERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_CC_DD_POORUNDER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_CC_DD_POORSTUDYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_CC_DD_POORSTUDY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_CC_DD_THROWINGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_CC_DD_THROWING
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_CC_DD_DROOLINGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_CC_DD_DROOLING
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_CC_DD_NONECKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_CC_DD_NONECK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_CC_DD_OTHERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_CC_DD_OTHER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_PSYCHIATRICColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_PSYCHIATRIC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_NEUROLOGICALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_NEUROLOGICAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_DDISORDERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_DDISORDER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_PSYCHOLOGICALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_PSYCHOLOGICAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_ADVISED_ASSESSMENTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_ADVISED_ASSESSMENT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_ADVISED_ASSESSMENT_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_ADVISED_ASSESSMENT_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_ADVICED_ASSESSMENT_NOTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_ADVICED_ASSESSMENT_NOTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_ADVICED_ASSESSMENT_DETAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_ADVICED_ASSESSMENT_DETAIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_NP_NOTESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_NP_NOTES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_PP_NOTESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_PP_NOTES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_DD_NOTESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_DD_NOTES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_IS_ASSESS_CHECKEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_IS_ASSESS_CHECKED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MAIN_THERAPY_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMAIN_THERAPY_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MAIN_THERAPY_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMAIN_THERAPY_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CLIENT_CA_SOCIALRow
            Get
                Return CType(Me.Rows(index),CLIENT_CA_SOCIALRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CLIENT_CA_SOCIALRowChanging As CLIENT_CA_SOCIALRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CLIENT_CA_SOCIALRowChanged As CLIENT_CA_SOCIALRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CLIENT_CA_SOCIALRowDeleting As CLIENT_CA_SOCIALRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CLIENT_CA_SOCIALRowDeleted As CLIENT_CA_SOCIALRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCLIENT_CA_SOCIALRow(ByVal row As CLIENT_CA_SOCIALRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCLIENT_CA_SOCIALRow( _
                    ByVal CLIENT_NO As Decimal,  _
                    ByVal CLIENT_COMORBIDITY As Boolean,  _
                    ByVal CLIENT_CLINICAL_AUDIT As Boolean,  _
                    ByVal CLIENT_POVERTY_CARD As Boolean,  _
                    ByVal CLIENT_POVERTY_OTHERS As String,  _
                    ByVal CLIENT_UNIT_ALL_1 As Decimal,  _
                    ByVal CLIENT_UNIT_ALL_2 As Decimal,  _
                    ByVal CLIENT_SOCIAL_SERVICETYPE As String,  _
                    ByVal CLIENT_REFER_TO As String,  _
                    ByVal CLIENT_SOCIAL_WORKER As String,  _
                    ByVal CLIENT_CC_NP_FIT As Boolean,  _
                    ByVal CLIENT_CC_NP_JERK As Boolean,  _
                    ByVal CLIENT_CC_NP_BSPELLS As Boolean,  _
                    ByVal CLIENT_CC_NP_HSHAKING As Boolean,  _
                    ByVal CLIENT_CC_NP_EYE_BLINK As Boolean,  _
                    ByVal CLIENT_CC_NP_OS_WEAK As Boolean,  _
                    ByVal CLIENT_CC_NP_OTHER As Boolean,  _
                    ByVal CLIENT_CC_PP_HEADACHE As Boolean,  _
                    ByVal CLIENT_CC_PP_FEAR As Boolean,  _
                    ByVal CLIENT_CC_PP_THINK As Boolean,  _
                    ByVal CLIENT_CC_PP_WORRY As Boolean,  _
                    ByVal CLIENT_CC_PP_STEAL As Boolean,  _
                    ByVal CLIENT_CC_PP_DISOBE As Boolean,  _
                    ByVal CLIENT_CC_PP_LIE As Boolean,  _
                    ByVal CLIENT_CC_PP_ANGRY As Boolean,  _
                    ByVal CLIENT_CC_PP_IRRIT As Boolean,  _
                    ByVal CLIENT_CC_PP_SDIFFICULTY As Boolean,  _
                    ByVal CLIENT_CC_PP_FAINTING As Boolean,  _
                    ByVal CLIENT_CC_PP_OTHER As Boolean,  _
                    ByVal CLIENT_CC_MAJOR_TALK As Boolean,  _
                    ByVal CLIENT_CC_MAJOR_LAUGH As Boolean,  _
                    ByVal CLIENT_CC_MAJOR_STRAIGHT As Boolean,  _
                    ByVal CLIENT_CC_MAJOR_AGGR As Boolean,  _
                    ByVal CLIENT_CC_MAJOR_SDISTURB As Boolean,  _
                    ByVal CLIENT_CC_MAJOR_APPETITE As Boolean,  _
                    ByVal CLIENT_CC_MAJOR_SHYNESS As Boolean,  _
                    ByVal CLIENT_CC_MAJOR_BREAK As Boolean,  _
                    ByVal CLIENT_CC_MAJOR_GOAWAY As Boolean,  _
                    ByVal CLIENT_CC_MAJOR_OTHER As Boolean,  _
                    ByVal CLIENT_CC_DD_NOTALK As Boolean,  _
                    ByVal CLIENT_CC_DD_NOWALK As Boolean,  _
                    ByVal CLIENT_CC_DD_PLAYALONE As Boolean,  _
                    ByVal CLIENT_CC_DD_BEAT As Boolean,  _
                    ByVal CLIENT_CC_DD_NORESPOND As Boolean,  _
                    ByVal CLIENT_CC_DD_TIP As Boolean,  _
                    ByVal CLIENT_CC_DD_POORMEM As Boolean,  _
                    ByVal CLIENT_CC_DD_POORUNDER As Boolean,  _
                    ByVal CLIENT_CC_DD_POORSTUDY As Boolean,  _
                    ByVal CLIENT_CC_DD_THROWING As Boolean,  _
                    ByVal CLIENT_CC_DD_DROOLING As Boolean,  _
                    ByVal CLIENT_CC_DD_NONECK As Boolean,  _
                    ByVal CLIENT_CC_DD_OTHER As Boolean,  _
                    ByVal CLIENT_PSYCHIATRIC As Boolean,  _
                    ByVal CLIENT_NEUROLOGICAL As Boolean,  _
                    ByVal CLIENT_DDISORDER As Boolean,  _
                    ByVal CLIENT_PSYCHOLOGICAL As Boolean,  _
                    ByVal CLIENT_ADVISED_ASSESSMENT As String,  _
                    ByVal CLIENT_ADVISED_ASSESSMENT_DATE As Date,  _
                    ByVal CLIENT_ADVICED_ASSESSMENT_NOTE As String,  _
                    ByVal CLIENT_ADVICED_ASSESSMENT_DETAIL As Boolean,  _
                    ByVal CLIENT_NP_NOTES As String,  _
                    ByVal CLIENT_PP_NOTES As String,  _
                    ByVal CLIENT_DD_NOTES As String,  _
                    ByVal CLIENT_IS_ASSESS_CHECKED As Boolean,  _
                    ByVal MAIN_THERAPY_ID As Decimal,  _
                    ByVal MAIN_THERAPY_NAME As String) As CLIENT_CA_SOCIALRow
            Dim rowCLIENT_CA_SOCIALRow As CLIENT_CA_SOCIALRow = CType(Me.NewRow,CLIENT_CA_SOCIALRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, CLIENT_NO, CLIENT_COMORBIDITY, CLIENT_CLINICAL_AUDIT, CLIENT_POVERTY_CARD, CLIENT_POVERTY_OTHERS, CLIENT_UNIT_ALL_1, CLIENT_UNIT_ALL_2, CLIENT_SOCIAL_SERVICETYPE, CLIENT_REFER_TO, CLIENT_SOCIAL_WORKER, CLIENT_CC_NP_FIT, CLIENT_CC_NP_JERK, CLIENT_CC_NP_BSPELLS, CLIENT_CC_NP_HSHAKING, CLIENT_CC_NP_EYE_BLINK, CLIENT_CC_NP_OS_WEAK, CLIENT_CC_NP_OTHER, CLIENT_CC_PP_HEADACHE, CLIENT_CC_PP_FEAR, CLIENT_CC_PP_THINK, CLIENT_CC_PP_WORRY, CLIENT_CC_PP_STEAL, CLIENT_CC_PP_DISOBE, CLIENT_CC_PP_LIE, CLIENT_CC_PP_ANGRY, CLIENT_CC_PP_IRRIT, CLIENT_CC_PP_SDIFFICULTY, CLIENT_CC_PP_FAINTING, CLIENT_CC_PP_OTHER, CLIENT_CC_MAJOR_TALK, CLIENT_CC_MAJOR_LAUGH, CLIENT_CC_MAJOR_STRAIGHT, CLIENT_CC_MAJOR_AGGR, CLIENT_CC_MAJOR_SDISTURB, CLIENT_CC_MAJOR_APPETITE, CLIENT_CC_MAJOR_SHYNESS, CLIENT_CC_MAJOR_BREAK, CLIENT_CC_MAJOR_GOAWAY, CLIENT_CC_MAJOR_OTHER, CLIENT_CC_DD_NOTALK, CLIENT_CC_DD_NOWALK, CLIENT_CC_DD_PLAYALONE, CLIENT_CC_DD_BEAT, CLIENT_CC_DD_NORESPOND, CLIENT_CC_DD_TIP, CLIENT_CC_DD_POORMEM, CLIENT_CC_DD_POORUNDER, CLIENT_CC_DD_POORSTUDY, CLIENT_CC_DD_THROWING, CLIENT_CC_DD_DROOLING, CLIENT_CC_DD_NONECK, CLIENT_CC_DD_OTHER, CLIENT_PSYCHIATRIC, CLIENT_NEUROLOGICAL, CLIENT_DDISORDER, CLIENT_PSYCHOLOGICAL, CLIENT_ADVISED_ASSESSMENT, CLIENT_ADVISED_ASSESSMENT_DATE, CLIENT_ADVICED_ASSESSMENT_NOTE, CLIENT_ADVICED_ASSESSMENT_DETAIL, CLIENT_NP_NOTES, CLIENT_PP_NOTES, CLIENT_DD_NOTES, CLIENT_IS_ASSESS_CHECKED, MAIN_THERAPY_ID, MAIN_THERAPY_NAME}
            rowCLIENT_CA_SOCIALRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCLIENT_CA_SOCIALRow)
            Return rowCLIENT_CA_SOCIALRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCLIENT_SOCIAL_ID(ByVal CLIENT_SOCIAL_ID As Decimal) As CLIENT_CA_SOCIALRow
            Return CType(Me.Rows.Find(New Object() {CLIENT_SOCIAL_ID}),CLIENT_CA_SOCIALRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CLIENT_CA_SOCIALDataTable = CType(MyBase.Clone,CLIENT_CA_SOCIALDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CLIENT_CA_SOCIALDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCLIENT_SOCIAL_ID = MyBase.Columns("CLIENT_SOCIAL_ID")
            Me.columnCLIENT_NO = MyBase.Columns("CLIENT_NO")
            Me.columnCLIENT_COMORBIDITY = MyBase.Columns("CLIENT_COMORBIDITY")
            Me.columnCLIENT_CLINICAL_AUDIT = MyBase.Columns("CLIENT_CLINICAL_AUDIT")
            Me.columnCLIENT_POVERTY_CARD = MyBase.Columns("CLIENT_POVERTY_CARD")
            Me.columnCLIENT_POVERTY_OTHERS = MyBase.Columns("CLIENT_POVERTY_OTHERS")
            Me.columnCLIENT_UNIT_ALL_1 = MyBase.Columns("CLIENT_UNIT_ALL_1")
            Me.columnCLIENT_UNIT_ALL_2 = MyBase.Columns("CLIENT_UNIT_ALL_2")
            Me.columnCLIENT_SOCIAL_SERVICETYPE = MyBase.Columns("CLIENT_SOCIAL_SERVICETYPE")
            Me.columnCLIENT_REFER_TO = MyBase.Columns("CLIENT_REFER_TO")
            Me.columnCLIENT_SOCIAL_WORKER = MyBase.Columns("CLIENT_SOCIAL_WORKER")
            Me.columnCLIENT_CC_NP_FIT = MyBase.Columns("CLIENT_CC_NP_FIT")
            Me.columnCLIENT_CC_NP_JERK = MyBase.Columns("CLIENT_CC_NP_JERK")
            Me.columnCLIENT_CC_NP_BSPELLS = MyBase.Columns("CLIENT_CC_NP_BSPELLS")
            Me.columnCLIENT_CC_NP_HSHAKING = MyBase.Columns("CLIENT_CC_NP_HSHAKING")
            Me.columnCLIENT_CC_NP_EYE_BLINK = MyBase.Columns("CLIENT_CC_NP_EYE_BLINK")
            Me.columnCLIENT_CC_NP_OS_WEAK = MyBase.Columns("CLIENT_CC_NP_OS_WEAK")
            Me.columnCLIENT_CC_NP_OTHER = MyBase.Columns("CLIENT_CC_NP_OTHER")
            Me.columnCLIENT_CC_PP_HEADACHE = MyBase.Columns("CLIENT_CC_PP_HEADACHE")
            Me.columnCLIENT_CC_PP_FEAR = MyBase.Columns("CLIENT_CC_PP_FEAR")
            Me.columnCLIENT_CC_PP_THINK = MyBase.Columns("CLIENT_CC_PP_THINK")
            Me.columnCLIENT_CC_PP_WORRY = MyBase.Columns("CLIENT_CC_PP_WORRY")
            Me.columnCLIENT_CC_PP_STEAL = MyBase.Columns("CLIENT_CC_PP_STEAL")
            Me.columnCLIENT_CC_PP_DISOBE = MyBase.Columns("CLIENT_CC_PP_DISOBE")
            Me.columnCLIENT_CC_PP_LIE = MyBase.Columns("CLIENT_CC_PP_LIE")
            Me.columnCLIENT_CC_PP_ANGRY = MyBase.Columns("CLIENT_CC_PP_ANGRY")
            Me.columnCLIENT_CC_PP_IRRIT = MyBase.Columns("CLIENT_CC_PP_IRRIT")
            Me.columnCLIENT_CC_PP_SDIFFICULTY = MyBase.Columns("CLIENT_CC_PP_SDIFFICULTY")
            Me.columnCLIENT_CC_PP_FAINTING = MyBase.Columns("CLIENT_CC_PP_FAINTING")
            Me.columnCLIENT_CC_PP_OTHER = MyBase.Columns("CLIENT_CC_PP_OTHER")
            Me.columnCLIENT_CC_MAJOR_TALK = MyBase.Columns("CLIENT_CC_MAJOR_TALK")
            Me.columnCLIENT_CC_MAJOR_LAUGH = MyBase.Columns("CLIENT_CC_MAJOR_LAUGH")
            Me.columnCLIENT_CC_MAJOR_STRAIGHT = MyBase.Columns("CLIENT_CC_MAJOR_STRAIGHT")
            Me.columnCLIENT_CC_MAJOR_AGGR = MyBase.Columns("CLIENT_CC_MAJOR_AGGR")
            Me.columnCLIENT_CC_MAJOR_SDISTURB = MyBase.Columns("CLIENT_CC_MAJOR_SDISTURB")
            Me.columnCLIENT_CC_MAJOR_APPETITE = MyBase.Columns("CLIENT_CC_MAJOR_APPETITE")
            Me.columnCLIENT_CC_MAJOR_SHYNESS = MyBase.Columns("CLIENT_CC_MAJOR_SHYNESS")
            Me.columnCLIENT_CC_MAJOR_BREAK = MyBase.Columns("CLIENT_CC_MAJOR_BREAK")
            Me.columnCLIENT_CC_MAJOR_GOAWAY = MyBase.Columns("CLIENT_CC_MAJOR_GOAWAY")
            Me.columnCLIENT_CC_MAJOR_OTHER = MyBase.Columns("CLIENT_CC_MAJOR_OTHER")
            Me.columnCLIENT_CC_DD_NOTALK = MyBase.Columns("CLIENT_CC_DD_NOTALK")
            Me.columnCLIENT_CC_DD_NOWALK = MyBase.Columns("CLIENT_CC_DD_NOWALK")
            Me.columnCLIENT_CC_DD_PLAYALONE = MyBase.Columns("CLIENT_CC_DD_PLAYALONE")
            Me.columnCLIENT_CC_DD_BEAT = MyBase.Columns("CLIENT_CC_DD_BEAT")
            Me.columnCLIENT_CC_DD_NORESPOND = MyBase.Columns("CLIENT_CC_DD_NORESPOND")
            Me.columnCLIENT_CC_DD_TIP = MyBase.Columns("CLIENT_CC_DD_TIP")
            Me.columnCLIENT_CC_DD_POORMEM = MyBase.Columns("CLIENT_CC_DD_POORMEM")
            Me.columnCLIENT_CC_DD_POORUNDER = MyBase.Columns("CLIENT_CC_DD_POORUNDER")
            Me.columnCLIENT_CC_DD_POORSTUDY = MyBase.Columns("CLIENT_CC_DD_POORSTUDY")
            Me.columnCLIENT_CC_DD_THROWING = MyBase.Columns("CLIENT_CC_DD_THROWING")
            Me.columnCLIENT_CC_DD_DROOLING = MyBase.Columns("CLIENT_CC_DD_DROOLING")
            Me.columnCLIENT_CC_DD_NONECK = MyBase.Columns("CLIENT_CC_DD_NONECK")
            Me.columnCLIENT_CC_DD_OTHER = MyBase.Columns("CLIENT_CC_DD_OTHER")
            Me.columnCLIENT_PSYCHIATRIC = MyBase.Columns("CLIENT_PSYCHIATRIC")
            Me.columnCLIENT_NEUROLOGICAL = MyBase.Columns("CLIENT_NEUROLOGICAL")
            Me.columnCLIENT_DDISORDER = MyBase.Columns("CLIENT_DDISORDER")
            Me.columnCLIENT_PSYCHOLOGICAL = MyBase.Columns("CLIENT_PSYCHOLOGICAL")
            Me.columnCLIENT_ADVISED_ASSESSMENT = MyBase.Columns("CLIENT_ADVISED_ASSESSMENT")
            Me.columnCLIENT_ADVISED_ASSESSMENT_DATE = MyBase.Columns("CLIENT_ADVISED_ASSESSMENT_DATE")
            Me.columnCLIENT_ADVICED_ASSESSMENT_NOTE = MyBase.Columns("CLIENT_ADVICED_ASSESSMENT_NOTE")
            Me.columnCLIENT_ADVICED_ASSESSMENT_DETAIL = MyBase.Columns("CLIENT_ADVICED_ASSESSMENT_DETAIL")
            Me.columnCLIENT_NP_NOTES = MyBase.Columns("CLIENT_NP_NOTES")
            Me.columnCLIENT_PP_NOTES = MyBase.Columns("CLIENT_PP_NOTES")
            Me.columnCLIENT_DD_NOTES = MyBase.Columns("CLIENT_DD_NOTES")
            Me.columnCLIENT_IS_ASSESS_CHECKED = MyBase.Columns("CLIENT_IS_ASSESS_CHECKED")
            Me.columnMAIN_THERAPY_ID = MyBase.Columns("MAIN_THERAPY_ID")
            Me.columnMAIN_THERAPY_NAME = MyBase.Columns("MAIN_THERAPY_NAME")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCLIENT_SOCIAL_ID = New Global.System.Data.DataColumn("CLIENT_SOCIAL_ID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_SOCIAL_ID)
            Me.columnCLIENT_NO = New Global.System.Data.DataColumn("CLIENT_NO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_NO)
            Me.columnCLIENT_COMORBIDITY = New Global.System.Data.DataColumn("CLIENT_COMORBIDITY", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_COMORBIDITY)
            Me.columnCLIENT_CLINICAL_AUDIT = New Global.System.Data.DataColumn("CLIENT_CLINICAL_AUDIT", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_CLINICAL_AUDIT)
            Me.columnCLIENT_POVERTY_CARD = New Global.System.Data.DataColumn("CLIENT_POVERTY_CARD", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_POVERTY_CARD)
            Me.columnCLIENT_POVERTY_OTHERS = New Global.System.Data.DataColumn("CLIENT_POVERTY_OTHERS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_POVERTY_OTHERS)
            Me.columnCLIENT_UNIT_ALL_1 = New Global.System.Data.DataColumn("CLIENT_UNIT_ALL_1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_UNIT_ALL_1)
            Me.columnCLIENT_UNIT_ALL_2 = New Global.System.Data.DataColumn("CLIENT_UNIT_ALL_2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_UNIT_ALL_2)
            Me.columnCLIENT_SOCIAL_SERVICETYPE = New Global.System.Data.DataColumn("CLIENT_SOCIAL_SERVICETYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_SOCIAL_SERVICETYPE)
            Me.columnCLIENT_REFER_TO = New Global.System.Data.DataColumn("CLIENT_REFER_TO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_REFER_TO)
            Me.columnCLIENT_SOCIAL_WORKER = New Global.System.Data.DataColumn("CLIENT_SOCIAL_WORKER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_SOCIAL_WORKER)
            Me.columnCLIENT_CC_NP_FIT = New Global.System.Data.DataColumn("CLIENT_CC_NP_FIT", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_CC_NP_FIT)
            Me.columnCLIENT_CC_NP_JERK = New Global.System.Data.DataColumn("CLIENT_CC_NP_JERK", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_CC_NP_JERK)
            Me.columnCLIENT_CC_NP_BSPELLS = New Global.System.Data.DataColumn("CLIENT_CC_NP_BSPELLS", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_CC_NP_BSPELLS)
            Me.columnCLIENT_CC_NP_HSHAKING = New Global.System.Data.DataColumn("CLIENT_CC_NP_HSHAKING", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_CC_NP_HSHAKING)
            Me.columnCLIENT_CC_NP_EYE_BLINK = New Global.System.Data.DataColumn("CLIENT_CC_NP_EYE_BLINK", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_CC_NP_EYE_BLINK)
            Me.columnCLIENT_CC_NP_OS_WEAK = New Global.System.Data.DataColumn("CLIENT_CC_NP_OS_WEAK", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_CC_NP_OS_WEAK)
            Me.columnCLIENT_CC_NP_OTHER = New Global.System.Data.DataColumn("CLIENT_CC_NP_OTHER", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_CC_NP_OTHER)
            Me.columnCLIENT_CC_PP_HEADACHE = New Global.System.Data.DataColumn("CLIENT_CC_PP_HEADACHE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_CC_PP_HEADACHE)
            Me.columnCLIENT_CC_PP_FEAR = New Global.System.Data.DataColumn("CLIENT_CC_PP_FEAR", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_CC_PP_FEAR)
            Me.columnCLIENT_CC_PP_THINK = New Global.System.Data.DataColumn("CLIENT_CC_PP_THINK", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_CC_PP_THINK)
            Me.columnCLIENT_CC_PP_WORRY = New Global.System.Data.DataColumn("CLIENT_CC_PP_WORRY", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_CC_PP_WORRY)
            Me.columnCLIENT_CC_PP_STEAL = New Global.System.Data.DataColumn("CLIENT_CC_PP_STEAL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_CC_PP_STEAL)
            Me.columnCLIENT_CC_PP_DISOBE = New Global.System.Data.DataColumn("CLIENT_CC_PP_DISOBE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_CC_PP_DISOBE)
            Me.columnCLIENT_CC_PP_LIE = New Global.System.Data.DataColumn("CLIENT_CC_PP_LIE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_CC_PP_LIE)
            Me.columnCLIENT_CC_PP_ANGRY = New Global.System.Data.DataColumn("CLIENT_CC_PP_ANGRY", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_CC_PP_ANGRY)
            Me.columnCLIENT_CC_PP_IRRIT = New Global.System.Data.DataColumn("CLIENT_CC_PP_IRRIT", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_CC_PP_IRRIT)
            Me.columnCLIENT_CC_PP_SDIFFICULTY = New Global.System.Data.DataColumn("CLIENT_CC_PP_SDIFFICULTY", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_CC_PP_SDIFFICULTY)
            Me.columnCLIENT_CC_PP_FAINTING = New Global.System.Data.DataColumn("CLIENT_CC_PP_FAINTING", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_CC_PP_FAINTING)
            Me.columnCLIENT_CC_PP_OTHER = New Global.System.Data.DataColumn("CLIENT_CC_PP_OTHER", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_CC_PP_OTHER)
            Me.columnCLIENT_CC_MAJOR_TALK = New Global.System.Data.DataColumn("CLIENT_CC_MAJOR_TALK", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_CC_MAJOR_TALK)
            Me.columnCLIENT_CC_MAJOR_LAUGH = New Global.System.Data.DataColumn("CLIENT_CC_MAJOR_LAUGH", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_CC_MAJOR_LAUGH)
            Me.columnCLIENT_CC_MAJOR_STRAIGHT = New Global.System.Data.DataColumn("CLIENT_CC_MAJOR_STRAIGHT", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_CC_MAJOR_STRAIGHT)
            Me.columnCLIENT_CC_MAJOR_AGGR = New Global.System.Data.DataColumn("CLIENT_CC_MAJOR_AGGR", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_CC_MAJOR_AGGR)
            Me.columnCLIENT_CC_MAJOR_SDISTURB = New Global.System.Data.DataColumn("CLIENT_CC_MAJOR_SDISTURB", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_CC_MAJOR_SDISTURB)
            Me.columnCLIENT_CC_MAJOR_APPETITE = New Global.System.Data.DataColumn("CLIENT_CC_MAJOR_APPETITE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_CC_MAJOR_APPETITE)
            Me.columnCLIENT_CC_MAJOR_SHYNESS = New Global.System.Data.DataColumn("CLIENT_CC_MAJOR_SHYNESS", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_CC_MAJOR_SHYNESS)
            Me.columnCLIENT_CC_MAJOR_BREAK = New Global.System.Data.DataColumn("CLIENT_CC_MAJOR_BREAK", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_CC_MAJOR_BREAK)
            Me.columnCLIENT_CC_MAJOR_GOAWAY = New Global.System.Data.DataColumn("CLIENT_CC_MAJOR_GOAWAY", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_CC_MAJOR_GOAWAY)
            Me.columnCLIENT_CC_MAJOR_OTHER = New Global.System.Data.DataColumn("CLIENT_CC_MAJOR_OTHER", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_CC_MAJOR_OTHER)
            Me.columnCLIENT_CC_DD_NOTALK = New Global.System.Data.DataColumn("CLIENT_CC_DD_NOTALK", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_CC_DD_NOTALK)
            Me.columnCLIENT_CC_DD_NOWALK = New Global.System.Data.DataColumn("CLIENT_CC_DD_NOWALK", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_CC_DD_NOWALK)
            Me.columnCLIENT_CC_DD_PLAYALONE = New Global.System.Data.DataColumn("CLIENT_CC_DD_PLAYALONE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_CC_DD_PLAYALONE)
            Me.columnCLIENT_CC_DD_BEAT = New Global.System.Data.DataColumn("CLIENT_CC_DD_BEAT", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_CC_DD_BEAT)
            Me.columnCLIENT_CC_DD_NORESPOND = New Global.System.Data.DataColumn("CLIENT_CC_DD_NORESPOND", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_CC_DD_NORESPOND)
            Me.columnCLIENT_CC_DD_TIP = New Global.System.Data.DataColumn("CLIENT_CC_DD_TIP", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_CC_DD_TIP)
            Me.columnCLIENT_CC_DD_POORMEM = New Global.System.Data.DataColumn("CLIENT_CC_DD_POORMEM", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_CC_DD_POORMEM)
            Me.columnCLIENT_CC_DD_POORUNDER = New Global.System.Data.DataColumn("CLIENT_CC_DD_POORUNDER", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_CC_DD_POORUNDER)
            Me.columnCLIENT_CC_DD_POORSTUDY = New Global.System.Data.DataColumn("CLIENT_CC_DD_POORSTUDY", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_CC_DD_POORSTUDY)
            Me.columnCLIENT_CC_DD_THROWING = New Global.System.Data.DataColumn("CLIENT_CC_DD_THROWING", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_CC_DD_THROWING)
            Me.columnCLIENT_CC_DD_DROOLING = New Global.System.Data.DataColumn("CLIENT_CC_DD_DROOLING", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_CC_DD_DROOLING)
            Me.columnCLIENT_CC_DD_NONECK = New Global.System.Data.DataColumn("CLIENT_CC_DD_NONECK", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_CC_DD_NONECK)
            Me.columnCLIENT_CC_DD_OTHER = New Global.System.Data.DataColumn("CLIENT_CC_DD_OTHER", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_CC_DD_OTHER)
            Me.columnCLIENT_PSYCHIATRIC = New Global.System.Data.DataColumn("CLIENT_PSYCHIATRIC", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_PSYCHIATRIC)
            Me.columnCLIENT_NEUROLOGICAL = New Global.System.Data.DataColumn("CLIENT_NEUROLOGICAL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_NEUROLOGICAL)
            Me.columnCLIENT_DDISORDER = New Global.System.Data.DataColumn("CLIENT_DDISORDER", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_DDISORDER)
            Me.columnCLIENT_PSYCHOLOGICAL = New Global.System.Data.DataColumn("CLIENT_PSYCHOLOGICAL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_PSYCHOLOGICAL)
            Me.columnCLIENT_ADVISED_ASSESSMENT = New Global.System.Data.DataColumn("CLIENT_ADVISED_ASSESSMENT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_ADVISED_ASSESSMENT)
            Me.columnCLIENT_ADVISED_ASSESSMENT_DATE = New Global.System.Data.DataColumn("CLIENT_ADVISED_ASSESSMENT_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_ADVISED_ASSESSMENT_DATE)
            Me.columnCLIENT_ADVICED_ASSESSMENT_NOTE = New Global.System.Data.DataColumn("CLIENT_ADVICED_ASSESSMENT_NOTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_ADVICED_ASSESSMENT_NOTE)
            Me.columnCLIENT_ADVICED_ASSESSMENT_DETAIL = New Global.System.Data.DataColumn("CLIENT_ADVICED_ASSESSMENT_DETAIL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_ADVICED_ASSESSMENT_DETAIL)
            Me.columnCLIENT_NP_NOTES = New Global.System.Data.DataColumn("CLIENT_NP_NOTES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_NP_NOTES)
            Me.columnCLIENT_PP_NOTES = New Global.System.Data.DataColumn("CLIENT_PP_NOTES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_PP_NOTES)
            Me.columnCLIENT_DD_NOTES = New Global.System.Data.DataColumn("CLIENT_DD_NOTES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_DD_NOTES)
            Me.columnCLIENT_IS_ASSESS_CHECKED = New Global.System.Data.DataColumn("CLIENT_IS_ASSESS_CHECKED", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_IS_ASSESS_CHECKED)
            Me.columnMAIN_THERAPY_ID = New Global.System.Data.DataColumn("MAIN_THERAPY_ID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMAIN_THERAPY_ID)
            Me.columnMAIN_THERAPY_NAME = New Global.System.Data.DataColumn("MAIN_THERAPY_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMAIN_THERAPY_NAME)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCLIENT_SOCIAL_ID}, true))
            Me.columnCLIENT_SOCIAL_ID.AutoIncrement = true
            Me.columnCLIENT_SOCIAL_ID.AutoIncrementSeed = -1
            Me.columnCLIENT_SOCIAL_ID.AutoIncrementStep = -1
            Me.columnCLIENT_SOCIAL_ID.AllowDBNull = false
            Me.columnCLIENT_SOCIAL_ID.ReadOnly = true
            Me.columnCLIENT_SOCIAL_ID.Unique = true
            Me.columnCLIENT_POVERTY_OTHERS.MaxLength = 50
            Me.columnCLIENT_SOCIAL_SERVICETYPE.MaxLength = 50
            Me.columnCLIENT_REFER_TO.MaxLength = 50
            Me.columnCLIENT_SOCIAL_WORKER.MaxLength = 50
            Me.columnCLIENT_ADVISED_ASSESSMENT.MaxLength = 50
            Me.columnCLIENT_ADVICED_ASSESSMENT_NOTE.MaxLength = 250
            Me.columnCLIENT_NP_NOTES.MaxLength = 1000
            Me.columnCLIENT_PP_NOTES.MaxLength = 1000
            Me.columnCLIENT_DD_NOTES.MaxLength = 1000
            Me.columnMAIN_THERAPY_NAME.MaxLength = 150
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCLIENT_CA_SOCIALRow() As CLIENT_CA_SOCIALRow
            Return CType(Me.NewRow,CLIENT_CA_SOCIALRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CLIENT_CA_SOCIALRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CLIENT_CA_SOCIALRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CLIENT_CA_SOCIALRowChangedEvent) Is Nothing) Then
                RaiseEvent CLIENT_CA_SOCIALRowChanged(Me, New CLIENT_CA_SOCIALRowChangeEvent(CType(e.Row,CLIENT_CA_SOCIALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CLIENT_CA_SOCIALRowChangingEvent) Is Nothing) Then
                RaiseEvent CLIENT_CA_SOCIALRowChanging(Me, New CLIENT_CA_SOCIALRowChangeEvent(CType(e.Row,CLIENT_CA_SOCIALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CLIENT_CA_SOCIALRowDeletedEvent) Is Nothing) Then
                RaiseEvent CLIENT_CA_SOCIALRowDeleted(Me, New CLIENT_CA_SOCIALRowChangeEvent(CType(e.Row,CLIENT_CA_SOCIALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CLIENT_CA_SOCIALRowDeletingEvent) Is Nothing) Then
                RaiseEvent CLIENT_CA_SOCIALRowDeleting(Me, New CLIENT_CA_SOCIALRowChangeEvent(CType(e.Row,CLIENT_CA_SOCIALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCLIENT_CA_SOCIALRow(ByVal row As CLIENT_CA_SOCIALRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_ClientImpression = New DS_ClientImpression()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CLIENT_CA_SOCIALDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CCAMH_CLIENT_DDISORDERDataTable
        Inherits Global.System.Data.TypedTableBase(Of CCAMH_CLIENT_DDISORDERRow)
        
        Private columnSYMPTOM_ID As Global.System.Data.DataColumn
        
        Private columnSYMPTOM_NAME As Global.System.Data.DataColumn
        
        Private columnDESCRIPTION As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CCAMH_CLIENT_DDISORDER"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SYMPTOM_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSYMPTOM_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SYMPTOM_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSYMPTOM_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESCRIPTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCRIPTION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CCAMH_CLIENT_DDISORDERRow
            Get
                Return CType(Me.Rows(index),CCAMH_CLIENT_DDISORDERRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_CLIENT_DDISORDERRowChanging As CCAMH_CLIENT_DDISORDERRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_CLIENT_DDISORDERRowChanged As CCAMH_CLIENT_DDISORDERRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_CLIENT_DDISORDERRowDeleting As CCAMH_CLIENT_DDISORDERRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_CLIENT_DDISORDERRowDeleted As CCAMH_CLIENT_DDISORDERRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCCAMH_CLIENT_DDISORDERRow(ByVal row As CCAMH_CLIENT_DDISORDERRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCCAMH_CLIENT_DDISORDERRow(ByVal SYMPTOM_NAME As String, ByVal DESCRIPTION As String) As CCAMH_CLIENT_DDISORDERRow
            Dim rowCCAMH_CLIENT_DDISORDERRow As CCAMH_CLIENT_DDISORDERRow = CType(Me.NewRow,CCAMH_CLIENT_DDISORDERRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, SYMPTOM_NAME, DESCRIPTION}
            rowCCAMH_CLIENT_DDISORDERRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCCAMH_CLIENT_DDISORDERRow)
            Return rowCCAMH_CLIENT_DDISORDERRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindBySYMPTOM_ID(ByVal SYMPTOM_ID As Decimal) As CCAMH_CLIENT_DDISORDERRow
            Return CType(Me.Rows.Find(New Object() {SYMPTOM_ID}),CCAMH_CLIENT_DDISORDERRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CCAMH_CLIENT_DDISORDERDataTable = CType(MyBase.Clone,CCAMH_CLIENT_DDISORDERDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CCAMH_CLIENT_DDISORDERDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnSYMPTOM_ID = MyBase.Columns("SYMPTOM_ID")
            Me.columnSYMPTOM_NAME = MyBase.Columns("SYMPTOM_NAME")
            Me.columnDESCRIPTION = MyBase.Columns("DESCRIPTION")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnSYMPTOM_ID = New Global.System.Data.DataColumn("SYMPTOM_ID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSYMPTOM_ID)
            Me.columnSYMPTOM_NAME = New Global.System.Data.DataColumn("SYMPTOM_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSYMPTOM_NAME)
            Me.columnDESCRIPTION = New Global.System.Data.DataColumn("DESCRIPTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCRIPTION)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnSYMPTOM_ID}, true))
            Me.columnSYMPTOM_ID.AutoIncrement = true
            Me.columnSYMPTOM_ID.AutoIncrementSeed = -1
            Me.columnSYMPTOM_ID.AutoIncrementStep = -1
            Me.columnSYMPTOM_ID.AllowDBNull = false
            Me.columnSYMPTOM_ID.ReadOnly = true
            Me.columnSYMPTOM_ID.Unique = true
            Me.columnSYMPTOM_NAME.MaxLength = 50
            Me.columnDESCRIPTION.MaxLength = 200
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCCAMH_CLIENT_DDISORDERRow() As CCAMH_CLIENT_DDISORDERRow
            Return CType(Me.NewRow,CCAMH_CLIENT_DDISORDERRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CCAMH_CLIENT_DDISORDERRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CCAMH_CLIENT_DDISORDERRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CCAMH_CLIENT_DDISORDERRowChangedEvent) Is Nothing) Then
                RaiseEvent CCAMH_CLIENT_DDISORDERRowChanged(Me, New CCAMH_CLIENT_DDISORDERRowChangeEvent(CType(e.Row,CCAMH_CLIENT_DDISORDERRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CCAMH_CLIENT_DDISORDERRowChangingEvent) Is Nothing) Then
                RaiseEvent CCAMH_CLIENT_DDISORDERRowChanging(Me, New CCAMH_CLIENT_DDISORDERRowChangeEvent(CType(e.Row,CCAMH_CLIENT_DDISORDERRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CCAMH_CLIENT_DDISORDERRowDeletedEvent) Is Nothing) Then
                RaiseEvent CCAMH_CLIENT_DDISORDERRowDeleted(Me, New CCAMH_CLIENT_DDISORDERRowChangeEvent(CType(e.Row,CCAMH_CLIENT_DDISORDERRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CCAMH_CLIENT_DDISORDERRowDeletingEvent) Is Nothing) Then
                RaiseEvent CCAMH_CLIENT_DDISORDERRowDeleting(Me, New CCAMH_CLIENT_DDISORDERRowChangeEvent(CType(e.Row,CCAMH_CLIENT_DDISORDERRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCCAMH_CLIENT_DDISORDERRow(ByVal row As CCAMH_CLIENT_DDISORDERRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_ClientImpression = New DS_ClientImpression()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CCAMH_CLIENT_DDISORDERDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CCAMH_DDISORDER_DETAILDataTable
        Inherits Global.System.Data.TypedTableBase(Of CCAMH_DDISORDER_DETAILRow)
        
        Private columnREF_ID As Global.System.Data.DataColumn
        
        Private columnCLIENT_NO As Global.System.Data.DataColumn
        
        Private columnSYMPTOM_ID As Global.System.Data.DataColumn
        
        Private columnDESCRIPTION As Global.System.Data.DataColumn
        
        Private columnSYMPTOM_NAME As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CCAMH_DDISORDER_DETAIL"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REF_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREF_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SYMPTOM_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSYMPTOM_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESCRIPTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCRIPTION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SYMPTOM_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSYMPTOM_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CCAMH_DDISORDER_DETAILRow
            Get
                Return CType(Me.Rows(index),CCAMH_DDISORDER_DETAILRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_DDISORDER_DETAILRowChanging As CCAMH_DDISORDER_DETAILRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_DDISORDER_DETAILRowChanged As CCAMH_DDISORDER_DETAILRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_DDISORDER_DETAILRowDeleting As CCAMH_DDISORDER_DETAILRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_DDISORDER_DETAILRowDeleted As CCAMH_DDISORDER_DETAILRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCCAMH_DDISORDER_DETAILRow(ByVal row As CCAMH_DDISORDER_DETAILRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCCAMH_DDISORDER_DETAILRow(ByVal CLIENT_NO As Decimal, ByVal SYMPTOM_ID As Decimal, ByVal DESCRIPTION As String, ByVal SYMPTOM_NAME As String) As CCAMH_DDISORDER_DETAILRow
            Dim rowCCAMH_DDISORDER_DETAILRow As CCAMH_DDISORDER_DETAILRow = CType(Me.NewRow,CCAMH_DDISORDER_DETAILRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, CLIENT_NO, SYMPTOM_ID, DESCRIPTION, SYMPTOM_NAME}
            rowCCAMH_DDISORDER_DETAILRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCCAMH_DDISORDER_DETAILRow)
            Return rowCCAMH_DDISORDER_DETAILRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByREF_ID(ByVal REF_ID As Decimal) As CCAMH_DDISORDER_DETAILRow
            Return CType(Me.Rows.Find(New Object() {REF_ID}),CCAMH_DDISORDER_DETAILRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CCAMH_DDISORDER_DETAILDataTable = CType(MyBase.Clone,CCAMH_DDISORDER_DETAILDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CCAMH_DDISORDER_DETAILDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnREF_ID = MyBase.Columns("REF_ID")
            Me.columnCLIENT_NO = MyBase.Columns("CLIENT_NO")
            Me.columnSYMPTOM_ID = MyBase.Columns("SYMPTOM_ID")
            Me.columnDESCRIPTION = MyBase.Columns("DESCRIPTION")
            Me.columnSYMPTOM_NAME = MyBase.Columns("SYMPTOM_NAME")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnREF_ID = New Global.System.Data.DataColumn("REF_ID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREF_ID)
            Me.columnCLIENT_NO = New Global.System.Data.DataColumn("CLIENT_NO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_NO)
            Me.columnSYMPTOM_ID = New Global.System.Data.DataColumn("SYMPTOM_ID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSYMPTOM_ID)
            Me.columnDESCRIPTION = New Global.System.Data.DataColumn("DESCRIPTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCRIPTION)
            Me.columnSYMPTOM_NAME = New Global.System.Data.DataColumn("SYMPTOM_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSYMPTOM_NAME)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnREF_ID}, true))
            Me.columnREF_ID.AutoIncrement = true
            Me.columnREF_ID.AutoIncrementSeed = -1
            Me.columnREF_ID.AutoIncrementStep = -1
            Me.columnREF_ID.AllowDBNull = false
            Me.columnREF_ID.ReadOnly = true
            Me.columnREF_ID.Unique = true
            Me.columnDESCRIPTION.MaxLength = 200
            Me.columnSYMPTOM_NAME.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCCAMH_DDISORDER_DETAILRow() As CCAMH_DDISORDER_DETAILRow
            Return CType(Me.NewRow,CCAMH_DDISORDER_DETAILRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CCAMH_DDISORDER_DETAILRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CCAMH_DDISORDER_DETAILRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CCAMH_DDISORDER_DETAILRowChangedEvent) Is Nothing) Then
                RaiseEvent CCAMH_DDISORDER_DETAILRowChanged(Me, New CCAMH_DDISORDER_DETAILRowChangeEvent(CType(e.Row,CCAMH_DDISORDER_DETAILRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CCAMH_DDISORDER_DETAILRowChangingEvent) Is Nothing) Then
                RaiseEvent CCAMH_DDISORDER_DETAILRowChanging(Me, New CCAMH_DDISORDER_DETAILRowChangeEvent(CType(e.Row,CCAMH_DDISORDER_DETAILRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CCAMH_DDISORDER_DETAILRowDeletedEvent) Is Nothing) Then
                RaiseEvent CCAMH_DDISORDER_DETAILRowDeleted(Me, New CCAMH_DDISORDER_DETAILRowChangeEvent(CType(e.Row,CCAMH_DDISORDER_DETAILRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CCAMH_DDISORDER_DETAILRowDeletingEvent) Is Nothing) Then
                RaiseEvent CCAMH_DDISORDER_DETAILRowDeleting(Me, New CCAMH_DDISORDER_DETAILRowChangeEvent(CType(e.Row,CCAMH_DDISORDER_DETAILRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCCAMH_DDISORDER_DETAILRow(ByVal row As CCAMH_DDISORDER_DETAILRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_ClientImpression = New DS_ClientImpression()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CCAMH_DDISORDER_DETAILDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CCAMH_PSYCHO_MINOR_DETAILDataTable
        Inherits Global.System.Data.TypedTableBase(Of CCAMH_PSYCHO_MINOR_DETAILRow)
        
        Private columnREF_ID As Global.System.Data.DataColumn
        
        Private columnCLIENT_NO As Global.System.Data.DataColumn
        
        Private columnSYMPTOM_ID As Global.System.Data.DataColumn
        
        Private columnDESCRIPTION As Global.System.Data.DataColumn
        
        Private columnSYMPTOM_NAME As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CCAMH_PSYCHO_MINOR_DETAIL"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REF_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREF_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SYMPTOM_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSYMPTOM_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESCRIPTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCRIPTION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SYMPTOM_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSYMPTOM_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CCAMH_PSYCHO_MINOR_DETAILRow
            Get
                Return CType(Me.Rows(index),CCAMH_PSYCHO_MINOR_DETAILRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_PSYCHO_MINOR_DETAILRowChanging As CCAMH_PSYCHO_MINOR_DETAILRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_PSYCHO_MINOR_DETAILRowChanged As CCAMH_PSYCHO_MINOR_DETAILRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_PSYCHO_MINOR_DETAILRowDeleting As CCAMH_PSYCHO_MINOR_DETAILRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_PSYCHO_MINOR_DETAILRowDeleted As CCAMH_PSYCHO_MINOR_DETAILRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCCAMH_PSYCHO_MINOR_DETAILRow(ByVal row As CCAMH_PSYCHO_MINOR_DETAILRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCCAMH_PSYCHO_MINOR_DETAILRow(ByVal CLIENT_NO As Decimal, ByVal SYMPTOM_ID As Decimal, ByVal DESCRIPTION As String, ByVal SYMPTOM_NAME As String) As CCAMH_PSYCHO_MINOR_DETAILRow
            Dim rowCCAMH_PSYCHO_MINOR_DETAILRow As CCAMH_PSYCHO_MINOR_DETAILRow = CType(Me.NewRow,CCAMH_PSYCHO_MINOR_DETAILRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, CLIENT_NO, SYMPTOM_ID, DESCRIPTION, SYMPTOM_NAME}
            rowCCAMH_PSYCHO_MINOR_DETAILRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCCAMH_PSYCHO_MINOR_DETAILRow)
            Return rowCCAMH_PSYCHO_MINOR_DETAILRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByREF_ID(ByVal REF_ID As Decimal) As CCAMH_PSYCHO_MINOR_DETAILRow
            Return CType(Me.Rows.Find(New Object() {REF_ID}),CCAMH_PSYCHO_MINOR_DETAILRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CCAMH_PSYCHO_MINOR_DETAILDataTable = CType(MyBase.Clone,CCAMH_PSYCHO_MINOR_DETAILDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CCAMH_PSYCHO_MINOR_DETAILDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnREF_ID = MyBase.Columns("REF_ID")
            Me.columnCLIENT_NO = MyBase.Columns("CLIENT_NO")
            Me.columnSYMPTOM_ID = MyBase.Columns("SYMPTOM_ID")
            Me.columnDESCRIPTION = MyBase.Columns("DESCRIPTION")
            Me.columnSYMPTOM_NAME = MyBase.Columns("SYMPTOM_NAME")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnREF_ID = New Global.System.Data.DataColumn("REF_ID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREF_ID)
            Me.columnCLIENT_NO = New Global.System.Data.DataColumn("CLIENT_NO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_NO)
            Me.columnSYMPTOM_ID = New Global.System.Data.DataColumn("SYMPTOM_ID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSYMPTOM_ID)
            Me.columnDESCRIPTION = New Global.System.Data.DataColumn("DESCRIPTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCRIPTION)
            Me.columnSYMPTOM_NAME = New Global.System.Data.DataColumn("SYMPTOM_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSYMPTOM_NAME)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnREF_ID}, true))
            Me.columnREF_ID.AutoIncrement = true
            Me.columnREF_ID.AutoIncrementSeed = -1
            Me.columnREF_ID.AutoIncrementStep = -1
            Me.columnREF_ID.AllowDBNull = false
            Me.columnREF_ID.ReadOnly = true
            Me.columnREF_ID.Unique = true
            Me.columnDESCRIPTION.MaxLength = 200
            Me.columnSYMPTOM_NAME.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCCAMH_PSYCHO_MINOR_DETAILRow() As CCAMH_PSYCHO_MINOR_DETAILRow
            Return CType(Me.NewRow,CCAMH_PSYCHO_MINOR_DETAILRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CCAMH_PSYCHO_MINOR_DETAILRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CCAMH_PSYCHO_MINOR_DETAILRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CCAMH_PSYCHO_MINOR_DETAILRowChangedEvent) Is Nothing) Then
                RaiseEvent CCAMH_PSYCHO_MINOR_DETAILRowChanged(Me, New CCAMH_PSYCHO_MINOR_DETAILRowChangeEvent(CType(e.Row,CCAMH_PSYCHO_MINOR_DETAILRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CCAMH_PSYCHO_MINOR_DETAILRowChangingEvent) Is Nothing) Then
                RaiseEvent CCAMH_PSYCHO_MINOR_DETAILRowChanging(Me, New CCAMH_PSYCHO_MINOR_DETAILRowChangeEvent(CType(e.Row,CCAMH_PSYCHO_MINOR_DETAILRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CCAMH_PSYCHO_MINOR_DETAILRowDeletedEvent) Is Nothing) Then
                RaiseEvent CCAMH_PSYCHO_MINOR_DETAILRowDeleted(Me, New CCAMH_PSYCHO_MINOR_DETAILRowChangeEvent(CType(e.Row,CCAMH_PSYCHO_MINOR_DETAILRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CCAMH_PSYCHO_MINOR_DETAILRowDeletingEvent) Is Nothing) Then
                RaiseEvent CCAMH_PSYCHO_MINOR_DETAILRowDeleting(Me, New CCAMH_PSYCHO_MINOR_DETAILRowChangeEvent(CType(e.Row,CCAMH_PSYCHO_MINOR_DETAILRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCCAMH_PSYCHO_MINOR_DETAILRow(ByVal row As CCAMH_PSYCHO_MINOR_DETAILRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_ClientImpression = New DS_ClientImpression()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CCAMH_PSYCHO_MINOR_DETAILDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CCAMH_NEURODataTable
        Inherits Global.System.Data.TypedTableBase(Of CCAMH_NEURORow)
        
        Private columnSYMPTOM_ID As Global.System.Data.DataColumn
        
        Private columnDESCRIPTION As Global.System.Data.DataColumn
        
        Private columnSYMPTOM_NAME As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CCAMH_NEURO"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SYMPTOM_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSYMPTOM_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESCRIPTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCRIPTION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SYMPTOM_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSYMPTOM_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CCAMH_NEURORow
            Get
                Return CType(Me.Rows(index),CCAMH_NEURORow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_NEURORowChanging As CCAMH_NEURORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_NEURORowChanged As CCAMH_NEURORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_NEURORowDeleting As CCAMH_NEURORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_NEURORowDeleted As CCAMH_NEURORowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCCAMH_NEURORow(ByVal row As CCAMH_NEURORow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCCAMH_NEURORow(ByVal SYMPTOM_ID As Decimal, ByVal DESCRIPTION As String, ByVal SYMPTOM_NAME As String) As CCAMH_NEURORow
            Dim rowCCAMH_NEURORow As CCAMH_NEURORow = CType(Me.NewRow,CCAMH_NEURORow)
            Dim columnValuesArray() As Object = New Object() {SYMPTOM_ID, DESCRIPTION, SYMPTOM_NAME}
            rowCCAMH_NEURORow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCCAMH_NEURORow)
            Return rowCCAMH_NEURORow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindBySYMPTOM_ID(ByVal SYMPTOM_ID As Decimal) As CCAMH_NEURORow
            Return CType(Me.Rows.Find(New Object() {SYMPTOM_ID}),CCAMH_NEURORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CCAMH_NEURODataTable = CType(MyBase.Clone,CCAMH_NEURODataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CCAMH_NEURODataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnSYMPTOM_ID = MyBase.Columns("SYMPTOM_ID")
            Me.columnDESCRIPTION = MyBase.Columns("DESCRIPTION")
            Me.columnSYMPTOM_NAME = MyBase.Columns("SYMPTOM_NAME")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnSYMPTOM_ID = New Global.System.Data.DataColumn("SYMPTOM_ID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSYMPTOM_ID)
            Me.columnDESCRIPTION = New Global.System.Data.DataColumn("DESCRIPTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCRIPTION)
            Me.columnSYMPTOM_NAME = New Global.System.Data.DataColumn("SYMPTOM_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSYMPTOM_NAME)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnSYMPTOM_ID}, true))
            Me.columnSYMPTOM_ID.AllowDBNull = false
            Me.columnSYMPTOM_ID.Unique = true
            Me.columnDESCRIPTION.MaxLength = 200
            Me.columnSYMPTOM_NAME.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCCAMH_NEURORow() As CCAMH_NEURORow
            Return CType(Me.NewRow,CCAMH_NEURORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CCAMH_NEURORow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CCAMH_NEURORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CCAMH_NEURORowChangedEvent) Is Nothing) Then
                RaiseEvent CCAMH_NEURORowChanged(Me, New CCAMH_NEURORowChangeEvent(CType(e.Row,CCAMH_NEURORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CCAMH_NEURORowChangingEvent) Is Nothing) Then
                RaiseEvent CCAMH_NEURORowChanging(Me, New CCAMH_NEURORowChangeEvent(CType(e.Row,CCAMH_NEURORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CCAMH_NEURORowDeletedEvent) Is Nothing) Then
                RaiseEvent CCAMH_NEURORowDeleted(Me, New CCAMH_NEURORowChangeEvent(CType(e.Row,CCAMH_NEURORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CCAMH_NEURORowDeletingEvent) Is Nothing) Then
                RaiseEvent CCAMH_NEURORowDeleting(Me, New CCAMH_NEURORowChangeEvent(CType(e.Row,CCAMH_NEURORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCCAMH_NEURORow(ByVal row As CCAMH_NEURORow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_ClientImpression = New DS_ClientImpression()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CCAMH_NEURODataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CCAMH_PSYCHO_MAJORDataTable
        Inherits Global.System.Data.TypedTableBase(Of CCAMH_PSYCHO_MAJORRow)
        
        Private columnSYMPTOM_ID As Global.System.Data.DataColumn
        
        Private columnSYMPTOM_NAME As Global.System.Data.DataColumn
        
        Private columnDESCRIPTION As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CCAMH_PSYCHO_MAJOR"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SYMPTOM_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSYMPTOM_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SYMPTOM_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSYMPTOM_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESCRIPTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCRIPTION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CCAMH_PSYCHO_MAJORRow
            Get
                Return CType(Me.Rows(index),CCAMH_PSYCHO_MAJORRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_PSYCHO_MAJORRowChanging As CCAMH_PSYCHO_MAJORRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_PSYCHO_MAJORRowChanged As CCAMH_PSYCHO_MAJORRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_PSYCHO_MAJORRowDeleting As CCAMH_PSYCHO_MAJORRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_PSYCHO_MAJORRowDeleted As CCAMH_PSYCHO_MAJORRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCCAMH_PSYCHO_MAJORRow(ByVal row As CCAMH_PSYCHO_MAJORRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCCAMH_PSYCHO_MAJORRow(ByVal SYMPTOM_NAME As String, ByVal DESCRIPTION As String) As CCAMH_PSYCHO_MAJORRow
            Dim rowCCAMH_PSYCHO_MAJORRow As CCAMH_PSYCHO_MAJORRow = CType(Me.NewRow,CCAMH_PSYCHO_MAJORRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, SYMPTOM_NAME, DESCRIPTION}
            rowCCAMH_PSYCHO_MAJORRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCCAMH_PSYCHO_MAJORRow)
            Return rowCCAMH_PSYCHO_MAJORRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindBySYMPTOM_ID(ByVal SYMPTOM_ID As Decimal) As CCAMH_PSYCHO_MAJORRow
            Return CType(Me.Rows.Find(New Object() {SYMPTOM_ID}),CCAMH_PSYCHO_MAJORRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CCAMH_PSYCHO_MAJORDataTable = CType(MyBase.Clone,CCAMH_PSYCHO_MAJORDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CCAMH_PSYCHO_MAJORDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnSYMPTOM_ID = MyBase.Columns("SYMPTOM_ID")
            Me.columnSYMPTOM_NAME = MyBase.Columns("SYMPTOM_NAME")
            Me.columnDESCRIPTION = MyBase.Columns("DESCRIPTION")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnSYMPTOM_ID = New Global.System.Data.DataColumn("SYMPTOM_ID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSYMPTOM_ID)
            Me.columnSYMPTOM_NAME = New Global.System.Data.DataColumn("SYMPTOM_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSYMPTOM_NAME)
            Me.columnDESCRIPTION = New Global.System.Data.DataColumn("DESCRIPTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCRIPTION)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnSYMPTOM_ID}, true))
            Me.columnSYMPTOM_ID.AutoIncrement = true
            Me.columnSYMPTOM_ID.AutoIncrementSeed = -1
            Me.columnSYMPTOM_ID.AutoIncrementStep = -1
            Me.columnSYMPTOM_ID.AllowDBNull = false
            Me.columnSYMPTOM_ID.ReadOnly = true
            Me.columnSYMPTOM_ID.Unique = true
            Me.columnSYMPTOM_NAME.MaxLength = 50
            Me.columnDESCRIPTION.MaxLength = 200
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCCAMH_PSYCHO_MAJORRow() As CCAMH_PSYCHO_MAJORRow
            Return CType(Me.NewRow,CCAMH_PSYCHO_MAJORRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CCAMH_PSYCHO_MAJORRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CCAMH_PSYCHO_MAJORRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CCAMH_PSYCHO_MAJORRowChangedEvent) Is Nothing) Then
                RaiseEvent CCAMH_PSYCHO_MAJORRowChanged(Me, New CCAMH_PSYCHO_MAJORRowChangeEvent(CType(e.Row,CCAMH_PSYCHO_MAJORRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CCAMH_PSYCHO_MAJORRowChangingEvent) Is Nothing) Then
                RaiseEvent CCAMH_PSYCHO_MAJORRowChanging(Me, New CCAMH_PSYCHO_MAJORRowChangeEvent(CType(e.Row,CCAMH_PSYCHO_MAJORRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CCAMH_PSYCHO_MAJORRowDeletedEvent) Is Nothing) Then
                RaiseEvent CCAMH_PSYCHO_MAJORRowDeleted(Me, New CCAMH_PSYCHO_MAJORRowChangeEvent(CType(e.Row,CCAMH_PSYCHO_MAJORRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CCAMH_PSYCHO_MAJORRowDeletingEvent) Is Nothing) Then
                RaiseEvent CCAMH_PSYCHO_MAJORRowDeleting(Me, New CCAMH_PSYCHO_MAJORRowChangeEvent(CType(e.Row,CCAMH_PSYCHO_MAJORRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCCAMH_PSYCHO_MAJORRow(ByVal row As CCAMH_PSYCHO_MAJORRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_ClientImpression = New DS_ClientImpression()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CCAMH_PSYCHO_MAJORDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CCAMH_PSYCHO_MINORDataTable
        Inherits Global.System.Data.TypedTableBase(Of CCAMH_PSYCHO_MINORRow)
        
        Private columnSYMPTOM_ID As Global.System.Data.DataColumn
        
        Private columnSYMPTOM_NAME As Global.System.Data.DataColumn
        
        Private columnDESCRIPTION As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CCAMH_PSYCHO_MINOR"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SYMPTOM_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSYMPTOM_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SYMPTOM_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSYMPTOM_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESCRIPTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCRIPTION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CCAMH_PSYCHO_MINORRow
            Get
                Return CType(Me.Rows(index),CCAMH_PSYCHO_MINORRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_PSYCHO_MINORRowChanging As CCAMH_PSYCHO_MINORRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_PSYCHO_MINORRowChanged As CCAMH_PSYCHO_MINORRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_PSYCHO_MINORRowDeleting As CCAMH_PSYCHO_MINORRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_PSYCHO_MINORRowDeleted As CCAMH_PSYCHO_MINORRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCCAMH_PSYCHO_MINORRow(ByVal row As CCAMH_PSYCHO_MINORRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCCAMH_PSYCHO_MINORRow(ByVal SYMPTOM_NAME As String, ByVal DESCRIPTION As String) As CCAMH_PSYCHO_MINORRow
            Dim rowCCAMH_PSYCHO_MINORRow As CCAMH_PSYCHO_MINORRow = CType(Me.NewRow,CCAMH_PSYCHO_MINORRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, SYMPTOM_NAME, DESCRIPTION}
            rowCCAMH_PSYCHO_MINORRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCCAMH_PSYCHO_MINORRow)
            Return rowCCAMH_PSYCHO_MINORRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindBySYMPTOM_ID(ByVal SYMPTOM_ID As Decimal) As CCAMH_PSYCHO_MINORRow
            Return CType(Me.Rows.Find(New Object() {SYMPTOM_ID}),CCAMH_PSYCHO_MINORRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CCAMH_PSYCHO_MINORDataTable = CType(MyBase.Clone,CCAMH_PSYCHO_MINORDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CCAMH_PSYCHO_MINORDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnSYMPTOM_ID = MyBase.Columns("SYMPTOM_ID")
            Me.columnSYMPTOM_NAME = MyBase.Columns("SYMPTOM_NAME")
            Me.columnDESCRIPTION = MyBase.Columns("DESCRIPTION")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnSYMPTOM_ID = New Global.System.Data.DataColumn("SYMPTOM_ID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSYMPTOM_ID)
            Me.columnSYMPTOM_NAME = New Global.System.Data.DataColumn("SYMPTOM_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSYMPTOM_NAME)
            Me.columnDESCRIPTION = New Global.System.Data.DataColumn("DESCRIPTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCRIPTION)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnSYMPTOM_ID}, true))
            Me.columnSYMPTOM_ID.AutoIncrement = true
            Me.columnSYMPTOM_ID.AutoIncrementSeed = -1
            Me.columnSYMPTOM_ID.AutoIncrementStep = -1
            Me.columnSYMPTOM_ID.AllowDBNull = false
            Me.columnSYMPTOM_ID.ReadOnly = true
            Me.columnSYMPTOM_ID.Unique = true
            Me.columnSYMPTOM_NAME.MaxLength = 50
            Me.columnDESCRIPTION.MaxLength = 200
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCCAMH_PSYCHO_MINORRow() As CCAMH_PSYCHO_MINORRow
            Return CType(Me.NewRow,CCAMH_PSYCHO_MINORRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CCAMH_PSYCHO_MINORRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CCAMH_PSYCHO_MINORRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CCAMH_PSYCHO_MINORRowChangedEvent) Is Nothing) Then
                RaiseEvent CCAMH_PSYCHO_MINORRowChanged(Me, New CCAMH_PSYCHO_MINORRowChangeEvent(CType(e.Row,CCAMH_PSYCHO_MINORRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CCAMH_PSYCHO_MINORRowChangingEvent) Is Nothing) Then
                RaiseEvent CCAMH_PSYCHO_MINORRowChanging(Me, New CCAMH_PSYCHO_MINORRowChangeEvent(CType(e.Row,CCAMH_PSYCHO_MINORRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CCAMH_PSYCHO_MINORRowDeletedEvent) Is Nothing) Then
                RaiseEvent CCAMH_PSYCHO_MINORRowDeleted(Me, New CCAMH_PSYCHO_MINORRowChangeEvent(CType(e.Row,CCAMH_PSYCHO_MINORRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CCAMH_PSYCHO_MINORRowDeletingEvent) Is Nothing) Then
                RaiseEvent CCAMH_PSYCHO_MINORRowDeleting(Me, New CCAMH_PSYCHO_MINORRowChangeEvent(CType(e.Row,CCAMH_PSYCHO_MINORRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCCAMH_PSYCHO_MINORRow(ByVal row As CCAMH_PSYCHO_MINORRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_ClientImpression = New DS_ClientImpression()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CCAMH_PSYCHO_MINORDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CCAMH_PSYCHO_MAJOR_DETAILDataTable
        Inherits Global.System.Data.TypedTableBase(Of CCAMH_PSYCHO_MAJOR_DETAILRow)
        
        Private columnREF_ID As Global.System.Data.DataColumn
        
        Private columnCLIENT_NO As Global.System.Data.DataColumn
        
        Private columnSYMPTOM_ID As Global.System.Data.DataColumn
        
        Private columnDESCRIPTION As Global.System.Data.DataColumn
        
        Private columnSYMPTOM_NAME As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CCAMH_PSYCHO_MAJOR_DETAIL"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REF_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREF_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SYMPTOM_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSYMPTOM_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESCRIPTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCRIPTION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SYMPTOM_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSYMPTOM_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CCAMH_PSYCHO_MAJOR_DETAILRow
            Get
                Return CType(Me.Rows(index),CCAMH_PSYCHO_MAJOR_DETAILRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_PSYCHO_MAJOR_DETAILRowChanging As CCAMH_PSYCHO_MAJOR_DETAILRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_PSYCHO_MAJOR_DETAILRowChanged As CCAMH_PSYCHO_MAJOR_DETAILRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_PSYCHO_MAJOR_DETAILRowDeleting As CCAMH_PSYCHO_MAJOR_DETAILRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_PSYCHO_MAJOR_DETAILRowDeleted As CCAMH_PSYCHO_MAJOR_DETAILRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCCAMH_PSYCHO_MAJOR_DETAILRow(ByVal row As CCAMH_PSYCHO_MAJOR_DETAILRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCCAMH_PSYCHO_MAJOR_DETAILRow(ByVal CLIENT_NO As Decimal, ByVal SYMPTOM_ID As Decimal, ByVal DESCRIPTION As String, ByVal SYMPTOM_NAME As String) As CCAMH_PSYCHO_MAJOR_DETAILRow
            Dim rowCCAMH_PSYCHO_MAJOR_DETAILRow As CCAMH_PSYCHO_MAJOR_DETAILRow = CType(Me.NewRow,CCAMH_PSYCHO_MAJOR_DETAILRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, CLIENT_NO, SYMPTOM_ID, DESCRIPTION, SYMPTOM_NAME}
            rowCCAMH_PSYCHO_MAJOR_DETAILRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCCAMH_PSYCHO_MAJOR_DETAILRow)
            Return rowCCAMH_PSYCHO_MAJOR_DETAILRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByREF_ID(ByVal REF_ID As Decimal) As CCAMH_PSYCHO_MAJOR_DETAILRow
            Return CType(Me.Rows.Find(New Object() {REF_ID}),CCAMH_PSYCHO_MAJOR_DETAILRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CCAMH_PSYCHO_MAJOR_DETAILDataTable = CType(MyBase.Clone,CCAMH_PSYCHO_MAJOR_DETAILDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CCAMH_PSYCHO_MAJOR_DETAILDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnREF_ID = MyBase.Columns("REF_ID")
            Me.columnCLIENT_NO = MyBase.Columns("CLIENT_NO")
            Me.columnSYMPTOM_ID = MyBase.Columns("SYMPTOM_ID")
            Me.columnDESCRIPTION = MyBase.Columns("DESCRIPTION")
            Me.columnSYMPTOM_NAME = MyBase.Columns("SYMPTOM_NAME")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnREF_ID = New Global.System.Data.DataColumn("REF_ID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREF_ID)
            Me.columnCLIENT_NO = New Global.System.Data.DataColumn("CLIENT_NO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_NO)
            Me.columnSYMPTOM_ID = New Global.System.Data.DataColumn("SYMPTOM_ID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSYMPTOM_ID)
            Me.columnDESCRIPTION = New Global.System.Data.DataColumn("DESCRIPTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCRIPTION)
            Me.columnSYMPTOM_NAME = New Global.System.Data.DataColumn("SYMPTOM_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSYMPTOM_NAME)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnREF_ID}, true))
            Me.columnREF_ID.AutoIncrement = true
            Me.columnREF_ID.AutoIncrementSeed = -1
            Me.columnREF_ID.AutoIncrementStep = -1
            Me.columnREF_ID.AllowDBNull = false
            Me.columnREF_ID.ReadOnly = true
            Me.columnREF_ID.Unique = true
            Me.columnDESCRIPTION.MaxLength = 200
            Me.columnSYMPTOM_NAME.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCCAMH_PSYCHO_MAJOR_DETAILRow() As CCAMH_PSYCHO_MAJOR_DETAILRow
            Return CType(Me.NewRow,CCAMH_PSYCHO_MAJOR_DETAILRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CCAMH_PSYCHO_MAJOR_DETAILRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CCAMH_PSYCHO_MAJOR_DETAILRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CCAMH_PSYCHO_MAJOR_DETAILRowChangedEvent) Is Nothing) Then
                RaiseEvent CCAMH_PSYCHO_MAJOR_DETAILRowChanged(Me, New CCAMH_PSYCHO_MAJOR_DETAILRowChangeEvent(CType(e.Row,CCAMH_PSYCHO_MAJOR_DETAILRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CCAMH_PSYCHO_MAJOR_DETAILRowChangingEvent) Is Nothing) Then
                RaiseEvent CCAMH_PSYCHO_MAJOR_DETAILRowChanging(Me, New CCAMH_PSYCHO_MAJOR_DETAILRowChangeEvent(CType(e.Row,CCAMH_PSYCHO_MAJOR_DETAILRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CCAMH_PSYCHO_MAJOR_DETAILRowDeletedEvent) Is Nothing) Then
                RaiseEvent CCAMH_PSYCHO_MAJOR_DETAILRowDeleted(Me, New CCAMH_PSYCHO_MAJOR_DETAILRowChangeEvent(CType(e.Row,CCAMH_PSYCHO_MAJOR_DETAILRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CCAMH_PSYCHO_MAJOR_DETAILRowDeletingEvent) Is Nothing) Then
                RaiseEvent CCAMH_PSYCHO_MAJOR_DETAILRowDeleting(Me, New CCAMH_PSYCHO_MAJOR_DETAILRowChangeEvent(CType(e.Row,CCAMH_PSYCHO_MAJOR_DETAILRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCCAMH_PSYCHO_MAJOR_DETAILRow(ByVal row As CCAMH_PSYCHO_MAJOR_DETAILRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_ClientImpression = New DS_ClientImpression()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CCAMH_PSYCHO_MAJOR_DETAILDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CCAMH_CLIENT_NEURODataTable
        Inherits Global.System.Data.TypedTableBase(Of CCAMH_CLIENT_NEURORow)
        
        Private columnREF_ID As Global.System.Data.DataColumn
        
        Private columnCLIENT_NO As Global.System.Data.DataColumn
        
        Private columnSYMPTOM_ID As Global.System.Data.DataColumn
        
        Private columnDESCRIPTION As Global.System.Data.DataColumn
        
        Private columnSYMPTOM_NAME As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CCAMH_CLIENT_NEURO"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REF_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREF_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SYMPTOM_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSYMPTOM_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESCRIPTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCRIPTION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SYMPTOM_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSYMPTOM_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CCAMH_CLIENT_NEURORow
            Get
                Return CType(Me.Rows(index),CCAMH_CLIENT_NEURORow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_CLIENT_NEURORowChanging As CCAMH_CLIENT_NEURORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_CLIENT_NEURORowChanged As CCAMH_CLIENT_NEURORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_CLIENT_NEURORowDeleting As CCAMH_CLIENT_NEURORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_CLIENT_NEURORowDeleted As CCAMH_CLIENT_NEURORowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCCAMH_CLIENT_NEURORow(ByVal row As CCAMH_CLIENT_NEURORow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCCAMH_CLIENT_NEURORow(ByVal CLIENT_NO As Decimal, ByVal SYMPTOM_ID As Decimal, ByVal DESCRIPTION As String, ByVal SYMPTOM_NAME As String) As CCAMH_CLIENT_NEURORow
            Dim rowCCAMH_CLIENT_NEURORow As CCAMH_CLIENT_NEURORow = CType(Me.NewRow,CCAMH_CLIENT_NEURORow)
            Dim columnValuesArray() As Object = New Object() {Nothing, CLIENT_NO, SYMPTOM_ID, DESCRIPTION, SYMPTOM_NAME}
            rowCCAMH_CLIENT_NEURORow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCCAMH_CLIENT_NEURORow)
            Return rowCCAMH_CLIENT_NEURORow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByREF_ID(ByVal REF_ID As Decimal) As CCAMH_CLIENT_NEURORow
            Return CType(Me.Rows.Find(New Object() {REF_ID}),CCAMH_CLIENT_NEURORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CCAMH_CLIENT_NEURODataTable = CType(MyBase.Clone,CCAMH_CLIENT_NEURODataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CCAMH_CLIENT_NEURODataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnREF_ID = MyBase.Columns("REF_ID")
            Me.columnCLIENT_NO = MyBase.Columns("CLIENT_NO")
            Me.columnSYMPTOM_ID = MyBase.Columns("SYMPTOM_ID")
            Me.columnDESCRIPTION = MyBase.Columns("DESCRIPTION")
            Me.columnSYMPTOM_NAME = MyBase.Columns("SYMPTOM_NAME")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnREF_ID = New Global.System.Data.DataColumn("REF_ID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREF_ID)
            Me.columnCLIENT_NO = New Global.System.Data.DataColumn("CLIENT_NO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_NO)
            Me.columnSYMPTOM_ID = New Global.System.Data.DataColumn("SYMPTOM_ID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSYMPTOM_ID)
            Me.columnDESCRIPTION = New Global.System.Data.DataColumn("DESCRIPTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCRIPTION)
            Me.columnSYMPTOM_NAME = New Global.System.Data.DataColumn("SYMPTOM_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSYMPTOM_NAME)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnREF_ID}, true))
            Me.columnREF_ID.AutoIncrement = true
            Me.columnREF_ID.AutoIncrementSeed = -1
            Me.columnREF_ID.AutoIncrementStep = -1
            Me.columnREF_ID.AllowDBNull = false
            Me.columnREF_ID.ReadOnly = true
            Me.columnREF_ID.Unique = true
            Me.columnDESCRIPTION.MaxLength = 200
            Me.columnSYMPTOM_NAME.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCCAMH_CLIENT_NEURORow() As CCAMH_CLIENT_NEURORow
            Return CType(Me.NewRow,CCAMH_CLIENT_NEURORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CCAMH_CLIENT_NEURORow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CCAMH_CLIENT_NEURORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CCAMH_CLIENT_NEURORowChangedEvent) Is Nothing) Then
                RaiseEvent CCAMH_CLIENT_NEURORowChanged(Me, New CCAMH_CLIENT_NEURORowChangeEvent(CType(e.Row,CCAMH_CLIENT_NEURORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CCAMH_CLIENT_NEURORowChangingEvent) Is Nothing) Then
                RaiseEvent CCAMH_CLIENT_NEURORowChanging(Me, New CCAMH_CLIENT_NEURORowChangeEvent(CType(e.Row,CCAMH_CLIENT_NEURORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CCAMH_CLIENT_NEURORowDeletedEvent) Is Nothing) Then
                RaiseEvent CCAMH_CLIENT_NEURORowDeleted(Me, New CCAMH_CLIENT_NEURORowChangeEvent(CType(e.Row,CCAMH_CLIENT_NEURORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CCAMH_CLIENT_NEURORowDeletingEvent) Is Nothing) Then
                RaiseEvent CCAMH_CLIENT_NEURORowDeleting(Me, New CCAMH_CLIENT_NEURORowChangeEvent(CType(e.Row,CCAMH_CLIENT_NEURORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCCAMH_CLIENT_NEURORow(ByVal row As CCAMH_CLIENT_NEURORow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_ClientImpression = New DS_ClientImpression()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CCAMH_CLIENT_NEURODataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CCAMH_VIEW_ADVISED_CLIENTSRow
        Inherits Global.System.Data.DataRow
        
        Private tableCCAMH_VIEW_ADVISED_CLIENTS As CCAMH_VIEW_ADVISED_CLIENTSDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCCAMH_VIEW_ADVISED_CLIENTS = CType(Me.Table,CCAMH_VIEW_ADVISED_CLIENTSDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_NO() As Decimal
            Get
                Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_NOColumn),Decimal)
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_NAME_KHM() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_NAME_KHMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_NAME_KHM' in table 'CCAMH_VIEW_ADVISED_CLIENTS' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_NAME_KHMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_NAME' in table 'CCAMH_VIEW_ADVISED_CLIENTS' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_SEX() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_SEXColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_SEX' in table 'CCAMH_VIEW_ADVISED_CLIENTS' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_SEXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_AGE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_AGEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_AGE' in table 'CCAMH_VIEW_ADVISED_CLIENTS' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_AGEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_DOB() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_DOBColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_DOB' in table 'CCAMH_VIEW_ADVISED_CLIENTS' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_DOBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_DATE_REG() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_DATE_REGColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_DATE_REG' in table 'CCAMH_VIEW_ADVISED_CLIENTS' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_DATE_REGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_ADVISED_ASSESSMENT_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_ADVISED_ASSESSMENT_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_ADVISED_ASSESSMENT_DATE' in table 'CCAMH_VIEW_ADVISE"& _ 
                            "D_CLIENTS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_ADVISED_ASSESSMENT_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_ADVISED_ASSESSMENT() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_ADVISED_ASSESSMENTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_ADVISED_ASSESSMENT' in table 'CCAMH_VIEW_ADVISED_CLI"& _ 
                            "ENTS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_ADVISED_ASSESSMENTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_ADDRESS_PHONE() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_ADDRESS_PHONEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_ADDRESS_PHONE' in table 'CCAMH_VIEW_ADVISED_CLIENTS'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_ADDRESS_PHONEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PROV_EN() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.PROV_ENColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROV_EN' in table 'CCAMH_VIEW_ADVISED_CLIENTS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.PROV_ENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DIST_EN() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.DIST_ENColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIST_EN' in table 'CCAMH_VIEW_ADVISED_CLIENTS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.DIST_ENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VILL_EN() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.VILL_ENColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VILL_EN' in table 'CCAMH_VIEW_ADVISED_CLIENTS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.VILL_ENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COMM_EN() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.COMM_ENColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COMM_EN' in table 'CCAMH_VIEW_ADVISED_CLIENTS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.COMM_ENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_IS_ASSESS_CHECKED() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_IS_ASSESS_CHECKEDColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_IS_ASSESS_CHECKED' in table 'CCAMH_VIEW_ADVISED_CLIE"& _ 
                            "NTS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_IS_ASSESS_CHECKEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_ADVICED_ASSESSMENT_DETAIL() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_ADVICED_ASSESSMENT_DETAILColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_ADVICED_ASSESSMENT_DETAIL' in table 'CCAMH_VIEW_ADVI"& _ 
                            "SED_CLIENTS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_ADVICED_ASSESSMENT_DETAILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_ADVICED_ASSESSMENT_NOTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_ADVICED_ASSESSMENT_NOTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_ADVICED_ASSESSMENT_NOTE' in table 'CCAMH_VIEW_ADVISE"& _ 
                            "D_CLIENTS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_ADVICED_ASSESSMENT_NOTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FULL_ADDRESS_KH() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.FULL_ADDRESS_KHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FULL_ADDRESS_KH' in table 'CCAMH_VIEW_ADVISED_CLIENTS' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.FULL_ADDRESS_KHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FULL_ADDRESS_ENG() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.FULL_ADDRESS_ENGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FULL_ADDRESS_ENG' in table 'CCAMH_VIEW_ADVISED_CLIENTS' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.FULL_ADDRESS_ENGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_PSYCHIATRIC() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_PSYCHIATRICColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_PSYCHIATRIC' in table 'CCAMH_VIEW_ADVISED_CLIENTS' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_PSYCHIATRICColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_NEUROLOGICAL() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_NEUROLOGICALColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_NEUROLOGICAL' in table 'CCAMH_VIEW_ADVISED_CLIENTS' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_NEUROLOGICALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_DDISORDER() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_DDISORDERColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_DDISORDER' in table 'CCAMH_VIEW_ADVISED_CLIENTS' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_DDISORDERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_PSYCHOLOGICAL() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_PSYCHOLOGICALColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_PSYCHOLOGICAL' in table 'CCAMH_VIEW_ADVISED_CLIENTS'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_PSYCHOLOGICALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DIAGNOSIS_ID() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.DIAGNOSIS_IDColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIAGNOSIS_ID' in table 'CCAMH_VIEW_ADVISED_CLIENTS' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.DIAGNOSIS_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DIAGNOSIS() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.DIAGNOSISColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIAGNOSIS' in table 'CCAMH_VIEW_ADVISED_CLIENTS' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.DIAGNOSISColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NUMBER_VISIT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.NUMBER_VISITColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUMBER_VISIT' in table 'CCAMH_VIEW_ADVISED_CLIENTS' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.NUMBER_VISITColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MAIN_THERAPY_ID() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.MAIN_THERAPY_IDColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MAIN_THERAPY_ID' in table 'CCAMH_VIEW_ADVISED_CLIENTS' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.MAIN_THERAPY_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MAIN_THERAPY_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.MAIN_THERAPY_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MAIN_THERAPY_NAME' in table 'CCAMH_VIEW_ADVISED_CLIENTS' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.MAIN_THERAPY_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_OLD_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_OLD_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_OLD_NO' in table 'CCAMH_VIEW_ADVISED_CLIENTS' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_OLD_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_NAME_KHMNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_NAME_KHMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_NAME_KHMNull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_NAME_KHMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_NAMENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_NAMENull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_SEXNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_SEXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_SEXNull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_SEXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_AGENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_AGEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_AGENull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_AGEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_DOBNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_DOBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_DOBNull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_DOBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_DATE_REGNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_DATE_REGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_DATE_REGNull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_DATE_REGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_ADVISED_ASSESSMENT_DATENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_ADVISED_ASSESSMENT_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_ADVISED_ASSESSMENT_DATENull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_ADVISED_ASSESSMENT_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_ADVISED_ASSESSMENTNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_ADVISED_ASSESSMENTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_ADVISED_ASSESSMENTNull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_ADVISED_ASSESSMENTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_ADDRESS_PHONENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_ADDRESS_PHONEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_ADDRESS_PHONENull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_ADDRESS_PHONEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPROV_ENNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.PROV_ENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPROV_ENNull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.PROV_ENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDIST_ENNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.DIST_ENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDIST_ENNull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.DIST_ENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVILL_ENNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.VILL_ENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVILL_ENNull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.VILL_ENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOMM_ENNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.COMM_ENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOMM_ENNull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.COMM_ENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_IS_ASSESS_CHECKEDNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_IS_ASSESS_CHECKEDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_IS_ASSESS_CHECKEDNull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_IS_ASSESS_CHECKEDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_ADVICED_ASSESSMENT_DETAILNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_ADVICED_ASSESSMENT_DETAILColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_ADVICED_ASSESSMENT_DETAILNull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_ADVICED_ASSESSMENT_DETAILColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_ADVICED_ASSESSMENT_NOTENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_ADVICED_ASSESSMENT_NOTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_ADVICED_ASSESSMENT_NOTENull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_ADVICED_ASSESSMENT_NOTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFULL_ADDRESS_KHNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.FULL_ADDRESS_KHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFULL_ADDRESS_KHNull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.FULL_ADDRESS_KHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFULL_ADDRESS_ENGNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.FULL_ADDRESS_ENGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFULL_ADDRESS_ENGNull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.FULL_ADDRESS_ENGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_PSYCHIATRICNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_PSYCHIATRICColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_PSYCHIATRICNull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_PSYCHIATRICColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_NEUROLOGICALNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_NEUROLOGICALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_NEUROLOGICALNull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_NEUROLOGICALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_DDISORDERNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_DDISORDERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_DDISORDERNull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_DDISORDERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_PSYCHOLOGICALNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_PSYCHOLOGICALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_PSYCHOLOGICALNull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_PSYCHOLOGICALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDIAGNOSIS_IDNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.DIAGNOSIS_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDIAGNOSIS_IDNull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.DIAGNOSIS_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDIAGNOSISNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.DIAGNOSISColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDIAGNOSISNull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.DIAGNOSISColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNUMBER_VISITNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.NUMBER_VISITColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNUMBER_VISITNull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.NUMBER_VISITColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMAIN_THERAPY_IDNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.MAIN_THERAPY_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMAIN_THERAPY_IDNull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.MAIN_THERAPY_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMAIN_THERAPY_NAMENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.MAIN_THERAPY_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMAIN_THERAPY_NAMENull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.MAIN_THERAPY_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_OLD_NONull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_OLD_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_OLD_NONull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_OLD_NOColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CLIENT_CA_SOCIALRow
        Inherits Global.System.Data.DataRow
        
        Private tableCLIENT_CA_SOCIAL As CLIENT_CA_SOCIALDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCLIENT_CA_SOCIAL = CType(Me.Table,CLIENT_CA_SOCIALDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_SOCIAL_ID() As Decimal
            Get
                Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_SOCIAL_IDColumn),Decimal)
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_SOCIAL_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_NO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_NOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_NO' in table 'CLIENT_CA_SOCIAL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_COMORBIDITY() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_COMORBIDITYColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_COMORBIDITY' in table 'CLIENT_CA_SOCIAL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_COMORBIDITYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_CLINICAL_AUDIT() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CLINICAL_AUDITColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_CLINICAL_AUDIT' in table 'CLIENT_CA_SOCIAL' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CLINICAL_AUDITColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_POVERTY_CARD() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_POVERTY_CARDColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_POVERTY_CARD' in table 'CLIENT_CA_SOCIAL' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_POVERTY_CARDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_POVERTY_OTHERS() As String
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_POVERTY_OTHERSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_POVERTY_OTHERS' in table 'CLIENT_CA_SOCIAL' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_POVERTY_OTHERSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_UNIT_ALL_1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_UNIT_ALL_1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_UNIT_ALL_1' in table 'CLIENT_CA_SOCIAL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_UNIT_ALL_1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_UNIT_ALL_2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_UNIT_ALL_2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_UNIT_ALL_2' in table 'CLIENT_CA_SOCIAL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_UNIT_ALL_2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_SOCIAL_SERVICETYPE() As String
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_SOCIAL_SERVICETYPEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_SOCIAL_SERVICETYPE' in table 'CLIENT_CA_SOCIAL' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_SOCIAL_SERVICETYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_REFER_TO() As String
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_REFER_TOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_REFER_TO' in table 'CLIENT_CA_SOCIAL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_REFER_TOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_SOCIAL_WORKER() As String
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_SOCIAL_WORKERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_SOCIAL_WORKER' in table 'CLIENT_CA_SOCIAL' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_SOCIAL_WORKERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_CC_NP_FIT() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_NP_FITColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_CC_NP_FIT' in table 'CLIENT_CA_SOCIAL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_NP_FITColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_CC_NP_JERK() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_NP_JERKColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_CC_NP_JERK' in table 'CLIENT_CA_SOCIAL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_NP_JERKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_CC_NP_BSPELLS() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_NP_BSPELLSColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_CC_NP_BSPELLS' in table 'CLIENT_CA_SOCIAL' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_NP_BSPELLSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_CC_NP_HSHAKING() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_NP_HSHAKINGColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_CC_NP_HSHAKING' in table 'CLIENT_CA_SOCIAL' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_NP_HSHAKINGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_CC_NP_EYE_BLINK() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_NP_EYE_BLINKColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_CC_NP_EYE_BLINK' in table 'CLIENT_CA_SOCIAL' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_NP_EYE_BLINKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_CC_NP_OS_WEAK() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_NP_OS_WEAKColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_CC_NP_OS_WEAK' in table 'CLIENT_CA_SOCIAL' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_NP_OS_WEAKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_CC_NP_OTHER() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_NP_OTHERColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_CC_NP_OTHER' in table 'CLIENT_CA_SOCIAL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_NP_OTHERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_CC_PP_HEADACHE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_PP_HEADACHEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_CC_PP_HEADACHE' in table 'CLIENT_CA_SOCIAL' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_PP_HEADACHEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_CC_PP_FEAR() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_PP_FEARColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_CC_PP_FEAR' in table 'CLIENT_CA_SOCIAL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_PP_FEARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_CC_PP_THINK() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_PP_THINKColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_CC_PP_THINK' in table 'CLIENT_CA_SOCIAL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_PP_THINKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_CC_PP_WORRY() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_PP_WORRYColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_CC_PP_WORRY' in table 'CLIENT_CA_SOCIAL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_PP_WORRYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_CC_PP_STEAL() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_PP_STEALColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_CC_PP_STEAL' in table 'CLIENT_CA_SOCIAL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_PP_STEALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_CC_PP_DISOBE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_PP_DISOBEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_CC_PP_DISOBE' in table 'CLIENT_CA_SOCIAL' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_PP_DISOBEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_CC_PP_LIE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_PP_LIEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_CC_PP_LIE' in table 'CLIENT_CA_SOCIAL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_PP_LIEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_CC_PP_ANGRY() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_PP_ANGRYColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_CC_PP_ANGRY' in table 'CLIENT_CA_SOCIAL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_PP_ANGRYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_CC_PP_IRRIT() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_PP_IRRITColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_CC_PP_IRRIT' in table 'CLIENT_CA_SOCIAL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_PP_IRRITColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_CC_PP_SDIFFICULTY() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_PP_SDIFFICULTYColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_CC_PP_SDIFFICULTY' in table 'CLIENT_CA_SOCIAL' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_PP_SDIFFICULTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_CC_PP_FAINTING() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_PP_FAINTINGColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_CC_PP_FAINTING' in table 'CLIENT_CA_SOCIAL' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_PP_FAINTINGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_CC_PP_OTHER() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_PP_OTHERColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_CC_PP_OTHER' in table 'CLIENT_CA_SOCIAL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_PP_OTHERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_CC_MAJOR_TALK() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_MAJOR_TALKColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_CC_MAJOR_TALK' in table 'CLIENT_CA_SOCIAL' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_MAJOR_TALKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_CC_MAJOR_LAUGH() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_MAJOR_LAUGHColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_CC_MAJOR_LAUGH' in table 'CLIENT_CA_SOCIAL' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_MAJOR_LAUGHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_CC_MAJOR_STRAIGHT() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_MAJOR_STRAIGHTColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_CC_MAJOR_STRAIGHT' in table 'CLIENT_CA_SOCIAL' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_MAJOR_STRAIGHTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_CC_MAJOR_AGGR() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_MAJOR_AGGRColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_CC_MAJOR_AGGR' in table 'CLIENT_CA_SOCIAL' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_MAJOR_AGGRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_CC_MAJOR_SDISTURB() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_MAJOR_SDISTURBColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_CC_MAJOR_SDISTURB' in table 'CLIENT_CA_SOCIAL' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_MAJOR_SDISTURBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_CC_MAJOR_APPETITE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_MAJOR_APPETITEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_CC_MAJOR_APPETITE' in table 'CLIENT_CA_SOCIAL' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_MAJOR_APPETITEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_CC_MAJOR_SHYNESS() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_MAJOR_SHYNESSColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_CC_MAJOR_SHYNESS' in table 'CLIENT_CA_SOCIAL' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_MAJOR_SHYNESSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_CC_MAJOR_BREAK() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_MAJOR_BREAKColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_CC_MAJOR_BREAK' in table 'CLIENT_CA_SOCIAL' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_MAJOR_BREAKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_CC_MAJOR_GOAWAY() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_MAJOR_GOAWAYColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_CC_MAJOR_GOAWAY' in table 'CLIENT_CA_SOCIAL' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_MAJOR_GOAWAYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_CC_MAJOR_OTHER() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_MAJOR_OTHERColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_CC_MAJOR_OTHER' in table 'CLIENT_CA_SOCIAL' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_MAJOR_OTHERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_CC_DD_NOTALK() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_DD_NOTALKColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_CC_DD_NOTALK' in table 'CLIENT_CA_SOCIAL' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_DD_NOTALKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_CC_DD_NOWALK() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_DD_NOWALKColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_CC_DD_NOWALK' in table 'CLIENT_CA_SOCIAL' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_DD_NOWALKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_CC_DD_PLAYALONE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_DD_PLAYALONEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_CC_DD_PLAYALONE' in table 'CLIENT_CA_SOCIAL' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_DD_PLAYALONEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_CC_DD_BEAT() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_DD_BEATColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_CC_DD_BEAT' in table 'CLIENT_CA_SOCIAL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_DD_BEATColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_CC_DD_NORESPOND() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_DD_NORESPONDColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_CC_DD_NORESPOND' in table 'CLIENT_CA_SOCIAL' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_DD_NORESPONDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_CC_DD_TIP() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_DD_TIPColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_CC_DD_TIP' in table 'CLIENT_CA_SOCIAL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_DD_TIPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_CC_DD_POORMEM() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_DD_POORMEMColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_CC_DD_POORMEM' in table 'CLIENT_CA_SOCIAL' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_DD_POORMEMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_CC_DD_POORUNDER() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_DD_POORUNDERColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_CC_DD_POORUNDER' in table 'CLIENT_CA_SOCIAL' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_DD_POORUNDERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_CC_DD_POORSTUDY() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_DD_POORSTUDYColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_CC_DD_POORSTUDY' in table 'CLIENT_CA_SOCIAL' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_DD_POORSTUDYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_CC_DD_THROWING() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_DD_THROWINGColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_CC_DD_THROWING' in table 'CLIENT_CA_SOCIAL' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_DD_THROWINGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_CC_DD_DROOLING() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_DD_DROOLINGColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_CC_DD_DROOLING' in table 'CLIENT_CA_SOCIAL' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_DD_DROOLINGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_CC_DD_NONECK() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_DD_NONECKColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_CC_DD_NONECK' in table 'CLIENT_CA_SOCIAL' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_DD_NONECKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_CC_DD_OTHER() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_DD_OTHERColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_CC_DD_OTHER' in table 'CLIENT_CA_SOCIAL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_DD_OTHERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_PSYCHIATRIC() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_PSYCHIATRICColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_PSYCHIATRIC' in table 'CLIENT_CA_SOCIAL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_PSYCHIATRICColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_NEUROLOGICAL() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_NEUROLOGICALColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_NEUROLOGICAL' in table 'CLIENT_CA_SOCIAL' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_NEUROLOGICALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_DDISORDER() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_DDISORDERColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_DDISORDER' in table 'CLIENT_CA_SOCIAL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_DDISORDERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_PSYCHOLOGICAL() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_PSYCHOLOGICALColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_PSYCHOLOGICAL' in table 'CLIENT_CA_SOCIAL' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_PSYCHOLOGICALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_ADVISED_ASSESSMENT() As String
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_ADVISED_ASSESSMENTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_ADVISED_ASSESSMENT' in table 'CLIENT_CA_SOCIAL' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_ADVISED_ASSESSMENTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_ADVISED_ASSESSMENT_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_ADVISED_ASSESSMENT_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_ADVISED_ASSESSMENT_DATE' in table 'CLIENT_CA_SOCIAL'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_ADVISED_ASSESSMENT_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_ADVICED_ASSESSMENT_NOTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_ADVICED_ASSESSMENT_NOTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_ADVICED_ASSESSMENT_NOTE' in table 'CLIENT_CA_SOCIAL'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_ADVICED_ASSESSMENT_NOTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_ADVICED_ASSESSMENT_DETAIL() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_ADVICED_ASSESSMENT_DETAILColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_ADVICED_ASSESSMENT_DETAIL' in table 'CLIENT_CA_SOCIA"& _ 
                            "L' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_ADVICED_ASSESSMENT_DETAILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_NP_NOTES() As String
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_NP_NOTESColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_NP_NOTES' in table 'CLIENT_CA_SOCIAL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_NP_NOTESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_PP_NOTES() As String
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_PP_NOTESColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_PP_NOTES' in table 'CLIENT_CA_SOCIAL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_PP_NOTESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_DD_NOTES() As String
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_DD_NOTESColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_DD_NOTES' in table 'CLIENT_CA_SOCIAL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_DD_NOTESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_IS_ASSESS_CHECKED() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_IS_ASSESS_CHECKEDColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_IS_ASSESS_CHECKED' in table 'CLIENT_CA_SOCIAL' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_IS_ASSESS_CHECKEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MAIN_THERAPY_ID() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.MAIN_THERAPY_IDColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MAIN_THERAPY_ID' in table 'CLIENT_CA_SOCIAL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.MAIN_THERAPY_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MAIN_THERAPY_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableCLIENT_CA_SOCIAL.MAIN_THERAPY_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MAIN_THERAPY_NAME' in table 'CLIENT_CA_SOCIAL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCLIENT_CA_SOCIAL.MAIN_THERAPY_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_NONull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_NONull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_COMORBIDITYNull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_COMORBIDITYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_COMORBIDITYNull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_COMORBIDITYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_CLINICAL_AUDITNull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_CLINICAL_AUDITColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_CLINICAL_AUDITNull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CLINICAL_AUDITColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_POVERTY_CARDNull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_POVERTY_CARDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_POVERTY_CARDNull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_POVERTY_CARDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_POVERTY_OTHERSNull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_POVERTY_OTHERSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_POVERTY_OTHERSNull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_POVERTY_OTHERSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_UNIT_ALL_1Null() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_UNIT_ALL_1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_UNIT_ALL_1Null()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_UNIT_ALL_1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_UNIT_ALL_2Null() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_UNIT_ALL_2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_UNIT_ALL_2Null()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_UNIT_ALL_2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_SOCIAL_SERVICETYPENull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_SOCIAL_SERVICETYPEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_SOCIAL_SERVICETYPENull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_SOCIAL_SERVICETYPEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_REFER_TONull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_REFER_TOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_REFER_TONull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_REFER_TOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_SOCIAL_WORKERNull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_SOCIAL_WORKERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_SOCIAL_WORKERNull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_SOCIAL_WORKERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_CC_NP_FITNull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_NP_FITColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_CC_NP_FITNull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_NP_FITColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_CC_NP_JERKNull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_NP_JERKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_CC_NP_JERKNull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_NP_JERKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_CC_NP_BSPELLSNull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_NP_BSPELLSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_CC_NP_BSPELLSNull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_NP_BSPELLSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_CC_NP_HSHAKINGNull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_NP_HSHAKINGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_CC_NP_HSHAKINGNull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_NP_HSHAKINGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_CC_NP_EYE_BLINKNull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_NP_EYE_BLINKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_CC_NP_EYE_BLINKNull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_NP_EYE_BLINKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_CC_NP_OS_WEAKNull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_NP_OS_WEAKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_CC_NP_OS_WEAKNull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_NP_OS_WEAKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_CC_NP_OTHERNull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_NP_OTHERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_CC_NP_OTHERNull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_NP_OTHERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_CC_PP_HEADACHENull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_PP_HEADACHEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_CC_PP_HEADACHENull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_PP_HEADACHEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_CC_PP_FEARNull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_PP_FEARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_CC_PP_FEARNull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_PP_FEARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_CC_PP_THINKNull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_PP_THINKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_CC_PP_THINKNull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_PP_THINKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_CC_PP_WORRYNull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_PP_WORRYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_CC_PP_WORRYNull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_PP_WORRYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_CC_PP_STEALNull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_PP_STEALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_CC_PP_STEALNull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_PP_STEALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_CC_PP_DISOBENull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_PP_DISOBEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_CC_PP_DISOBENull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_PP_DISOBEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_CC_PP_LIENull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_PP_LIEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_CC_PP_LIENull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_PP_LIEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_CC_PP_ANGRYNull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_PP_ANGRYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_CC_PP_ANGRYNull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_PP_ANGRYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_CC_PP_IRRITNull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_PP_IRRITColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_CC_PP_IRRITNull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_PP_IRRITColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_CC_PP_SDIFFICULTYNull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_PP_SDIFFICULTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_CC_PP_SDIFFICULTYNull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_PP_SDIFFICULTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_CC_PP_FAINTINGNull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_PP_FAINTINGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_CC_PP_FAINTINGNull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_PP_FAINTINGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_CC_PP_OTHERNull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_PP_OTHERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_CC_PP_OTHERNull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_PP_OTHERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_CC_MAJOR_TALKNull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_MAJOR_TALKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_CC_MAJOR_TALKNull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_MAJOR_TALKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_CC_MAJOR_LAUGHNull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_MAJOR_LAUGHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_CC_MAJOR_LAUGHNull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_MAJOR_LAUGHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_CC_MAJOR_STRAIGHTNull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_MAJOR_STRAIGHTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_CC_MAJOR_STRAIGHTNull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_MAJOR_STRAIGHTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_CC_MAJOR_AGGRNull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_MAJOR_AGGRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_CC_MAJOR_AGGRNull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_MAJOR_AGGRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_CC_MAJOR_SDISTURBNull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_MAJOR_SDISTURBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_CC_MAJOR_SDISTURBNull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_MAJOR_SDISTURBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_CC_MAJOR_APPETITENull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_MAJOR_APPETITEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_CC_MAJOR_APPETITENull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_MAJOR_APPETITEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_CC_MAJOR_SHYNESSNull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_MAJOR_SHYNESSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_CC_MAJOR_SHYNESSNull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_MAJOR_SHYNESSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_CC_MAJOR_BREAKNull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_MAJOR_BREAKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_CC_MAJOR_BREAKNull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_MAJOR_BREAKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_CC_MAJOR_GOAWAYNull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_MAJOR_GOAWAYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_CC_MAJOR_GOAWAYNull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_MAJOR_GOAWAYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_CC_MAJOR_OTHERNull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_MAJOR_OTHERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_CC_MAJOR_OTHERNull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_MAJOR_OTHERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_CC_DD_NOTALKNull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_DD_NOTALKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_CC_DD_NOTALKNull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_DD_NOTALKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_CC_DD_NOWALKNull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_DD_NOWALKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_CC_DD_NOWALKNull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_DD_NOWALKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_CC_DD_PLAYALONENull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_DD_PLAYALONEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_CC_DD_PLAYALONENull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_DD_PLAYALONEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_CC_DD_BEATNull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_DD_BEATColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_CC_DD_BEATNull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_DD_BEATColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_CC_DD_NORESPONDNull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_DD_NORESPONDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_CC_DD_NORESPONDNull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_DD_NORESPONDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_CC_DD_TIPNull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_DD_TIPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_CC_DD_TIPNull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_DD_TIPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_CC_DD_POORMEMNull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_DD_POORMEMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_CC_DD_POORMEMNull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_DD_POORMEMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_CC_DD_POORUNDERNull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_DD_POORUNDERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_CC_DD_POORUNDERNull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_DD_POORUNDERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_CC_DD_POORSTUDYNull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_DD_POORSTUDYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_CC_DD_POORSTUDYNull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_DD_POORSTUDYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_CC_DD_THROWINGNull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_DD_THROWINGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_CC_DD_THROWINGNull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_DD_THROWINGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_CC_DD_DROOLINGNull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_DD_DROOLINGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_CC_DD_DROOLINGNull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_DD_DROOLINGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_CC_DD_NONECKNull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_DD_NONECKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_CC_DD_NONECKNull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_DD_NONECKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_CC_DD_OTHERNull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_DD_OTHERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_CC_DD_OTHERNull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_CC_DD_OTHERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_PSYCHIATRICNull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_PSYCHIATRICColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_PSYCHIATRICNull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_PSYCHIATRICColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_NEUROLOGICALNull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_NEUROLOGICALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_NEUROLOGICALNull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_NEUROLOGICALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_DDISORDERNull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_DDISORDERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_DDISORDERNull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_DDISORDERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_PSYCHOLOGICALNull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_PSYCHOLOGICALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_PSYCHOLOGICALNull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_PSYCHOLOGICALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_ADVISED_ASSESSMENTNull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_ADVISED_ASSESSMENTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_ADVISED_ASSESSMENTNull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_ADVISED_ASSESSMENTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_ADVISED_ASSESSMENT_DATENull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_ADVISED_ASSESSMENT_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_ADVISED_ASSESSMENT_DATENull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_ADVISED_ASSESSMENT_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_ADVICED_ASSESSMENT_NOTENull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_ADVICED_ASSESSMENT_NOTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_ADVICED_ASSESSMENT_NOTENull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_ADVICED_ASSESSMENT_NOTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_ADVICED_ASSESSMENT_DETAILNull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_ADVICED_ASSESSMENT_DETAILColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_ADVICED_ASSESSMENT_DETAILNull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_ADVICED_ASSESSMENT_DETAILColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_NP_NOTESNull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_NP_NOTESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_NP_NOTESNull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_NP_NOTESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_PP_NOTESNull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_PP_NOTESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_PP_NOTESNull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_PP_NOTESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_DD_NOTESNull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_DD_NOTESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_DD_NOTESNull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_DD_NOTESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_IS_ASSESS_CHECKEDNull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.CLIENT_IS_ASSESS_CHECKEDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_IS_ASSESS_CHECKEDNull()
            Me(Me.tableCLIENT_CA_SOCIAL.CLIENT_IS_ASSESS_CHECKEDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMAIN_THERAPY_IDNull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.MAIN_THERAPY_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMAIN_THERAPY_IDNull()
            Me(Me.tableCLIENT_CA_SOCIAL.MAIN_THERAPY_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMAIN_THERAPY_NAMENull() As Boolean
            Return Me.IsNull(Me.tableCLIENT_CA_SOCIAL.MAIN_THERAPY_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMAIN_THERAPY_NAMENull()
            Me(Me.tableCLIENT_CA_SOCIAL.MAIN_THERAPY_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CCAMH_CLIENT_DDISORDERRow
        Inherits Global.System.Data.DataRow
        
        Private tableCCAMH_CLIENT_DDISORDER As CCAMH_CLIENT_DDISORDERDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCCAMH_CLIENT_DDISORDER = CType(Me.Table,CCAMH_CLIENT_DDISORDERDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SYMPTOM_ID() As Decimal
            Get
                Return CType(Me(Me.tableCCAMH_CLIENT_DDISORDER.SYMPTOM_IDColumn),Decimal)
            End Get
            Set
                Me(Me.tableCCAMH_CLIENT_DDISORDER.SYMPTOM_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SYMPTOM_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENT_DDISORDER.SYMPTOM_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SYMPTOM_NAME' in table 'CCAMH_CLIENT_DDISORDER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENT_DDISORDER.SYMPTOM_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESCRIPTION() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENT_DDISORDER.DESCRIPTIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESCRIPTION' in table 'CCAMH_CLIENT_DDISORDER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENT_DDISORDER.DESCRIPTIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSYMPTOM_NAMENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENT_DDISORDER.SYMPTOM_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSYMPTOM_NAMENull()
            Me(Me.tableCCAMH_CLIENT_DDISORDER.SYMPTOM_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESCRIPTIONNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENT_DDISORDER.DESCRIPTIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESCRIPTIONNull()
            Me(Me.tableCCAMH_CLIENT_DDISORDER.DESCRIPTIONColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CCAMH_DDISORDER_DETAILRow
        Inherits Global.System.Data.DataRow
        
        Private tableCCAMH_DDISORDER_DETAIL As CCAMH_DDISORDER_DETAILDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCCAMH_DDISORDER_DETAIL = CType(Me.Table,CCAMH_DDISORDER_DETAILDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REF_ID() As Decimal
            Get
                Return CType(Me(Me.tableCCAMH_DDISORDER_DETAIL.REF_IDColumn),Decimal)
            End Get
            Set
                Me(Me.tableCCAMH_DDISORDER_DETAIL.REF_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_NO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_DDISORDER_DETAIL.CLIENT_NOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_NO' in table 'CCAMH_DDISORDER_DETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_DDISORDER_DETAIL.CLIENT_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SYMPTOM_ID() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_DDISORDER_DETAIL.SYMPTOM_IDColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SYMPTOM_ID' in table 'CCAMH_DDISORDER_DETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_DDISORDER_DETAIL.SYMPTOM_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESCRIPTION() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_DDISORDER_DETAIL.DESCRIPTIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESCRIPTION' in table 'CCAMH_DDISORDER_DETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_DDISORDER_DETAIL.DESCRIPTIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SYMPTOM_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_DDISORDER_DETAIL.SYMPTOM_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SYMPTOM_NAME' in table 'CCAMH_DDISORDER_DETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_DDISORDER_DETAIL.SYMPTOM_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_NONull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_DDISORDER_DETAIL.CLIENT_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_NONull()
            Me(Me.tableCCAMH_DDISORDER_DETAIL.CLIENT_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSYMPTOM_IDNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_DDISORDER_DETAIL.SYMPTOM_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSYMPTOM_IDNull()
            Me(Me.tableCCAMH_DDISORDER_DETAIL.SYMPTOM_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESCRIPTIONNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_DDISORDER_DETAIL.DESCRIPTIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESCRIPTIONNull()
            Me(Me.tableCCAMH_DDISORDER_DETAIL.DESCRIPTIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSYMPTOM_NAMENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_DDISORDER_DETAIL.SYMPTOM_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSYMPTOM_NAMENull()
            Me(Me.tableCCAMH_DDISORDER_DETAIL.SYMPTOM_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CCAMH_PSYCHO_MINOR_DETAILRow
        Inherits Global.System.Data.DataRow
        
        Private tableCCAMH_PSYCHO_MINOR_DETAIL As CCAMH_PSYCHO_MINOR_DETAILDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCCAMH_PSYCHO_MINOR_DETAIL = CType(Me.Table,CCAMH_PSYCHO_MINOR_DETAILDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REF_ID() As Decimal
            Get
                Return CType(Me(Me.tableCCAMH_PSYCHO_MINOR_DETAIL.REF_IDColumn),Decimal)
            End Get
            Set
                Me(Me.tableCCAMH_PSYCHO_MINOR_DETAIL.REF_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_NO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_PSYCHO_MINOR_DETAIL.CLIENT_NOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_NO' in table 'CCAMH_PSYCHO_MINOR_DETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_PSYCHO_MINOR_DETAIL.CLIENT_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SYMPTOM_ID() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_PSYCHO_MINOR_DETAIL.SYMPTOM_IDColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SYMPTOM_ID' in table 'CCAMH_PSYCHO_MINOR_DETAIL' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_PSYCHO_MINOR_DETAIL.SYMPTOM_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESCRIPTION() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_PSYCHO_MINOR_DETAIL.DESCRIPTIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESCRIPTION' in table 'CCAMH_PSYCHO_MINOR_DETAIL' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_PSYCHO_MINOR_DETAIL.DESCRIPTIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SYMPTOM_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_PSYCHO_MINOR_DETAIL.SYMPTOM_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SYMPTOM_NAME' in table 'CCAMH_PSYCHO_MINOR_DETAIL' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_PSYCHO_MINOR_DETAIL.SYMPTOM_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_NONull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_PSYCHO_MINOR_DETAIL.CLIENT_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_NONull()
            Me(Me.tableCCAMH_PSYCHO_MINOR_DETAIL.CLIENT_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSYMPTOM_IDNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_PSYCHO_MINOR_DETAIL.SYMPTOM_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSYMPTOM_IDNull()
            Me(Me.tableCCAMH_PSYCHO_MINOR_DETAIL.SYMPTOM_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESCRIPTIONNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_PSYCHO_MINOR_DETAIL.DESCRIPTIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESCRIPTIONNull()
            Me(Me.tableCCAMH_PSYCHO_MINOR_DETAIL.DESCRIPTIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSYMPTOM_NAMENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_PSYCHO_MINOR_DETAIL.SYMPTOM_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSYMPTOM_NAMENull()
            Me(Me.tableCCAMH_PSYCHO_MINOR_DETAIL.SYMPTOM_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CCAMH_NEURORow
        Inherits Global.System.Data.DataRow
        
        Private tableCCAMH_NEURO As CCAMH_NEURODataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCCAMH_NEURO = CType(Me.Table,CCAMH_NEURODataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SYMPTOM_ID() As Decimal
            Get
                Return CType(Me(Me.tableCCAMH_NEURO.SYMPTOM_IDColumn),Decimal)
            End Get
            Set
                Me(Me.tableCCAMH_NEURO.SYMPTOM_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESCRIPTION() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_NEURO.DESCRIPTIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESCRIPTION' in table 'CCAMH_NEURO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_NEURO.DESCRIPTIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SYMPTOM_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_NEURO.SYMPTOM_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SYMPTOM_NAME' in table 'CCAMH_NEURO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_NEURO.SYMPTOM_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESCRIPTIONNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_NEURO.DESCRIPTIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESCRIPTIONNull()
            Me(Me.tableCCAMH_NEURO.DESCRIPTIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSYMPTOM_NAMENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_NEURO.SYMPTOM_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSYMPTOM_NAMENull()
            Me(Me.tableCCAMH_NEURO.SYMPTOM_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CCAMH_PSYCHO_MAJORRow
        Inherits Global.System.Data.DataRow
        
        Private tableCCAMH_PSYCHO_MAJOR As CCAMH_PSYCHO_MAJORDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCCAMH_PSYCHO_MAJOR = CType(Me.Table,CCAMH_PSYCHO_MAJORDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SYMPTOM_ID() As Decimal
            Get
                Return CType(Me(Me.tableCCAMH_PSYCHO_MAJOR.SYMPTOM_IDColumn),Decimal)
            End Get
            Set
                Me(Me.tableCCAMH_PSYCHO_MAJOR.SYMPTOM_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SYMPTOM_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_PSYCHO_MAJOR.SYMPTOM_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SYMPTOM_NAME' in table 'CCAMH_PSYCHO_MAJOR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_PSYCHO_MAJOR.SYMPTOM_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESCRIPTION() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_PSYCHO_MAJOR.DESCRIPTIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESCRIPTION' in table 'CCAMH_PSYCHO_MAJOR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_PSYCHO_MAJOR.DESCRIPTIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSYMPTOM_NAMENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_PSYCHO_MAJOR.SYMPTOM_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSYMPTOM_NAMENull()
            Me(Me.tableCCAMH_PSYCHO_MAJOR.SYMPTOM_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESCRIPTIONNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_PSYCHO_MAJOR.DESCRIPTIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESCRIPTIONNull()
            Me(Me.tableCCAMH_PSYCHO_MAJOR.DESCRIPTIONColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CCAMH_PSYCHO_MINORRow
        Inherits Global.System.Data.DataRow
        
        Private tableCCAMH_PSYCHO_MINOR As CCAMH_PSYCHO_MINORDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCCAMH_PSYCHO_MINOR = CType(Me.Table,CCAMH_PSYCHO_MINORDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SYMPTOM_ID() As Decimal
            Get
                Return CType(Me(Me.tableCCAMH_PSYCHO_MINOR.SYMPTOM_IDColumn),Decimal)
            End Get
            Set
                Me(Me.tableCCAMH_PSYCHO_MINOR.SYMPTOM_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SYMPTOM_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_PSYCHO_MINOR.SYMPTOM_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SYMPTOM_NAME' in table 'CCAMH_PSYCHO_MINOR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_PSYCHO_MINOR.SYMPTOM_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESCRIPTION() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_PSYCHO_MINOR.DESCRIPTIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESCRIPTION' in table 'CCAMH_PSYCHO_MINOR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_PSYCHO_MINOR.DESCRIPTIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSYMPTOM_NAMENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_PSYCHO_MINOR.SYMPTOM_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSYMPTOM_NAMENull()
            Me(Me.tableCCAMH_PSYCHO_MINOR.SYMPTOM_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESCRIPTIONNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_PSYCHO_MINOR.DESCRIPTIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESCRIPTIONNull()
            Me(Me.tableCCAMH_PSYCHO_MINOR.DESCRIPTIONColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CCAMH_PSYCHO_MAJOR_DETAILRow
        Inherits Global.System.Data.DataRow
        
        Private tableCCAMH_PSYCHO_MAJOR_DETAIL As CCAMH_PSYCHO_MAJOR_DETAILDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCCAMH_PSYCHO_MAJOR_DETAIL = CType(Me.Table,CCAMH_PSYCHO_MAJOR_DETAILDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REF_ID() As Decimal
            Get
                Return CType(Me(Me.tableCCAMH_PSYCHO_MAJOR_DETAIL.REF_IDColumn),Decimal)
            End Get
            Set
                Me(Me.tableCCAMH_PSYCHO_MAJOR_DETAIL.REF_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_NO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_PSYCHO_MAJOR_DETAIL.CLIENT_NOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_NO' in table 'CCAMH_PSYCHO_MAJOR_DETAIL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_PSYCHO_MAJOR_DETAIL.CLIENT_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SYMPTOM_ID() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_PSYCHO_MAJOR_DETAIL.SYMPTOM_IDColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SYMPTOM_ID' in table 'CCAMH_PSYCHO_MAJOR_DETAIL' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_PSYCHO_MAJOR_DETAIL.SYMPTOM_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESCRIPTION() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_PSYCHO_MAJOR_DETAIL.DESCRIPTIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESCRIPTION' in table 'CCAMH_PSYCHO_MAJOR_DETAIL' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_PSYCHO_MAJOR_DETAIL.DESCRIPTIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SYMPTOM_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_PSYCHO_MAJOR_DETAIL.SYMPTOM_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SYMPTOM_NAME' in table 'CCAMH_PSYCHO_MAJOR_DETAIL' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_PSYCHO_MAJOR_DETAIL.SYMPTOM_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_NONull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_PSYCHO_MAJOR_DETAIL.CLIENT_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_NONull()
            Me(Me.tableCCAMH_PSYCHO_MAJOR_DETAIL.CLIENT_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSYMPTOM_IDNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_PSYCHO_MAJOR_DETAIL.SYMPTOM_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSYMPTOM_IDNull()
            Me(Me.tableCCAMH_PSYCHO_MAJOR_DETAIL.SYMPTOM_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESCRIPTIONNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_PSYCHO_MAJOR_DETAIL.DESCRIPTIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESCRIPTIONNull()
            Me(Me.tableCCAMH_PSYCHO_MAJOR_DETAIL.DESCRIPTIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSYMPTOM_NAMENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_PSYCHO_MAJOR_DETAIL.SYMPTOM_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSYMPTOM_NAMENull()
            Me(Me.tableCCAMH_PSYCHO_MAJOR_DETAIL.SYMPTOM_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CCAMH_CLIENT_NEURORow
        Inherits Global.System.Data.DataRow
        
        Private tableCCAMH_CLIENT_NEURO As CCAMH_CLIENT_NEURODataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCCAMH_CLIENT_NEURO = CType(Me.Table,CCAMH_CLIENT_NEURODataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REF_ID() As Decimal
            Get
                Return CType(Me(Me.tableCCAMH_CLIENT_NEURO.REF_IDColumn),Decimal)
            End Get
            Set
                Me(Me.tableCCAMH_CLIENT_NEURO.REF_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_NO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENT_NEURO.CLIENT_NOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_NO' in table 'CCAMH_CLIENT_NEURO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENT_NEURO.CLIENT_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SYMPTOM_ID() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENT_NEURO.SYMPTOM_IDColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SYMPTOM_ID' in table 'CCAMH_CLIENT_NEURO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENT_NEURO.SYMPTOM_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESCRIPTION() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENT_NEURO.DESCRIPTIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESCRIPTION' in table 'CCAMH_CLIENT_NEURO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENT_NEURO.DESCRIPTIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SYMPTOM_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_CLIENT_NEURO.SYMPTOM_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SYMPTOM_NAME' in table 'CCAMH_CLIENT_NEURO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_CLIENT_NEURO.SYMPTOM_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_NONull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENT_NEURO.CLIENT_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_NONull()
            Me(Me.tableCCAMH_CLIENT_NEURO.CLIENT_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSYMPTOM_IDNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENT_NEURO.SYMPTOM_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSYMPTOM_IDNull()
            Me(Me.tableCCAMH_CLIENT_NEURO.SYMPTOM_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESCRIPTIONNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENT_NEURO.DESCRIPTIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESCRIPTIONNull()
            Me(Me.tableCCAMH_CLIENT_NEURO.DESCRIPTIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSYMPTOM_NAMENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_CLIENT_NEURO.SYMPTOM_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSYMPTOM_NAMENull()
            Me(Me.tableCCAMH_CLIENT_NEURO.SYMPTOM_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class CCAMH_VIEW_ADVISED_CLIENTSRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CCAMH_VIEW_ADVISED_CLIENTSRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As CCAMH_VIEW_ADVISED_CLIENTSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As CCAMH_VIEW_ADVISED_CLIENTSRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class CLIENT_CA_SOCIALRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CLIENT_CA_SOCIALRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As CLIENT_CA_SOCIALRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As CLIENT_CA_SOCIALRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class CCAMH_CLIENT_DDISORDERRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CCAMH_CLIENT_DDISORDERRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As CCAMH_CLIENT_DDISORDERRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As CCAMH_CLIENT_DDISORDERRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class CCAMH_DDISORDER_DETAILRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CCAMH_DDISORDER_DETAILRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As CCAMH_DDISORDER_DETAILRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As CCAMH_DDISORDER_DETAILRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class CCAMH_PSYCHO_MINOR_DETAILRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CCAMH_PSYCHO_MINOR_DETAILRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As CCAMH_PSYCHO_MINOR_DETAILRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As CCAMH_PSYCHO_MINOR_DETAILRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class CCAMH_NEURORowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CCAMH_NEURORow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As CCAMH_NEURORow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As CCAMH_NEURORow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class CCAMH_PSYCHO_MAJORRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CCAMH_PSYCHO_MAJORRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As CCAMH_PSYCHO_MAJORRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As CCAMH_PSYCHO_MAJORRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class CCAMH_PSYCHO_MINORRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CCAMH_PSYCHO_MINORRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As CCAMH_PSYCHO_MINORRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As CCAMH_PSYCHO_MINORRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class CCAMH_PSYCHO_MAJOR_DETAILRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CCAMH_PSYCHO_MAJOR_DETAILRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As CCAMH_PSYCHO_MAJOR_DETAILRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As CCAMH_PSYCHO_MAJOR_DETAILRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class CCAMH_CLIENT_NEURORowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CCAMH_CLIENT_NEURORow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As CCAMH_CLIENT_NEURORow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As CCAMH_CLIENT_NEURORow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace DS_ClientImpressionTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class CCAMH_VIEW_ADVISED_CLIENTSTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "CCAMH_VIEW_ADVISED_CLIENTS"
            tableMapping.ColumnMappings.Add("CLIENT_NO", "CLIENT_NO")
            tableMapping.ColumnMappings.Add("CLIENT_NAME_KHM", "CLIENT_NAME_KHM")
            tableMapping.ColumnMappings.Add("CLIENT_NAME", "CLIENT_NAME")
            tableMapping.ColumnMappings.Add("CLIENT_SEX", "CLIENT_SEX")
            tableMapping.ColumnMappings.Add("CLIENT_AGE", "CLIENT_AGE")
            tableMapping.ColumnMappings.Add("CLIENT_DOB", "CLIENT_DOB")
            tableMapping.ColumnMappings.Add("CLIENT_DATE_REG", "CLIENT_DATE_REG")
            tableMapping.ColumnMappings.Add("CLIENT_ADVISED_ASSESSMENT_DATE", "CLIENT_ADVISED_ASSESSMENT_DATE")
            tableMapping.ColumnMappings.Add("CLIENT_ADVISED_ASSESSMENT", "CLIENT_ADVISED_ASSESSMENT")
            tableMapping.ColumnMappings.Add("CLIENT_ADDRESS_PHONE", "CLIENT_ADDRESS_PHONE")
            tableMapping.ColumnMappings.Add("PROV_EN", "PROV_EN")
            tableMapping.ColumnMappings.Add("DIST_EN", "DIST_EN")
            tableMapping.ColumnMappings.Add("VILL_EN", "VILL_EN")
            tableMapping.ColumnMappings.Add("COMM_EN", "COMM_EN")
            tableMapping.ColumnMappings.Add("CLIENT_IS_ASSESS_CHECKED", "CLIENT_IS_ASSESS_CHECKED")
            tableMapping.ColumnMappings.Add("CLIENT_ADVICED_ASSESSMENT_DETAIL", "CLIENT_ADVICED_ASSESSMENT_DETAIL")
            tableMapping.ColumnMappings.Add("CLIENT_ADVICED_ASSESSMENT_NOTE", "CLIENT_ADVICED_ASSESSMENT_NOTE")
            tableMapping.ColumnMappings.Add("FULL_ADDRESS_KH", "FULL_ADDRESS_KH")
            tableMapping.ColumnMappings.Add("FULL_ADDRESS_ENG", "FULL_ADDRESS_ENG")
            tableMapping.ColumnMappings.Add("CLIENT_PSYCHIATRIC", "CLIENT_PSYCHIATRIC")
            tableMapping.ColumnMappings.Add("CLIENT_NEUROLOGICAL", "CLIENT_NEUROLOGICAL")
            tableMapping.ColumnMappings.Add("CLIENT_DDISORDER", "CLIENT_DDISORDER")
            tableMapping.ColumnMappings.Add("CLIENT_PSYCHOLOGICAL", "CLIENT_PSYCHOLOGICAL")
            tableMapping.ColumnMappings.Add("DIAGNOSIS_ID", "DIAGNOSIS_ID")
            tableMapping.ColumnMappings.Add("DIAGNOSIS", "DIAGNOSIS")
            tableMapping.ColumnMappings.Add("NUMBER_VISIT", "NUMBER_VISIT")
            tableMapping.ColumnMappings.Add("MAIN_THERAPY_ID", "MAIN_THERAPY_ID")
            tableMapping.ColumnMappings.Add("MAIN_THERAPY_NAME", "MAIN_THERAPY_NAME")
            tableMapping.ColumnMappings.Add("CLIENT_OLD_NO", "CLIENT_OLD_NO")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.KTGSYS.My.MySettings.Default.TakeoDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(9) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        CLIENT_NO, CLIENT_NAME_KHM, CLIENT_NAME, CLIENT_SEX, CLIENT_AGE, CL"& _ 
                "IENT_DOB, CLIENT_DATE_REG, CLIENT_ADVISED_ASSESSMENT_DATE, CLIENT_ADDRESS_PHONE,"& _ 
                " PROV_EN, DIST_EN, VILL_EN, COMM_EN, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CLIENT_ADVISED_A"& _ 
                "SSESSMENT, CLIENT_IS_ASSESS_CHECKED, CLIENT_ADVICED_ASSESSMENT_DETAIL, CLIENT_AD"& _ 
                "VICED_ASSESSMENT_NOTE, FULL_ADDRESS_KH, FULL_ADDRESS_ENG, CLIENT_PSYCHIATRIC, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "                         CLIENT_NEUROLOGICAL, CLIENT_DDISORDER, CLIENT_PSYCHOLOG"& _ 
                "ICAL, DIAGNOSIS_ID, DIAGNOSIS, NUMBER_VISIT, MAIN_THERAPY_ID, MAIN_THERAPY_NAME,"& _ 
                " CLIENT_OLD_NO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            CCAMH_VIEW_ADVISED_CLIENTS"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT CLIENT_ADDRESS_PHONE, CLIENT_ADVICED_ASSESSMENT_DETAIL, CLIENT_ADVICED_ASS"& _ 
                "ESSMENT_NOTE, CLIENT_ADVISED_ASSESSMENT, CLIENT_ADVISED_ASSESSMENT_DATE, CLIENT_"& _ 
                "AGE, CLIENT_DATE_REG, CLIENT_DDISORDER, CLIENT_DOB, CLIENT_IS_ASSESS_CHECKED, CL"& _ 
                "IENT_NAME, CLIENT_NAME_KHM, CLIENT_NEUROLOGICAL, CLIENT_NO, CLIENT_OLD_NO, CLIEN"& _ 
                "T_PSYCHIATRIC, CLIENT_PSYCHOLOGICAL, CLIENT_SEX, COMM_EN, DIAGNOSIS, DIAGNOSIS_I"& _ 
                "D, DIST_EN, FULL_ADDRESS_ENG, FULL_ADDRESS_KH, MAIN_THERAPY_ID, MAIN_THERAPY_NAM"& _ 
                "E, NUMBER_VISIT, PROV_EN, VILL_EN FROM CCAMH_VIEW_ADVISED_CLIENTS WHERE (CLIENT_"& _ 
                "ADVISED_ASSESSMENT_DATE BETWEEN @DateFrom AND @DateTo) AND (CLIENT_ADVICED_ASSES"& _ 
                "SMENT_DETAIL = @CLIENT_ADVICED_ASSESSMENT_DETAIL)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateFrom", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADVISED_ASSESSMENT_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateTo", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADVISED_ASSESSMENT_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_ADVICED_ASSESSMENT_DETAIL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADVICED_ASSESSMENT_DETAIL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT CLIENT_ADDRESS_PHONE, CLIENT_ADVICED_ASSESSMENT_DETAIL, CLIENT_ADVICED_ASS"& _ 
                "ESSMENT_NOTE, CLIENT_ADVISED_ASSESSMENT, CLIENT_ADVISED_ASSESSMENT_DATE, CLIENT_"& _ 
                "AGE, CLIENT_DATE_REG, CLIENT_DDISORDER, CLIENT_DOB, CLIENT_IS_ASSESS_CHECKED, CL"& _ 
                "IENT_NAME, CLIENT_NAME_KHM, CLIENT_NEUROLOGICAL, CLIENT_NO, CLIENT_OLD_NO, CLIEN"& _ 
                "T_PSYCHIATRIC, CLIENT_PSYCHOLOGICAL, CLIENT_SEX, COMM_EN, DIAGNOSIS, DIAGNOSIS_I"& _ 
                "D, DIST_EN, FULL_ADDRESS_ENG, FULL_ADDRESS_KH, MAIN_THERAPY_ID, MAIN_THERAPY_NAM"& _ 
                "E, NUMBER_VISIT, PROV_EN, VILL_EN FROM CCAMH_VIEW_ADVISED_CLIENTS WHERE (CLIENT_"& _ 
                "NO = @CLIENT_NO) AND (CLIENT_DATE_REG BETWEEN @DFrom AND @DTo)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DFrom", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DATE_REG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DTo", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DATE_REG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT CLIENT_ADDRESS_PHONE, CLIENT_ADVICED_ASSESSMENT_DETAIL, CLIENT_ADVICED_ASS"& _ 
                "ESSMENT_NOTE, CLIENT_ADVISED_ASSESSMENT, CLIENT_ADVISED_ASSESSMENT_DATE, CLIENT_"& _ 
                "AGE, CLIENT_DATE_REG, CLIENT_DDISORDER, CLIENT_DOB, CLIENT_IS_ASSESS_CHECKED, CL"& _ 
                "IENT_NAME, CLIENT_NAME_KHM, CLIENT_NEUROLOGICAL, CLIENT_NO, CLIENT_OLD_NO, CLIEN"& _ 
                "T_PSYCHIATRIC, CLIENT_PSYCHOLOGICAL, CLIENT_SEX, COMM_EN, DIAGNOSIS, DIAGNOSIS_I"& _ 
                "D, DIST_EN, FULL_ADDRESS_ENG, FULL_ADDRESS_KH, MAIN_THERAPY_ID, MAIN_THERAPY_NAM"& _ 
                "E, NUMBER_VISIT, PROV_EN, VILL_EN FROM CCAMH_VIEW_ADVISED_CLIENTS WHERE (CLIENT_"& _ 
                "ADDRESS_PHONE LIKE + '%' + @CLIENT_ADDRESS_PHONE + '%') AND (CLIENT_DATE_REG BET"& _ 
                "WEEN @DFrom AND @DTo)"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_ADDRESS_PHONE", Global.System.Data.SqlDbType.VarChar, 150, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADDRESS_PHONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DFrom", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DATE_REG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DTo", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DATE_REG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "SELECT CLIENT_ADDRESS_PHONE, CLIENT_ADVICED_ASSESSMENT_DETAIL, CLIENT_ADVICED_ASS"& _ 
                "ESSMENT_NOTE, CLIENT_ADVISED_ASSESSMENT, CLIENT_ADVISED_ASSESSMENT_DATE, CLIENT_"& _ 
                "AGE, CLIENT_DATE_REG, CLIENT_DDISORDER, CLIENT_DOB, CLIENT_IS_ASSESS_CHECKED, CL"& _ 
                "IENT_NAME, CLIENT_NAME_KHM, CLIENT_NEUROLOGICAL, CLIENT_NO, CLIENT_OLD_NO, CLIEN"& _ 
                "T_PSYCHIATRIC, CLIENT_PSYCHOLOGICAL, CLIENT_SEX, COMM_EN, DIAGNOSIS, DIAGNOSIS_I"& _ 
                "D, DIST_EN, FULL_ADDRESS_ENG, FULL_ADDRESS_KH, MAIN_THERAPY_ID, MAIN_THERAPY_NAM"& _ 
                "E, NUMBER_VISIT, PROV_EN, VILL_EN FROM CCAMH_VIEW_ADVISED_CLIENTS WHERE (CLIENT_"& _ 
                "NAME LIKE + '%' + @CLIENT_NAME + '%') AND (CLIENT_ADVISED_ASSESSMENT_DATE BETWEE"& _ 
                "N @DateFrom AND @DateTo)"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NAME", Global.System.Data.SqlDbType.NVarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateFrom", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADVISED_ASSESSMENT_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateTo", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADVISED_ASSESSMENT_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(5).Connection = Me.Connection
            Me._commandCollection(5).CommandText = "SELECT CLIENT_ADDRESS_PHONE, CLIENT_ADVICED_ASSESSMENT_DETAIL, CLIENT_ADVICED_ASS"& _ 
                "ESSMENT_NOTE, CLIENT_ADVISED_ASSESSMENT, CLIENT_ADVISED_ASSESSMENT_DATE, CLIENT_"& _ 
                "AGE, CLIENT_DATE_REG, CLIENT_DDISORDER, CLIENT_DOB, CLIENT_IS_ASSESS_CHECKED, CL"& _ 
                "IENT_NAME, CLIENT_NAME_KHM, CLIENT_NEUROLOGICAL, CLIENT_NO, CLIENT_OLD_NO, CLIEN"& _ 
                "T_PSYCHIATRIC, CLIENT_PSYCHOLOGICAL, CLIENT_SEX, COMM_EN, DIAGNOSIS, DIAGNOSIS_I"& _ 
                "D, DIST_EN, FULL_ADDRESS_ENG, FULL_ADDRESS_KH, MAIN_THERAPY_ID, MAIN_THERAPY_NAM"& _ 
                "E, NUMBER_VISIT, PROV_EN, VILL_EN FROM CCAMH_VIEW_ADVISED_CLIENTS WHERE (CLIENT_"& _ 
                "DATE_REG BETWEEN @Dafrom AND @DTo)"
            Me._commandCollection(5).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Dafrom", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DATE_REG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DTo", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DATE_REG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(6).Connection = Me.Connection
            Me._commandCollection(6).CommandText = "SELECT CLIENT_ADDRESS_PHONE, CLIENT_ADVICED_ASSESSMENT_DETAIL, CLIENT_ADVICED_ASS"& _ 
                "ESSMENT_NOTE, CLIENT_ADVISED_ASSESSMENT, CLIENT_ADVISED_ASSESSMENT_DATE, CLIENT_"& _ 
                "AGE, CLIENT_DATE_REG, CLIENT_DDISORDER, CLIENT_DOB, CLIENT_IS_ASSESS_CHECKED, CL"& _ 
                "IENT_NAME, CLIENT_NAME_KHM, CLIENT_NEUROLOGICAL, CLIENT_NO, CLIENT_OLD_NO, CLIEN"& _ 
                "T_PSYCHIATRIC, CLIENT_PSYCHOLOGICAL, CLIENT_SEX, COMM_EN, DIAGNOSIS, DIAGNOSIS_I"& _ 
                "D, DIST_EN, FULL_ADDRESS_ENG, FULL_ADDRESS_KH, MAIN_THERAPY_ID, MAIN_THERAPY_NAM"& _ 
                "E, NUMBER_VISIT, PROV_EN, VILL_EN FROM CCAMH_VIEW_ADVISED_CLIENTS WHERE (CLIENT_"& _ 
                "ADVISED_ASSESSMENT = @CLIENT_ADVISED_ASSESSMENT) AND (CLIENT_DATE_REG BETWEEN @D"& _ 
                "ateFrom AND @DateTo)"
            Me._commandCollection(6).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_ADVISED_ASSESSMENT", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADVISED_ASSESSMENT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateFrom", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DATE_REG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateTo", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DATE_REG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(7) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(7).Connection = Me.Connection
            Me._commandCollection(7).CommandText = "SELECT CLIENT_ADDRESS_PHONE, CLIENT_ADVICED_ASSESSMENT_DETAIL, CLIENT_ADVICED_ASS"& _ 
                "ESSMENT_NOTE, CLIENT_ADVISED_ASSESSMENT, CLIENT_ADVISED_ASSESSMENT_DATE, CLIENT_"& _ 
                "AGE, CLIENT_DATE_REG, CLIENT_DDISORDER, CLIENT_DOB, CLIENT_IS_ASSESS_CHECKED, CL"& _ 
                "IENT_NAME, CLIENT_NAME_KHM, CLIENT_NEUROLOGICAL, CLIENT_NO, CLIENT_OLD_NO, CLIEN"& _ 
                "T_PSYCHIATRIC, CLIENT_PSYCHOLOGICAL, CLIENT_SEX, COMM_EN, DIAGNOSIS, DIAGNOSIS_I"& _ 
                "D, DIST_EN, FULL_ADDRESS_ENG, FULL_ADDRESS_KH, MAIN_THERAPY_ID, MAIN_THERAPY_NAM"& _ 
                "E, NUMBER_VISIT, PROV_EN, VILL_EN FROM CCAMH_VIEW_ADVISED_CLIENTS WHERE (MAIN_TH"& _ 
                "ERAPY_ID = @MAIN_THERAPY_ID)"
            Me._commandCollection(7).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MAIN_THERAPY_ID", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "MAIN_THERAPY_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(8) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(8).Connection = Me.Connection
            Me._commandCollection(8).CommandText = "SELECT COUNT(*) FROM CCAMH_VIEW_ADVISED_CLIENTS"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"CLIENT_ADVISED_ASSESSMENT"& _ 
                "=@CLIENT_ADVISED_ASSESSMENT"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"and CLIENT_DATE_REG between @DFrom and @DTo"
            Me._commandCollection(8).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_ADVISED_ASSESSMENT", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADVISED_ASSESSMENT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DFrom", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DATE_REG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DTo", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DATE_REG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(9) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(9).Connection = Me.Connection
            Me._commandCollection(9).CommandText = "SELECT COUNT(*) FROM CCAMH_VIEW_ADVISED_CLIENTS"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"CLIENT_ADVISED_ASSESSMENT"& _ 
                "=@CLIENT_ADVISED_ASSESSMENT"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"and "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"(CLIENT_ADVICED_ASSESSMENT_DETAIL=@CLIENT_ADV"& _ 
                "ICED_ASSESSMENT_DETAIL)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"and (CLIENT_DATE_REG between @DFrom and @Dto)"
            Me._commandCollection(9).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(9).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_ADVISED_ASSESSMENT", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADVISED_ASSESSMENT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(9).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_ADVICED_ASSESSMENT_DETAIL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADVICED_ASSESSMENT_DETAIL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(9).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DFrom", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DATE_REG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(9).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Dto", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DATE_REG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_ClientImpression.CCAMH_VIEW_ADVISED_CLIENTSDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_ClientImpression.CCAMH_VIEW_ADVISED_CLIENTSDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_ClientImpression.CCAMH_VIEW_ADVISED_CLIENTSDataTable = New DS_ClientImpression.CCAMH_VIEW_ADVISED_CLIENTSDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As DS_ClientImpression.CCAMH_VIEW_ADVISED_CLIENTSDataTable, ByVal DateFrom As Global.System.Nullable(Of Date), ByVal DateTo As Global.System.Nullable(Of Date), ByVal CLIENT_ADVICED_ASSESSMENT_DETAIL As Global.System.Nullable(Of Boolean)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (DateFrom.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(DateFrom.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (DateTo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(DateTo.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_ADVICED_ASSESSMENT_DETAIL.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(CLIENT_ADVICED_ASSESSMENT_DETAIL.Value,Boolean)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function SelectListOfClientAssessment(ByVal DateFrom As Global.System.Nullable(Of Date), ByVal DateTo As Global.System.Nullable(Of Date), ByVal CLIENT_ADVICED_ASSESSMENT_DETAIL As Global.System.Nullable(Of Boolean)) As DS_ClientImpression.CCAMH_VIEW_ADVISED_CLIENTSDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (DateFrom.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(DateFrom.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (DateTo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(DateTo.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_ADVICED_ASSESSMENT_DETAIL.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(CLIENT_ADVICED_ASSESSMENT_DETAIL.Value,Boolean)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DS_ClientImpression.CCAMH_VIEW_ADVISED_CLIENTSDataTable = New DS_ClientImpression.CCAMH_VIEW_ADVISED_CLIENTSDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy1(ByVal dataTable As DS_ClientImpression.CCAMH_VIEW_ADVISED_CLIENTSDataTable, ByVal CLIENT_NO As Decimal, ByVal DFrom As Global.System.Nullable(Of Date), ByVal DTo As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(CLIENT_NO,Decimal)
            If (DFrom.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(DFrom.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (DTo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(DTo.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByClientNo(ByVal CLIENT_NO As Decimal, ByVal DFrom As Global.System.Nullable(Of Date), ByVal DTo As Global.System.Nullable(Of Date)) As DS_ClientImpression.CCAMH_VIEW_ADVISED_CLIENTSDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(CLIENT_NO,Decimal)
            If (DFrom.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(DFrom.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (DTo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(DTo.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DS_ClientImpression.CCAMH_VIEW_ADVISED_CLIENTSDataTable = New DS_ClientImpression.CCAMH_VIEW_ADVISED_CLIENTSDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy2(ByVal dataTable As DS_ClientImpression.CCAMH_VIEW_ADVISED_CLIENTSDataTable, ByVal CLIENT_ADDRESS_PHONE As String, ByVal DFrom As Global.System.Nullable(Of Date), ByVal DTo As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            If (CLIENT_ADDRESS_PHONE Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CLIENT_ADDRESS_PHONE,String)
            End If
            If (DFrom.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(DFrom.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (DTo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(DTo.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByPhone(ByVal CLIENT_ADDRESS_PHONE As String, ByVal DFrom As Global.System.Nullable(Of Date), ByVal DTo As Global.System.Nullable(Of Date)) As DS_ClientImpression.CCAMH_VIEW_ADVISED_CLIENTSDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            If (CLIENT_ADDRESS_PHONE Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CLIENT_ADDRESS_PHONE,String)
            End If
            If (DFrom.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(DFrom.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (DTo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(DTo.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DS_ClientImpression.CCAMH_VIEW_ADVISED_CLIENTSDataTable = New DS_ClientImpression.CCAMH_VIEW_ADVISED_CLIENTSDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy3(ByVal dataTable As DS_ClientImpression.CCAMH_VIEW_ADVISED_CLIENTSDataTable, ByVal CLIENT_NAME As String, ByVal DateFrom As Global.System.Nullable(Of Date), ByVal DateTo As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            If (CLIENT_NAME Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CLIENT_NAME,String)
            End If
            If (DateFrom.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(DateFrom.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (DateTo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(DateTo.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByClientName(ByVal CLIENT_NAME As String, ByVal DateFrom As Global.System.Nullable(Of Date), ByVal DateTo As Global.System.Nullable(Of Date)) As DS_ClientImpression.CCAMH_VIEW_ADVISED_CLIENTSDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            If (CLIENT_NAME Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CLIENT_NAME,String)
            End If
            If (DateFrom.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(DateFrom.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (DateTo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(DateTo.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DS_ClientImpression.CCAMH_VIEW_ADVISED_CLIENTSDataTable = New DS_ClientImpression.CCAMH_VIEW_ADVISED_CLIENTSDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy4(ByVal dataTable As DS_ClientImpression.CCAMH_VIEW_ADVISED_CLIENTSDataTable, ByVal Dafrom As Global.System.Nullable(Of Date), ByVal DTo As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            If (Dafrom.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Dafrom.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (DTo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(DTo.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetAllDateToDate(ByVal Dafrom As Global.System.Nullable(Of Date), ByVal DTo As Global.System.Nullable(Of Date)) As DS_ClientImpression.CCAMH_VIEW_ADVISED_CLIENTSDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            If (Dafrom.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Dafrom.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (DTo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(DTo.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DS_ClientImpression.CCAMH_VIEW_ADVISED_CLIENTSDataTable = New DS_ClientImpression.CCAMH_VIEW_ADVISED_CLIENTSDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy5(ByVal dataTable As DS_ClientImpression.CCAMH_VIEW_ADVISED_CLIENTSDataTable, ByVal CLIENT_ADVISED_ASSESSMENT As String, ByVal DateFrom As Global.System.Nullable(Of Date), ByVal DateTo As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(6)
            If (CLIENT_ADVISED_ASSESSMENT Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CLIENT_ADVISED_ASSESSMENT,String)
            End If
            If (DateFrom.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(DateFrom.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (DateTo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(DateTo.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function SelectAssementStatusDateToDate(ByVal CLIENT_ADVISED_ASSESSMENT As String, ByVal DateFrom As Global.System.Nullable(Of Date), ByVal DateTo As Global.System.Nullable(Of Date)) As DS_ClientImpression.CCAMH_VIEW_ADVISED_CLIENTSDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(6)
            If (CLIENT_ADVISED_ASSESSMENT Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CLIENT_ADVISED_ASSESSMENT,String)
            End If
            If (DateFrom.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(DateFrom.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (DateTo.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(DateTo.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DS_ClientImpression.CCAMH_VIEW_ADVISED_CLIENTSDataTable = New DS_ClientImpression.CCAMH_VIEW_ADVISED_CLIENTSDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy6(ByVal dataTable As DS_ClientImpression.CCAMH_VIEW_ADVISED_CLIENTSDataTable, ByVal MAIN_THERAPY_ID As Global.System.Nullable(Of Decimal)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(7)
            If (MAIN_THERAPY_ID.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(MAIN_THERAPY_ID.Value,Decimal)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function SelectClientByMainTherapyID(ByVal MAIN_THERAPY_ID As Global.System.Nullable(Of Decimal)) As DS_ClientImpression.CCAMH_VIEW_ADVISED_CLIENTSDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(7)
            If (MAIN_THERAPY_ID.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(MAIN_THERAPY_ID.Value,Decimal)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DS_ClientImpression.CCAMH_VIEW_ADVISED_CLIENTSDataTable = New DS_ClientImpression.CCAMH_VIEW_ADVISED_CLIENTSDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function TotalAssessmentStatus(ByVal CLIENT_ADVISED_ASSESSMENT As String, ByVal DFrom As Global.System.Nullable(Of Date), ByVal DTo As Global.System.Nullable(Of Date)) As Object
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(8)
            If (CLIENT_ADVISED_ASSESSMENT Is Nothing) Then
                command.Parameters(0).Value = Global.System.DBNull.Value
            Else
                command.Parameters(0).Value = CType(CLIENT_ADVISED_ASSESSMENT,String)
            End If
            If (DFrom.HasValue = true) Then
                command.Parameters(1).Value = CType(DFrom.Value,Date)
            Else
                command.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (DTo.HasValue = true) Then
                command.Parameters(2).Value = CType(DTo.Value,Date)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function TotalDoAssessmentDateToDateWithStatus(ByVal CLIENT_ADVISED_ASSESSMENT As String, ByVal CLIENT_ADVICED_ASSESSMENT_DETAIL As Global.System.Nullable(Of Boolean), ByVal DFrom As Global.System.Nullable(Of Date), ByVal Dto As Global.System.Nullable(Of Date)) As Object
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(9)
            If (CLIENT_ADVISED_ASSESSMENT Is Nothing) Then
                command.Parameters(0).Value = Global.System.DBNull.Value
            Else
                command.Parameters(0).Value = CType(CLIENT_ADVISED_ASSESSMENT,String)
            End If
            If (CLIENT_ADVICED_ASSESSMENT_DETAIL.HasValue = true) Then
                command.Parameters(1).Value = CType(CLIENT_ADVICED_ASSESSMENT_DETAIL.Value,Boolean)
            Else
                command.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (DFrom.HasValue = true) Then
                command.Parameters(2).Value = CType(DFrom.Value,Date)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Dto.HasValue = true) Then
                command.Parameters(3).Value = CType(Dto.Value,Date)
            Else
                command.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class CLIENT_CA_SOCIALTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "CLIENT_CA_SOCIAL"
            tableMapping.ColumnMappings.Add("CLIENT_SOCIAL_ID", "CLIENT_SOCIAL_ID")
            tableMapping.ColumnMappings.Add("CLIENT_NO", "CLIENT_NO")
            tableMapping.ColumnMappings.Add("CLIENT_COMORBIDITY", "CLIENT_COMORBIDITY")
            tableMapping.ColumnMappings.Add("CLIENT_CLINICAL_AUDIT", "CLIENT_CLINICAL_AUDIT")
            tableMapping.ColumnMappings.Add("CLIENT_POVERTY_CARD", "CLIENT_POVERTY_CARD")
            tableMapping.ColumnMappings.Add("CLIENT_POVERTY_OTHERS", "CLIENT_POVERTY_OTHERS")
            tableMapping.ColumnMappings.Add("CLIENT_UNIT_ALL_1", "CLIENT_UNIT_ALL_1")
            tableMapping.ColumnMappings.Add("CLIENT_UNIT_ALL_2", "CLIENT_UNIT_ALL_2")
            tableMapping.ColumnMappings.Add("CLIENT_SOCIAL_SERVICETYPE", "CLIENT_SOCIAL_SERVICETYPE")
            tableMapping.ColumnMappings.Add("CLIENT_REFER_TO", "CLIENT_REFER_TO")
            tableMapping.ColumnMappings.Add("CLIENT_SOCIAL_WORKER", "CLIENT_SOCIAL_WORKER")
            tableMapping.ColumnMappings.Add("CLIENT_CC_NP_FIT", "CLIENT_CC_NP_FIT")
            tableMapping.ColumnMappings.Add("CLIENT_CC_NP_JERK", "CLIENT_CC_NP_JERK")
            tableMapping.ColumnMappings.Add("CLIENT_CC_NP_BSPELLS", "CLIENT_CC_NP_BSPELLS")
            tableMapping.ColumnMappings.Add("CLIENT_CC_NP_HSHAKING", "CLIENT_CC_NP_HSHAKING")
            tableMapping.ColumnMappings.Add("CLIENT_CC_NP_EYE_BLINK", "CLIENT_CC_NP_EYE_BLINK")
            tableMapping.ColumnMappings.Add("CLIENT_CC_NP_OS_WEAK", "CLIENT_CC_NP_OS_WEAK")
            tableMapping.ColumnMappings.Add("CLIENT_CC_NP_OTHER", "CLIENT_CC_NP_OTHER")
            tableMapping.ColumnMappings.Add("CLIENT_CC_PP_HEADACHE", "CLIENT_CC_PP_HEADACHE")
            tableMapping.ColumnMappings.Add("CLIENT_CC_PP_FEAR", "CLIENT_CC_PP_FEAR")
            tableMapping.ColumnMappings.Add("CLIENT_CC_PP_THINK", "CLIENT_CC_PP_THINK")
            tableMapping.ColumnMappings.Add("CLIENT_CC_PP_WORRY", "CLIENT_CC_PP_WORRY")
            tableMapping.ColumnMappings.Add("CLIENT_CC_PP_STEAL", "CLIENT_CC_PP_STEAL")
            tableMapping.ColumnMappings.Add("CLIENT_CC_PP_DISOBE", "CLIENT_CC_PP_DISOBE")
            tableMapping.ColumnMappings.Add("CLIENT_CC_PP_LIE", "CLIENT_CC_PP_LIE")
            tableMapping.ColumnMappings.Add("CLIENT_CC_PP_ANGRY", "CLIENT_CC_PP_ANGRY")
            tableMapping.ColumnMappings.Add("CLIENT_CC_PP_IRRIT", "CLIENT_CC_PP_IRRIT")
            tableMapping.ColumnMappings.Add("CLIENT_CC_PP_SDIFFICULTY", "CLIENT_CC_PP_SDIFFICULTY")
            tableMapping.ColumnMappings.Add("CLIENT_CC_PP_FAINTING", "CLIENT_CC_PP_FAINTING")
            tableMapping.ColumnMappings.Add("CLIENT_CC_PP_OTHER", "CLIENT_CC_PP_OTHER")
            tableMapping.ColumnMappings.Add("CLIENT_CC_MAJOR_TALK", "CLIENT_CC_MAJOR_TALK")
            tableMapping.ColumnMappings.Add("CLIENT_CC_MAJOR_LAUGH", "CLIENT_CC_MAJOR_LAUGH")
            tableMapping.ColumnMappings.Add("CLIENT_CC_MAJOR_STRAIGHT", "CLIENT_CC_MAJOR_STRAIGHT")
            tableMapping.ColumnMappings.Add("CLIENT_CC_MAJOR_AGGR", "CLIENT_CC_MAJOR_AGGR")
            tableMapping.ColumnMappings.Add("CLIENT_CC_MAJOR_SDISTURB", "CLIENT_CC_MAJOR_SDISTURB")
            tableMapping.ColumnMappings.Add("CLIENT_CC_MAJOR_APPETITE", "CLIENT_CC_MAJOR_APPETITE")
            tableMapping.ColumnMappings.Add("CLIENT_CC_MAJOR_SHYNESS", "CLIENT_CC_MAJOR_SHYNESS")
            tableMapping.ColumnMappings.Add("CLIENT_CC_MAJOR_BREAK", "CLIENT_CC_MAJOR_BREAK")
            tableMapping.ColumnMappings.Add("CLIENT_CC_MAJOR_GOAWAY", "CLIENT_CC_MAJOR_GOAWAY")
            tableMapping.ColumnMappings.Add("CLIENT_CC_MAJOR_OTHER", "CLIENT_CC_MAJOR_OTHER")
            tableMapping.ColumnMappings.Add("CLIENT_CC_DD_NOTALK", "CLIENT_CC_DD_NOTALK")
            tableMapping.ColumnMappings.Add("CLIENT_CC_DD_NOWALK", "CLIENT_CC_DD_NOWALK")
            tableMapping.ColumnMappings.Add("CLIENT_CC_DD_PLAYALONE", "CLIENT_CC_DD_PLAYALONE")
            tableMapping.ColumnMappings.Add("CLIENT_CC_DD_BEAT", "CLIENT_CC_DD_BEAT")
            tableMapping.ColumnMappings.Add("CLIENT_CC_DD_NORESPOND", "CLIENT_CC_DD_NORESPOND")
            tableMapping.ColumnMappings.Add("CLIENT_CC_DD_TIP", "CLIENT_CC_DD_TIP")
            tableMapping.ColumnMappings.Add("CLIENT_CC_DD_POORMEM", "CLIENT_CC_DD_POORMEM")
            tableMapping.ColumnMappings.Add("CLIENT_CC_DD_POORUNDER", "CLIENT_CC_DD_POORUNDER")
            tableMapping.ColumnMappings.Add("CLIENT_CC_DD_POORSTUDY", "CLIENT_CC_DD_POORSTUDY")
            tableMapping.ColumnMappings.Add("CLIENT_CC_DD_THROWING", "CLIENT_CC_DD_THROWING")
            tableMapping.ColumnMappings.Add("CLIENT_CC_DD_DROOLING", "CLIENT_CC_DD_DROOLING")
            tableMapping.ColumnMappings.Add("CLIENT_CC_DD_NONECK", "CLIENT_CC_DD_NONECK")
            tableMapping.ColumnMappings.Add("CLIENT_CC_DD_OTHER", "CLIENT_CC_DD_OTHER")
            tableMapping.ColumnMappings.Add("CLIENT_PSYCHIATRIC", "CLIENT_PSYCHIATRIC")
            tableMapping.ColumnMappings.Add("CLIENT_NEUROLOGICAL", "CLIENT_NEUROLOGICAL")
            tableMapping.ColumnMappings.Add("CLIENT_DDISORDER", "CLIENT_DDISORDER")
            tableMapping.ColumnMappings.Add("CLIENT_PSYCHOLOGICAL", "CLIENT_PSYCHOLOGICAL")
            tableMapping.ColumnMappings.Add("CLIENT_ADVISED_ASSESSMENT", "CLIENT_ADVISED_ASSESSMENT")
            tableMapping.ColumnMappings.Add("CLIENT_ADVISED_ASSESSMENT_DATE", "CLIENT_ADVISED_ASSESSMENT_DATE")
            tableMapping.ColumnMappings.Add("CLIENT_ADVICED_ASSESSMENT_NOTE", "CLIENT_ADVICED_ASSESSMENT_NOTE")
            tableMapping.ColumnMappings.Add("CLIENT_ADVICED_ASSESSMENT_DETAIL", "CLIENT_ADVICED_ASSESSMENT_DETAIL")
            tableMapping.ColumnMappings.Add("CLIENT_NP_NOTES", "CLIENT_NP_NOTES")
            tableMapping.ColumnMappings.Add("CLIENT_PP_NOTES", "CLIENT_PP_NOTES")
            tableMapping.ColumnMappings.Add("CLIENT_DD_NOTES", "CLIENT_DD_NOTES")
            tableMapping.ColumnMappings.Add("CLIENT_IS_ASSESS_CHECKED", "CLIENT_IS_ASSESS_CHECKED")
            tableMapping.ColumnMappings.Add("MAIN_THERAPY_ID", "MAIN_THERAPY_ID")
            tableMapping.ColumnMappings.Add("MAIN_THERAPY_NAME", "MAIN_THERAPY_NAME")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [CLIENT_CA_SOCIAL] WHERE (([CLIENT_SOCIAL_ID] = @Original_CLIENT_SOCI"& _ 
                "AL_ID) AND ((@IsNull_CLIENT_NO = 1 AND [CLIENT_NO] IS NULL) OR ([CLIENT_NO] = @O"& _ 
                "riginal_CLIENT_NO)) AND ((@IsNull_CLIENT_COMORBIDITY = 1 AND [CLIENT_COMORBIDITY"& _ 
                "] IS NULL) OR ([CLIENT_COMORBIDITY] = @Original_CLIENT_COMORBIDITY)) AND ((@IsNu"& _ 
                "ll_CLIENT_CLINICAL_AUDIT = 1 AND [CLIENT_CLINICAL_AUDIT] IS NULL) OR ([CLIENT_CL"& _ 
                "INICAL_AUDIT] = @Original_CLIENT_CLINICAL_AUDIT)) AND ((@IsNull_CLIENT_POVERTY_C"& _ 
                "ARD = 1 AND [CLIENT_POVERTY_CARD] IS NULL) OR ([CLIENT_POVERTY_CARD] = @Original"& _ 
                "_CLIENT_POVERTY_CARD)) AND ((@IsNull_CLIENT_POVERTY_OTHERS = 1 AND [CLIENT_POVER"& _ 
                "TY_OTHERS] IS NULL) OR ([CLIENT_POVERTY_OTHERS] = @Original_CLIENT_POVERTY_OTHER"& _ 
                "S)) AND ((@IsNull_CLIENT_UNIT_ALL_1 = 1 AND [CLIENT_UNIT_ALL_1] IS NULL) OR ([CL"& _ 
                "IENT_UNIT_ALL_1] = @Original_CLIENT_UNIT_ALL_1)) AND ((@IsNull_CLIENT_UNIT_ALL_2"& _ 
                " = 1 AND [CLIENT_UNIT_ALL_2] IS NULL) OR ([CLIENT_UNIT_ALL_2] = @Original_CLIENT"& _ 
                "_UNIT_ALL_2)) AND ((@IsNull_CLIENT_SOCIAL_SERVICETYPE = 1 AND [CLIENT_SOCIAL_SER"& _ 
                "VICETYPE] IS NULL) OR ([CLIENT_SOCIAL_SERVICETYPE] = @Original_CLIENT_SOCIAL_SER"& _ 
                "VICETYPE)) AND ((@IsNull_CLIENT_REFER_TO = 1 AND [CLIENT_REFER_TO] IS NULL) OR ("& _ 
                "[CLIENT_REFER_TO] = @Original_CLIENT_REFER_TO)) AND ((@IsNull_CLIENT_SOCIAL_WORK"& _ 
                "ER = 1 AND [CLIENT_SOCIAL_WORKER] IS NULL) OR ([CLIENT_SOCIAL_WORKER] = @Origina"& _ 
                "l_CLIENT_SOCIAL_WORKER)) AND ((@IsNull_CLIENT_CC_NP_FIT = 1 AND [CLIENT_CC_NP_FI"& _ 
                "T] IS NULL) OR ([CLIENT_CC_NP_FIT] = @Original_CLIENT_CC_NP_FIT)) AND ((@IsNull_"& _ 
                "CLIENT_CC_NP_JERK = 1 AND [CLIENT_CC_NP_JERK] IS NULL) OR ([CLIENT_CC_NP_JERK] ="& _ 
                " @Original_CLIENT_CC_NP_JERK)) AND ((@IsNull_CLIENT_CC_NP_BSPELLS = 1 AND [CLIEN"& _ 
                "T_CC_NP_BSPELLS] IS NULL) OR ([CLIENT_CC_NP_BSPELLS] = @Original_CLIENT_CC_NP_BS"& _ 
                "PELLS)) AND ((@IsNull_CLIENT_CC_NP_HSHAKING = 1 AND [CLIENT_CC_NP_HSHAKING] IS N"& _ 
                "ULL) OR ([CLIENT_CC_NP_HSHAKING] = @Original_CLIENT_CC_NP_HSHAKING)) AND ((@IsNu"& _ 
                "ll_CLIENT_CC_NP_EYE_BLINK = 1 AND [CLIENT_CC_NP_EYE_BLINK] IS NULL) OR ([CLIENT_"& _ 
                "CC_NP_EYE_BLINK] = @Original_CLIENT_CC_NP_EYE_BLINK)) AND ((@IsNull_CLIENT_CC_NP"& _ 
                "_OS_WEAK = 1 AND [CLIENT_CC_NP_OS_WEAK] IS NULL) OR ([CLIENT_CC_NP_OS_WEAK] = @O"& _ 
                "riginal_CLIENT_CC_NP_OS_WEAK)) AND ((@IsNull_CLIENT_CC_NP_OTHER = 1 AND [CLIENT_"& _ 
                "CC_NP_OTHER] IS NULL) OR ([CLIENT_CC_NP_OTHER] = @Original_CLIENT_CC_NP_OTHER)) "& _ 
                "AND ((@IsNull_CLIENT_CC_PP_HEADACHE = 1 AND [CLIENT_CC_PP_HEADACHE] IS NULL) OR "& _ 
                "([CLIENT_CC_PP_HEADACHE] = @Original_CLIENT_CC_PP_HEADACHE)) AND ((@IsNull_CLIEN"& _ 
                "T_CC_PP_FEAR = 1 AND [CLIENT_CC_PP_FEAR] IS NULL) OR ([CLIENT_CC_PP_FEAR] = @Ori"& _ 
                "ginal_CLIENT_CC_PP_FEAR)) AND ((@IsNull_CLIENT_CC_PP_THINK = 1 AND [CLIENT_CC_PP"& _ 
                "_THINK] IS NULL) OR ([CLIENT_CC_PP_THINK] = @Original_CLIENT_CC_PP_THINK)) AND ("& _ 
                "(@IsNull_CLIENT_CC_PP_WORRY = 1 AND [CLIENT_CC_PP_WORRY] IS NULL) OR ([CLIENT_CC"& _ 
                "_PP_WORRY] = @Original_CLIENT_CC_PP_WORRY)) AND ((@IsNull_CLIENT_CC_PP_STEAL = 1"& _ 
                " AND [CLIENT_CC_PP_STEAL] IS NULL) OR ([CLIENT_CC_PP_STEAL] = @Original_CLIENT_C"& _ 
                "C_PP_STEAL)) AND ((@IsNull_CLIENT_CC_PP_DISOBE = 1 AND [CLIENT_CC_PP_DISOBE] IS "& _ 
                "NULL) OR ([CLIENT_CC_PP_DISOBE] = @Original_CLIENT_CC_PP_DISOBE)) AND ((@IsNull_"& _ 
                "CLIENT_CC_PP_LIE = 1 AND [CLIENT_CC_PP_LIE] IS NULL) OR ([CLIENT_CC_PP_LIE] = @O"& _ 
                "riginal_CLIENT_CC_PP_LIE)) AND ((@IsNull_CLIENT_CC_PP_ANGRY = 1 AND [CLIENT_CC_P"& _ 
                "P_ANGRY] IS NULL) OR ([CLIENT_CC_PP_ANGRY] = @Original_CLIENT_CC_PP_ANGRY)) AND "& _ 
                "((@IsNull_CLIENT_CC_PP_IRRIT = 1 AND [CLIENT_CC_PP_IRRIT] IS NULL) OR ([CLIENT_C"& _ 
                "C_PP_IRRIT] = @Original_CLIENT_CC_PP_IRRIT)) AND ((@IsNull_CLIENT_CC_PP_SDIFFICU"& _ 
                "LTY = 1 AND [CLIENT_CC_PP_SDIFFICULTY] IS NULL) OR ([CLIENT_CC_PP_SDIFFICULTY] ="& _ 
                " @Original_CLIENT_CC_PP_SDIFFICULTY)) AND ((@IsNull_CLIENT_CC_PP_FAINTING = 1 AN"& _ 
                "D [CLIENT_CC_PP_FAINTING] IS NULL) OR ([CLIENT_CC_PP_FAINTING] = @Original_CLIEN"& _ 
                "T_CC_PP_FAINTING)) AND ((@IsNull_CLIENT_CC_PP_OTHER = 1 AND [CLIENT_CC_PP_OTHER]"& _ 
                " IS NULL) OR ([CLIENT_CC_PP_OTHER] = @Original_CLIENT_CC_PP_OTHER)) AND ((@IsNul"& _ 
                "l_CLIENT_CC_MAJOR_TALK = 1 AND [CLIENT_CC_MAJOR_TALK] IS NULL) OR ([CLIENT_CC_MA"& _ 
                "JOR_TALK] = @Original_CLIENT_CC_MAJOR_TALK)) AND ((@IsNull_CLIENT_CC_MAJOR_LAUGH"& _ 
                " = 1 AND [CLIENT_CC_MAJOR_LAUGH] IS NULL) OR ([CLIENT_CC_MAJOR_LAUGH] = @Origina"& _ 
                "l_CLIENT_CC_MAJOR_LAUGH)) AND ((@IsNull_CLIENT_CC_MAJOR_STRAIGHT = 1 AND [CLIENT"& _ 
                "_CC_MAJOR_STRAIGHT] IS NULL) OR ([CLIENT_CC_MAJOR_STRAIGHT] = @Original_CLIENT_C"& _ 
                "C_MAJOR_STRAIGHT)) AND ((@IsNull_CLIENT_CC_MAJOR_AGGR = 1 AND [CLIENT_CC_MAJOR_A"& _ 
                "GGR] IS NULL) OR ([CLIENT_CC_MAJOR_AGGR] = @Original_CLIENT_CC_MAJOR_AGGR)) AND "& _ 
                "((@IsNull_CLIENT_CC_MAJOR_SDISTURB = 1 AND [CLIENT_CC_MAJOR_SDISTURB] IS NULL) O"& _ 
                "R ([CLIENT_CC_MAJOR_SDISTURB] = @Original_CLIENT_CC_MAJOR_SDISTURB)) AND ((@IsNu"& _ 
                "ll_CLIENT_CC_MAJOR_APPETITE = 1 AND [CLIENT_CC_MAJOR_APPETITE] IS NULL) OR ([CLI"& _ 
                "ENT_CC_MAJOR_APPETITE] = @Original_CLIENT_CC_MAJOR_APPETITE)) AND ((@IsNull_CLIE"& _ 
                "NT_CC_MAJOR_SHYNESS = 1 AND [CLIENT_CC_MAJOR_SHYNESS] IS NULL) OR ([CLIENT_CC_MA"& _ 
                "JOR_SHYNESS] = @Original_CLIENT_CC_MAJOR_SHYNESS)) AND ((@IsNull_CLIENT_CC_MAJOR"& _ 
                "_BREAK = 1 AND [CLIENT_CC_MAJOR_BREAK] IS NULL) OR ([CLIENT_CC_MAJOR_BREAK] = @O"& _ 
                "riginal_CLIENT_CC_MAJOR_BREAK)) AND ((@IsNull_CLIENT_CC_MAJOR_GOAWAY = 1 AND [CL"& _ 
                "IENT_CC_MAJOR_GOAWAY] IS NULL) OR ([CLIENT_CC_MAJOR_GOAWAY] = @Original_CLIENT_C"& _ 
                "C_MAJOR_GOAWAY)) AND ((@IsNull_CLIENT_CC_MAJOR_OTHER = 1 AND [CLIENT_CC_MAJOR_OT"& _ 
                "HER] IS NULL) OR ([CLIENT_CC_MAJOR_OTHER] = @Original_CLIENT_CC_MAJOR_OTHER)) AN"& _ 
                "D ((@IsNull_CLIENT_CC_DD_NOTALK = 1 AND [CLIENT_CC_DD_NOTALK] IS NULL) OR ([CLIE"& _ 
                "NT_CC_DD_NOTALK] = @Original_CLIENT_CC_DD_NOTALK)) AND ((@IsNull_CLIENT_CC_DD_NO"& _ 
                "WALK = 1 AND [CLIENT_CC_DD_NOWALK] IS NULL) OR ([CLIENT_CC_DD_NOWALK] = @Origina"& _ 
                "l_CLIENT_CC_DD_NOWALK)) AND ((@IsNull_CLIENT_CC_DD_PLAYALONE = 1 AND [CLIENT_CC_"& _ 
                "DD_PLAYALONE] IS NULL) OR ([CLIENT_CC_DD_PLAYALONE] = @Original_CLIENT_CC_DD_PLA"& _ 
                "YALONE)) AND ((@IsNull_CLIENT_CC_DD_BEAT = 1 AND [CLIENT_CC_DD_BEAT] IS NULL) OR"& _ 
                " ([CLIENT_CC_DD_BEAT] = @Original_CLIENT_CC_DD_BEAT)) AND ((@IsNull_CLIENT_CC_DD"& _ 
                "_NORESPOND = 1 AND [CLIENT_CC_DD_NORESPOND] IS NULL) OR ([CLIENT_CC_DD_NORESPOND"& _ 
                "] = @Original_CLIENT_CC_DD_NORESPOND)) AND ((@IsNull_CLIENT_CC_DD_TIP = 1 AND [C"& _ 
                "LIENT_CC_DD_TIP] IS NULL) OR ([CLIENT_CC_DD_TIP] = @Original_CLIENT_CC_DD_TIP)) "& _ 
                "AND ((@IsNull_CLIENT_CC_DD_POORMEM = 1 AND [CLIENT_CC_DD_POORMEM] IS NULL) OR (["& _ 
                "CLIENT_CC_DD_POORMEM] = @Original_CLIENT_CC_DD_POORMEM)) AND ((@IsNull_CLIENT_CC"& _ 
                "_DD_POORUNDER = 1 AND [CLIENT_CC_DD_POORUNDER] IS NULL) OR ([CLIENT_CC_DD_POORUN"& _ 
                "DER] = @Original_CLIENT_CC_DD_POORUNDER)) AND ((@IsNull_CLIENT_CC_DD_POORSTUDY ="& _ 
                " 1 AND [CLIENT_CC_DD_POORSTUDY] IS NULL) OR ([CLIENT_CC_DD_POORSTUDY] = @Origina"& _ 
                "l_CLIENT_CC_DD_POORSTUDY)) AND ((@IsNull_CLIENT_CC_DD_THROWING = 1 AND [CLIENT_C"& _ 
                "C_DD_THROWING] IS NULL) OR ([CLIENT_CC_DD_THROWING] = @Original_CLIENT_CC_DD_THR"& _ 
                "OWING)) AND ((@IsNull_CLIENT_CC_DD_DROOLING = 1 AND [CLIENT_CC_DD_DROOLING] IS N"& _ 
                "ULL) OR ([CLIENT_CC_DD_DROOLING] = @Original_CLIENT_CC_DD_DROOLING)) AND ((@IsNu"& _ 
                "ll_CLIENT_CC_DD_NONECK = 1 AND [CLIENT_CC_DD_NONECK] IS NULL) OR ([CLIENT_CC_DD_"& _ 
                "NONECK] = @Original_CLIENT_CC_DD_NONECK)) AND ((@IsNull_CLIENT_CC_DD_OTHER = 1 A"& _ 
                "ND [CLIENT_CC_DD_OTHER] IS NULL) OR ([CLIENT_CC_DD_OTHER] = @Original_CLIENT_CC_"& _ 
                "DD_OTHER)) AND ((@IsNull_CLIENT_PSYCHIATRIC = 1 AND [CLIENT_PSYCHIATRIC] IS NULL"& _ 
                ") OR ([CLIENT_PSYCHIATRIC] = @Original_CLIENT_PSYCHIATRIC)) AND ((@IsNull_CLIENT"& _ 
                "_NEUROLOGICAL = 1 AND [CLIENT_NEUROLOGICAL] IS NULL) OR ([CLIENT_NEUROLOGICAL] ="& _ 
                " @Original_CLIENT_NEUROLOGICAL)) AND ((@IsNull_CLIENT_DDISORDER = 1 AND [CLIENT_"& _ 
                "DDISORDER] IS NULL) OR ([CLIENT_DDISORDER] = @Original_CLIENT_DDISORDER)) AND (("& _ 
                "@IsNull_CLIENT_PSYCHOLOGICAL = 1 AND [CLIENT_PSYCHOLOGICAL] IS NULL) OR ([CLIENT"& _ 
                "_PSYCHOLOGICAL] = @Original_CLIENT_PSYCHOLOGICAL)) AND ((@IsNull_CLIENT_ADVISED_"& _ 
                "ASSESSMENT = 1 AND [CLIENT_ADVISED_ASSESSMENT] IS NULL) OR ([CLIENT_ADVISED_ASSE"& _ 
                "SSMENT] = @Original_CLIENT_ADVISED_ASSESSMENT)) AND ((@IsNull_CLIENT_ADVISED_ASS"& _ 
                "ESSMENT_DATE = 1 AND [CLIENT_ADVISED_ASSESSMENT_DATE] IS NULL) OR ([CLIENT_ADVIS"& _ 
                "ED_ASSESSMENT_DATE] = @Original_CLIENT_ADVISED_ASSESSMENT_DATE)) AND ((@IsNull_C"& _ 
                "LIENT_ADVICED_ASSESSMENT_NOTE = 1 AND [CLIENT_ADVICED_ASSESSMENT_NOTE] IS NULL) "& _ 
                "OR ([CLIENT_ADVICED_ASSESSMENT_NOTE] = @Original_CLIENT_ADVICED_ASSESSMENT_NOTE)"& _ 
                ") AND ((@IsNull_CLIENT_ADVICED_ASSESSMENT_DETAIL = 1 AND [CLIENT_ADVICED_ASSESSM"& _ 
                "ENT_DETAIL] IS NULL) OR ([CLIENT_ADVICED_ASSESSMENT_DETAIL] = @Original_CLIENT_A"& _ 
                "DVICED_ASSESSMENT_DETAIL)) AND ((@IsNull_CLIENT_NP_NOTES = 1 AND [CLIENT_NP_NOTE"& _ 
                "S] IS NULL) OR ([CLIENT_NP_NOTES] = @Original_CLIENT_NP_NOTES)) AND ((@IsNull_CL"& _ 
                "IENT_PP_NOTES = 1 AND [CLIENT_PP_NOTES] IS NULL) OR ([CLIENT_PP_NOTES] = @Origin"& _ 
                "al_CLIENT_PP_NOTES)) AND ((@IsNull_CLIENT_DD_NOTES = 1 AND [CLIENT_DD_NOTES] IS "& _ 
                "NULL) OR ([CLIENT_DD_NOTES] = @Original_CLIENT_DD_NOTES)) AND ((@IsNull_CLIENT_I"& _ 
                "S_ASSESS_CHECKED = 1 AND [CLIENT_IS_ASSESS_CHECKED] IS NULL) OR ([CLIENT_IS_ASSE"& _ 
                "SS_CHECKED] = @Original_CLIENT_IS_ASSESS_CHECKED)) AND ((@IsNull_MAIN_THERAPY_ID"& _ 
                " = 1 AND [MAIN_THERAPY_ID] IS NULL) OR ([MAIN_THERAPY_ID] = @Original_MAIN_THERA"& _ 
                "PY_ID)) AND ((@IsNull_MAIN_THERAPY_NAME = 1 AND [MAIN_THERAPY_NAME] IS NULL) OR "& _ 
                "([MAIN_THERAPY_NAME] = @Original_MAIN_THERAPY_NAME)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_SOCIAL_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_SOCIAL_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_COMORBIDITY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_COMORBIDITY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_COMORBIDITY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_COMORBIDITY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CLINICAL_AUDIT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CLINICAL_AUDIT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CLINICAL_AUDIT", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CLINICAL_AUDIT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_POVERTY_CARD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_POVERTY_CARD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_POVERTY_CARD", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_POVERTY_CARD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_POVERTY_OTHERS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_POVERTY_OTHERS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_POVERTY_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_POVERTY_OTHERS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_UNIT_ALL_1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_UNIT_ALL_1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_UNIT_ALL_1", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_UNIT_ALL_1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_UNIT_ALL_2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_UNIT_ALL_2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_UNIT_ALL_2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_UNIT_ALL_2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_SOCIAL_SERVICETYPE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SOCIAL_SERVICETYPE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_SOCIAL_SERVICETYPE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SOCIAL_SERVICETYPE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_REFER_TO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_REFER_TO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_REFER_TO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_REFER_TO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_SOCIAL_WORKER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SOCIAL_WORKER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_SOCIAL_WORKER", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SOCIAL_WORKER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_NP_FIT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_NP_FIT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_NP_FIT", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_NP_FIT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_NP_JERK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_NP_JERK", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_NP_JERK", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_NP_JERK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_NP_BSPELLS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_NP_BSPELLS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_NP_BSPELLS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_NP_BSPELLS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_NP_HSHAKING", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_NP_HSHAKING", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_NP_HSHAKING", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_NP_HSHAKING", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_NP_EYE_BLINK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_NP_EYE_BLINK", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_NP_EYE_BLINK", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_NP_EYE_BLINK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_NP_OS_WEAK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_NP_OS_WEAK", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_NP_OS_WEAK", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_NP_OS_WEAK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_NP_OTHER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_NP_OTHER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_NP_OTHER", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_NP_OTHER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_PP_HEADACHE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_HEADACHE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_PP_HEADACHE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_HEADACHE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_PP_FEAR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_FEAR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_PP_FEAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_FEAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_PP_THINK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_THINK", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_PP_THINK", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_THINK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_PP_WORRY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_WORRY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_PP_WORRY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_WORRY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_PP_STEAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_STEAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_PP_STEAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_STEAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_PP_DISOBE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_DISOBE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_PP_DISOBE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_DISOBE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_PP_LIE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_LIE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_PP_LIE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_LIE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_PP_ANGRY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_ANGRY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_PP_ANGRY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_ANGRY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_PP_IRRIT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_IRRIT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_PP_IRRIT", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_IRRIT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_PP_SDIFFICULTY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_SDIFFICULTY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_PP_SDIFFICULTY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_SDIFFICULTY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_PP_FAINTING", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_FAINTING", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_PP_FAINTING", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_FAINTING", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_PP_OTHER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_OTHER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_PP_OTHER", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_OTHER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_MAJOR_TALK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_TALK", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_MAJOR_TALK", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_TALK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_MAJOR_LAUGH", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_LAUGH", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_MAJOR_LAUGH", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_LAUGH", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_MAJOR_STRAIGHT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_STRAIGHT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_MAJOR_STRAIGHT", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_STRAIGHT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_MAJOR_AGGR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_AGGR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_MAJOR_AGGR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_AGGR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_MAJOR_SDISTURB", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_SDISTURB", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_MAJOR_SDISTURB", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_SDISTURB", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_MAJOR_APPETITE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_APPETITE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_MAJOR_APPETITE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_APPETITE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_MAJOR_SHYNESS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_SHYNESS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_MAJOR_SHYNESS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_SHYNESS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_MAJOR_BREAK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_BREAK", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_MAJOR_BREAK", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_BREAK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_MAJOR_GOAWAY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_GOAWAY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_MAJOR_GOAWAY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_GOAWAY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_MAJOR_OTHER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_OTHER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_MAJOR_OTHER", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_OTHER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_DD_NOTALK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_NOTALK", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_DD_NOTALK", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_NOTALK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_DD_NOWALK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_NOWALK", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_DD_NOWALK", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_NOWALK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_DD_PLAYALONE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_PLAYALONE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_DD_PLAYALONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_PLAYALONE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_DD_BEAT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_BEAT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_DD_BEAT", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_BEAT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_DD_NORESPOND", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_NORESPOND", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_DD_NORESPOND", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_NORESPOND", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_DD_TIP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_TIP", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_DD_TIP", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_TIP", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_DD_POORMEM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_POORMEM", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_DD_POORMEM", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_POORMEM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_DD_POORUNDER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_POORUNDER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_DD_POORUNDER", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_POORUNDER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_DD_POORSTUDY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_POORSTUDY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_DD_POORSTUDY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_POORSTUDY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_DD_THROWING", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_THROWING", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_DD_THROWING", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_THROWING", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_DD_DROOLING", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_DROOLING", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_DD_DROOLING", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_DROOLING", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_DD_NONECK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_NONECK", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_DD_NONECK", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_NONECK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_DD_OTHER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_OTHER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_DD_OTHER", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_OTHER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_PSYCHIATRIC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_PSYCHIATRIC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_PSYCHIATRIC", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_PSYCHIATRIC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_NEUROLOGICAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_NEUROLOGICAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_NEUROLOGICAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_NEUROLOGICAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_DDISORDER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DDISORDER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_DDISORDER", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DDISORDER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_PSYCHOLOGICAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_PSYCHOLOGICAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_PSYCHOLOGICAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_PSYCHOLOGICAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_ADVISED_ASSESSMENT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADVISED_ASSESSMENT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_ADVISED_ASSESSMENT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADVISED_ASSESSMENT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_ADVISED_ASSESSMENT_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADVISED_ASSESSMENT_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_ADVISED_ASSESSMENT_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADVISED_ASSESSMENT_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_ADVICED_ASSESSMENT_NOTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADVICED_ASSESSMENT_NOTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_ADVICED_ASSESSMENT_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADVICED_ASSESSMENT_NOTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_ADVICED_ASSESSMENT_DETAIL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADVICED_ASSESSMENT_DETAIL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_ADVICED_ASSESSMENT_DETAIL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADVICED_ASSESSMENT_DETAIL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_NP_NOTES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_NP_NOTES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_NP_NOTES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_NP_NOTES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_PP_NOTES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_PP_NOTES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_PP_NOTES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_PP_NOTES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_DD_NOTES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DD_NOTES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_DD_NOTES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DD_NOTES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_IS_ASSESS_CHECKED", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_IS_ASSESS_CHECKED", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_IS_ASSESS_CHECKED", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_IS_ASSESS_CHECKED", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MAIN_THERAPY_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MAIN_THERAPY_ID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MAIN_THERAPY_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "MAIN_THERAPY_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MAIN_THERAPY_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MAIN_THERAPY_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MAIN_THERAPY_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MAIN_THERAPY_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [CLIENT_CA_SOCIAL] ([CLIENT_NO], [CLIENT_COMORBIDITY], [CLIENT_CLINIC"& _ 
                "AL_AUDIT], [CLIENT_POVERTY_CARD], [CLIENT_POVERTY_OTHERS], [CLIENT_UNIT_ALL_1], "& _ 
                "[CLIENT_UNIT_ALL_2], [CLIENT_SOCIAL_SERVICETYPE], [CLIENT_REFER_TO], [CLIENT_SOC"& _ 
                "IAL_WORKER], [CLIENT_CC_NP_FIT], [CLIENT_CC_NP_JERK], [CLIENT_CC_NP_BSPELLS], [C"& _ 
                "LIENT_CC_NP_HSHAKING], [CLIENT_CC_NP_EYE_BLINK], [CLIENT_CC_NP_OS_WEAK], [CLIENT"& _ 
                "_CC_NP_OTHER], [CLIENT_CC_PP_HEADACHE], [CLIENT_CC_PP_FEAR], [CLIENT_CC_PP_THINK"& _ 
                "], [CLIENT_CC_PP_WORRY], [CLIENT_CC_PP_STEAL], [CLIENT_CC_PP_DISOBE], [CLIENT_CC"& _ 
                "_PP_LIE], [CLIENT_CC_PP_ANGRY], [CLIENT_CC_PP_IRRIT], [CLIENT_CC_PP_SDIFFICULTY]"& _ 
                ", [CLIENT_CC_PP_FAINTING], [CLIENT_CC_PP_OTHER], [CLIENT_CC_MAJOR_TALK], [CLIENT"& _ 
                "_CC_MAJOR_LAUGH], [CLIENT_CC_MAJOR_STRAIGHT], [CLIENT_CC_MAJOR_AGGR], [CLIENT_CC"& _ 
                "_MAJOR_SDISTURB], [CLIENT_CC_MAJOR_APPETITE], [CLIENT_CC_MAJOR_SHYNESS], [CLIENT"& _ 
                "_CC_MAJOR_BREAK], [CLIENT_CC_MAJOR_GOAWAY], [CLIENT_CC_MAJOR_OTHER], [CLIENT_CC_"& _ 
                "DD_NOTALK], [CLIENT_CC_DD_NOWALK], [CLIENT_CC_DD_PLAYALONE], [CLIENT_CC_DD_BEAT]"& _ 
                ", [CLIENT_CC_DD_NORESPOND], [CLIENT_CC_DD_TIP], [CLIENT_CC_DD_POORMEM], [CLIENT_"& _ 
                "CC_DD_POORUNDER], [CLIENT_CC_DD_POORSTUDY], [CLIENT_CC_DD_THROWING], [CLIENT_CC_"& _ 
                "DD_DROOLING], [CLIENT_CC_DD_NONECK], [CLIENT_CC_DD_OTHER], [CLIENT_PSYCHIATRIC],"& _ 
                " [CLIENT_NEUROLOGICAL], [CLIENT_DDISORDER], [CLIENT_PSYCHOLOGICAL], [CLIENT_ADVI"& _ 
                "SED_ASSESSMENT], [CLIENT_ADVISED_ASSESSMENT_DATE], [CLIENT_ADVICED_ASSESSMENT_NO"& _ 
                "TE], [CLIENT_ADVICED_ASSESSMENT_DETAIL], [CLIENT_NP_NOTES], [CLIENT_PP_NOTES], ["& _ 
                "CLIENT_DD_NOTES], [CLIENT_IS_ASSESS_CHECKED], [MAIN_THERAPY_ID], [MAIN_THERAPY_N"& _ 
                "AME]) VALUES (@CLIENT_NO, @CLIENT_COMORBIDITY, @CLIENT_CLINICAL_AUDIT, @CLIENT_P"& _ 
                "OVERTY_CARD, @CLIENT_POVERTY_OTHERS, @CLIENT_UNIT_ALL_1, @CLIENT_UNIT_ALL_2, @CL"& _ 
                "IENT_SOCIAL_SERVICETYPE, @CLIENT_REFER_TO, @CLIENT_SOCIAL_WORKER, @CLIENT_CC_NP_"& _ 
                "FIT, @CLIENT_CC_NP_JERK, @CLIENT_CC_NP_BSPELLS, @CLIENT_CC_NP_HSHAKING, @CLIENT_"& _ 
                "CC_NP_EYE_BLINK, @CLIENT_CC_NP_OS_WEAK, @CLIENT_CC_NP_OTHER, @CLIENT_CC_PP_HEADA"& _ 
                "CHE, @CLIENT_CC_PP_FEAR, @CLIENT_CC_PP_THINK, @CLIENT_CC_PP_WORRY, @CLIENT_CC_PP"& _ 
                "_STEAL, @CLIENT_CC_PP_DISOBE, @CLIENT_CC_PP_LIE, @CLIENT_CC_PP_ANGRY, @CLIENT_CC"& _ 
                "_PP_IRRIT, @CLIENT_CC_PP_SDIFFICULTY, @CLIENT_CC_PP_FAINTING, @CLIENT_CC_PP_OTHE"& _ 
                "R, @CLIENT_CC_MAJOR_TALK, @CLIENT_CC_MAJOR_LAUGH, @CLIENT_CC_MAJOR_STRAIGHT, @CL"& _ 
                "IENT_CC_MAJOR_AGGR, @CLIENT_CC_MAJOR_SDISTURB, @CLIENT_CC_MAJOR_APPETITE, @CLIEN"& _ 
                "T_CC_MAJOR_SHYNESS, @CLIENT_CC_MAJOR_BREAK, @CLIENT_CC_MAJOR_GOAWAY, @CLIENT_CC_"& _ 
                "MAJOR_OTHER, @CLIENT_CC_DD_NOTALK, @CLIENT_CC_DD_NOWALK, @CLIENT_CC_DD_PLAYALONE"& _ 
                ", @CLIENT_CC_DD_BEAT, @CLIENT_CC_DD_NORESPOND, @CLIENT_CC_DD_TIP, @CLIENT_CC_DD_"& _ 
                "POORMEM, @CLIENT_CC_DD_POORUNDER, @CLIENT_CC_DD_POORSTUDY, @CLIENT_CC_DD_THROWIN"& _ 
                "G, @CLIENT_CC_DD_DROOLING, @CLIENT_CC_DD_NONECK, @CLIENT_CC_DD_OTHER, @CLIENT_PS"& _ 
                "YCHIATRIC, @CLIENT_NEUROLOGICAL, @CLIENT_DDISORDER, @CLIENT_PSYCHOLOGICAL, @CLIE"& _ 
                "NT_ADVISED_ASSESSMENT, @CLIENT_ADVISED_ASSESSMENT_DATE, @CLIENT_ADVICED_ASSESSME"& _ 
                "NT_NOTE, @CLIENT_ADVICED_ASSESSMENT_DETAIL, @CLIENT_NP_NOTES, @CLIENT_PP_NOTES, "& _ 
                "@CLIENT_DD_NOTES, @CLIENT_IS_ASSESS_CHECKED, @MAIN_THERAPY_ID, @MAIN_THERAPY_NAM"& _ 
                "E);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CLIENT_SOCIAL_ID, CLIENT_NO, CLIENT_COMORBIDITY, CLIENT_CLINICAL_AUD"& _ 
                "IT, CLIENT_POVERTY_CARD, CLIENT_POVERTY_OTHERS, CLIENT_UNIT_ALL_1, CLIENT_UNIT_A"& _ 
                "LL_2, CLIENT_SOCIAL_SERVICETYPE, CLIENT_REFER_TO, CLIENT_SOCIAL_WORKER, CLIENT_C"& _ 
                "C_NP_FIT, CLIENT_CC_NP_JERK, CLIENT_CC_NP_BSPELLS, CLIENT_CC_NP_HSHAKING, CLIENT"& _ 
                "_CC_NP_EYE_BLINK, CLIENT_CC_NP_OS_WEAK, CLIENT_CC_NP_OTHER, CLIENT_CC_PP_HEADACH"& _ 
                "E, CLIENT_CC_PP_FEAR, CLIENT_CC_PP_THINK, CLIENT_CC_PP_WORRY, CLIENT_CC_PP_STEAL"& _ 
                ", CLIENT_CC_PP_DISOBE, CLIENT_CC_PP_LIE, CLIENT_CC_PP_ANGRY, CLIENT_CC_PP_IRRIT,"& _ 
                " CLIENT_CC_PP_SDIFFICULTY, CLIENT_CC_PP_FAINTING, CLIENT_CC_PP_OTHER, CLIENT_CC_"& _ 
                "MAJOR_TALK, CLIENT_CC_MAJOR_LAUGH, CLIENT_CC_MAJOR_STRAIGHT, CLIENT_CC_MAJOR_AGG"& _ 
                "R, CLIENT_CC_MAJOR_SDISTURB, CLIENT_CC_MAJOR_APPETITE, CLIENT_CC_MAJOR_SHYNESS, "& _ 
                "CLIENT_CC_MAJOR_BREAK, CLIENT_CC_MAJOR_GOAWAY, CLIENT_CC_MAJOR_OTHER, CLIENT_CC_"& _ 
                "DD_NOTALK, CLIENT_CC_DD_NOWALK, CLIENT_CC_DD_PLAYALONE, CLIENT_CC_DD_BEAT, CLIEN"& _ 
                "T_CC_DD_NORESPOND, CLIENT_CC_DD_TIP, CLIENT_CC_DD_POORMEM, CLIENT_CC_DD_POORUNDE"& _ 
                "R, CLIENT_CC_DD_POORSTUDY, CLIENT_CC_DD_THROWING, CLIENT_CC_DD_DROOLING, CLIENT_"& _ 
                "CC_DD_NONECK, CLIENT_CC_DD_OTHER, CLIENT_PSYCHIATRIC, CLIENT_NEUROLOGICAL, CLIEN"& _ 
                "T_DDISORDER, CLIENT_PSYCHOLOGICAL, CLIENT_ADVISED_ASSESSMENT, CLIENT_ADVISED_ASS"& _ 
                "ESSMENT_DATE, CLIENT_ADVICED_ASSESSMENT_NOTE, CLIENT_ADVICED_ASSESSMENT_DETAIL, "& _ 
                "CLIENT_NP_NOTES, CLIENT_PP_NOTES, CLIENT_DD_NOTES, CLIENT_IS_ASSESS_CHECKED, MAI"& _ 
                "N_THERAPY_ID, MAIN_THERAPY_NAME FROM CLIENT_CA_SOCIAL WHERE (CLIENT_SOCIAL_ID = "& _ 
                "SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_COMORBIDITY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_COMORBIDITY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CLINICAL_AUDIT", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CLINICAL_AUDIT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_POVERTY_CARD", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_POVERTY_CARD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_POVERTY_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_POVERTY_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_UNIT_ALL_1", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_UNIT_ALL_1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_UNIT_ALL_2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_UNIT_ALL_2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_SOCIAL_SERVICETYPE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SOCIAL_SERVICETYPE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_REFER_TO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_REFER_TO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_SOCIAL_WORKER", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SOCIAL_WORKER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_NP_FIT", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_NP_FIT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_NP_JERK", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_NP_JERK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_NP_BSPELLS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_NP_BSPELLS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_NP_HSHAKING", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_NP_HSHAKING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_NP_EYE_BLINK", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_NP_EYE_BLINK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_NP_OS_WEAK", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_NP_OS_WEAK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_NP_OTHER", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_NP_OTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_PP_HEADACHE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_HEADACHE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_PP_FEAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_FEAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_PP_THINK", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_THINK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_PP_WORRY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_WORRY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_PP_STEAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_STEAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_PP_DISOBE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_DISOBE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_PP_LIE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_LIE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_PP_ANGRY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_ANGRY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_PP_IRRIT", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_IRRIT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_PP_SDIFFICULTY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_SDIFFICULTY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_PP_FAINTING", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_FAINTING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_PP_OTHER", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_OTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_MAJOR_TALK", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_TALK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_MAJOR_LAUGH", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_LAUGH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_MAJOR_STRAIGHT", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_STRAIGHT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_MAJOR_AGGR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_AGGR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_MAJOR_SDISTURB", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_SDISTURB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_MAJOR_APPETITE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_APPETITE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_MAJOR_SHYNESS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_SHYNESS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_MAJOR_BREAK", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_BREAK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_MAJOR_GOAWAY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_GOAWAY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_MAJOR_OTHER", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_OTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_DD_NOTALK", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_NOTALK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_DD_NOWALK", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_NOWALK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_DD_PLAYALONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_PLAYALONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_DD_BEAT", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_BEAT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_DD_NORESPOND", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_NORESPOND", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_DD_TIP", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_TIP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_DD_POORMEM", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_POORMEM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_DD_POORUNDER", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_POORUNDER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_DD_POORSTUDY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_POORSTUDY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_DD_THROWING", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_THROWING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_DD_DROOLING", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_DROOLING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_DD_NONECK", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_NONECK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_DD_OTHER", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_OTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_PSYCHIATRIC", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_PSYCHIATRIC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NEUROLOGICAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_NEUROLOGICAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_DDISORDER", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DDISORDER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_PSYCHOLOGICAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_PSYCHOLOGICAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_ADVISED_ASSESSMENT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADVISED_ASSESSMENT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_ADVISED_ASSESSMENT_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADVISED_ASSESSMENT_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_ADVICED_ASSESSMENT_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADVICED_ASSESSMENT_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_ADVICED_ASSESSMENT_DETAIL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADVICED_ASSESSMENT_DETAIL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NP_NOTES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_NP_NOTES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_PP_NOTES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_PP_NOTES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_DD_NOTES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DD_NOTES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_IS_ASSESS_CHECKED", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_IS_ASSESS_CHECKED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MAIN_THERAPY_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "MAIN_THERAPY_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MAIN_THERAPY_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MAIN_THERAPY_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [CLIENT_CA_SOCIAL] SET [CLIENT_NO] = @CLIENT_NO, [CLIENT_COMORBIDITY] = @C"& _ 
                "LIENT_COMORBIDITY, [CLIENT_CLINICAL_AUDIT] = @CLIENT_CLINICAL_AUDIT, [CLIENT_POV"& _ 
                "ERTY_CARD] = @CLIENT_POVERTY_CARD, [CLIENT_POVERTY_OTHERS] = @CLIENT_POVERTY_OTH"& _ 
                "ERS, [CLIENT_UNIT_ALL_1] = @CLIENT_UNIT_ALL_1, [CLIENT_UNIT_ALL_2] = @CLIENT_UNI"& _ 
                "T_ALL_2, [CLIENT_SOCIAL_SERVICETYPE] = @CLIENT_SOCIAL_SERVICETYPE, [CLIENT_REFER"& _ 
                "_TO] = @CLIENT_REFER_TO, [CLIENT_SOCIAL_WORKER] = @CLIENT_SOCIAL_WORKER, [CLIENT"& _ 
                "_CC_NP_FIT] = @CLIENT_CC_NP_FIT, [CLIENT_CC_NP_JERK] = @CLIENT_CC_NP_JERK, [CLIE"& _ 
                "NT_CC_NP_BSPELLS] = @CLIENT_CC_NP_BSPELLS, [CLIENT_CC_NP_HSHAKING] = @CLIENT_CC_"& _ 
                "NP_HSHAKING, [CLIENT_CC_NP_EYE_BLINK] = @CLIENT_CC_NP_EYE_BLINK, [CLIENT_CC_NP_O"& _ 
                "S_WEAK] = @CLIENT_CC_NP_OS_WEAK, [CLIENT_CC_NP_OTHER] = @CLIENT_CC_NP_OTHER, [CL"& _ 
                "IENT_CC_PP_HEADACHE] = @CLIENT_CC_PP_HEADACHE, [CLIENT_CC_PP_FEAR] = @CLIENT_CC_"& _ 
                "PP_FEAR, [CLIENT_CC_PP_THINK] = @CLIENT_CC_PP_THINK, [CLIENT_CC_PP_WORRY] = @CLI"& _ 
                "ENT_CC_PP_WORRY, [CLIENT_CC_PP_STEAL] = @CLIENT_CC_PP_STEAL, [CLIENT_CC_PP_DISOB"& _ 
                "E] = @CLIENT_CC_PP_DISOBE, [CLIENT_CC_PP_LIE] = @CLIENT_CC_PP_LIE, [CLIENT_CC_PP"& _ 
                "_ANGRY] = @CLIENT_CC_PP_ANGRY, [CLIENT_CC_PP_IRRIT] = @CLIENT_CC_PP_IRRIT, [CLIE"& _ 
                "NT_CC_PP_SDIFFICULTY] = @CLIENT_CC_PP_SDIFFICULTY, [CLIENT_CC_PP_FAINTING] = @CL"& _ 
                "IENT_CC_PP_FAINTING, [CLIENT_CC_PP_OTHER] = @CLIENT_CC_PP_OTHER, [CLIENT_CC_MAJO"& _ 
                "R_TALK] = @CLIENT_CC_MAJOR_TALK, [CLIENT_CC_MAJOR_LAUGH] = @CLIENT_CC_MAJOR_LAUG"& _ 
                "H, [CLIENT_CC_MAJOR_STRAIGHT] = @CLIENT_CC_MAJOR_STRAIGHT, [CLIENT_CC_MAJOR_AGGR"& _ 
                "] = @CLIENT_CC_MAJOR_AGGR, [CLIENT_CC_MAJOR_SDISTURB] = @CLIENT_CC_MAJOR_SDISTUR"& _ 
                "B, [CLIENT_CC_MAJOR_APPETITE] = @CLIENT_CC_MAJOR_APPETITE, [CLIENT_CC_MAJOR_SHYN"& _ 
                "ESS] = @CLIENT_CC_MAJOR_SHYNESS, [CLIENT_CC_MAJOR_BREAK] = @CLIENT_CC_MAJOR_BREA"& _ 
                "K, [CLIENT_CC_MAJOR_GOAWAY] = @CLIENT_CC_MAJOR_GOAWAY, [CLIENT_CC_MAJOR_OTHER] ="& _ 
                " @CLIENT_CC_MAJOR_OTHER, [CLIENT_CC_DD_NOTALK] = @CLIENT_CC_DD_NOTALK, [CLIENT_C"& _ 
                "C_DD_NOWALK] = @CLIENT_CC_DD_NOWALK, [CLIENT_CC_DD_PLAYALONE] = @CLIENT_CC_DD_PL"& _ 
                "AYALONE, [CLIENT_CC_DD_BEAT] = @CLIENT_CC_DD_BEAT, [CLIENT_CC_DD_NORESPOND] = @C"& _ 
                "LIENT_CC_DD_NORESPOND, [CLIENT_CC_DD_TIP] = @CLIENT_CC_DD_TIP, [CLIENT_CC_DD_POO"& _ 
                "RMEM] = @CLIENT_CC_DD_POORMEM, [CLIENT_CC_DD_POORUNDER] = @CLIENT_CC_DD_POORUNDE"& _ 
                "R, [CLIENT_CC_DD_POORSTUDY] = @CLIENT_CC_DD_POORSTUDY, [CLIENT_CC_DD_THROWING] ="& _ 
                " @CLIENT_CC_DD_THROWING, [CLIENT_CC_DD_DROOLING] = @CLIENT_CC_DD_DROOLING, [CLIE"& _ 
                "NT_CC_DD_NONECK] = @CLIENT_CC_DD_NONECK, [CLIENT_CC_DD_OTHER] = @CLIENT_CC_DD_OT"& _ 
                "HER, [CLIENT_PSYCHIATRIC] = @CLIENT_PSYCHIATRIC, [CLIENT_NEUROLOGICAL] = @CLIENT"& _ 
                "_NEUROLOGICAL, [CLIENT_DDISORDER] = @CLIENT_DDISORDER, [CLIENT_PSYCHOLOGICAL] = "& _ 
                "@CLIENT_PSYCHOLOGICAL, [CLIENT_ADVISED_ASSESSMENT] = @CLIENT_ADVISED_ASSESSMENT,"& _ 
                " [CLIENT_ADVISED_ASSESSMENT_DATE] = @CLIENT_ADVISED_ASSESSMENT_DATE, [CLIENT_ADV"& _ 
                "ICED_ASSESSMENT_NOTE] = @CLIENT_ADVICED_ASSESSMENT_NOTE, [CLIENT_ADVICED_ASSESSM"& _ 
                "ENT_DETAIL] = @CLIENT_ADVICED_ASSESSMENT_DETAIL, [CLIENT_NP_NOTES] = @CLIENT_NP_"& _ 
                "NOTES, [CLIENT_PP_NOTES] = @CLIENT_PP_NOTES, [CLIENT_DD_NOTES] = @CLIENT_DD_NOTE"& _ 
                "S, [CLIENT_IS_ASSESS_CHECKED] = @CLIENT_IS_ASSESS_CHECKED, [MAIN_THERAPY_ID] = @"& _ 
                "MAIN_THERAPY_ID, [MAIN_THERAPY_NAME] = @MAIN_THERAPY_NAME WHERE (([CLIENT_SOCIAL"& _ 
                "_ID] = @Original_CLIENT_SOCIAL_ID) AND ((@IsNull_CLIENT_NO = 1 AND [CLIENT_NO] I"& _ 
                "S NULL) OR ([CLIENT_NO] = @Original_CLIENT_NO)) AND ((@IsNull_CLIENT_COMORBIDITY"& _ 
                " = 1 AND [CLIENT_COMORBIDITY] IS NULL) OR ([CLIENT_COMORBIDITY] = @Original_CLIE"& _ 
                "NT_COMORBIDITY)) AND ((@IsNull_CLIENT_CLINICAL_AUDIT = 1 AND [CLIENT_CLINICAL_AU"& _ 
                "DIT] IS NULL) OR ([CLIENT_CLINICAL_AUDIT] = @Original_CLIENT_CLINICAL_AUDIT)) AN"& _ 
                "D ((@IsNull_CLIENT_POVERTY_CARD = 1 AND [CLIENT_POVERTY_CARD] IS NULL) OR ([CLIE"& _ 
                "NT_POVERTY_CARD] = @Original_CLIENT_POVERTY_CARD)) AND ((@IsNull_CLIENT_POVERTY_"& _ 
                "OTHERS = 1 AND [CLIENT_POVERTY_OTHERS] IS NULL) OR ([CLIENT_POVERTY_OTHERS] = @O"& _ 
                "riginal_CLIENT_POVERTY_OTHERS)) AND ((@IsNull_CLIENT_UNIT_ALL_1 = 1 AND [CLIENT_"& _ 
                "UNIT_ALL_1] IS NULL) OR ([CLIENT_UNIT_ALL_1] = @Original_CLIENT_UNIT_ALL_1)) AND"& _ 
                " ((@IsNull_CLIENT_UNIT_ALL_2 = 1 AND [CLIENT_UNIT_ALL_2] IS NULL) OR ([CLIENT_UN"& _ 
                "IT_ALL_2] = @Original_CLIENT_UNIT_ALL_2)) AND ((@IsNull_CLIENT_SOCIAL_SERVICETYP"& _ 
                "E = 1 AND [CLIENT_SOCIAL_SERVICETYPE] IS NULL) OR ([CLIENT_SOCIAL_SERVICETYPE] ="& _ 
                " @Original_CLIENT_SOCIAL_SERVICETYPE)) AND ((@IsNull_CLIENT_REFER_TO = 1 AND [CL"& _ 
                "IENT_REFER_TO] IS NULL) OR ([CLIENT_REFER_TO] = @Original_CLIENT_REFER_TO)) AND "& _ 
                "((@IsNull_CLIENT_SOCIAL_WORKER = 1 AND [CLIENT_SOCIAL_WORKER] IS NULL) OR ([CLIE"& _ 
                "NT_SOCIAL_WORKER] = @Original_CLIENT_SOCIAL_WORKER)) AND ((@IsNull_CLIENT_CC_NP_"& _ 
                "FIT = 1 AND [CLIENT_CC_NP_FIT] IS NULL) OR ([CLIENT_CC_NP_FIT] = @Original_CLIEN"& _ 
                "T_CC_NP_FIT)) AND ((@IsNull_CLIENT_CC_NP_JERK = 1 AND [CLIENT_CC_NP_JERK] IS NUL"& _ 
                "L) OR ([CLIENT_CC_NP_JERK] = @Original_CLIENT_CC_NP_JERK)) AND ((@IsNull_CLIENT_"& _ 
                "CC_NP_BSPELLS = 1 AND [CLIENT_CC_NP_BSPELLS] IS NULL) OR ([CLIENT_CC_NP_BSPELLS]"& _ 
                " = @Original_CLIENT_CC_NP_BSPELLS)) AND ((@IsNull_CLIENT_CC_NP_HSHAKING = 1 AND "& _ 
                "[CLIENT_CC_NP_HSHAKING] IS NULL) OR ([CLIENT_CC_NP_HSHAKING] = @Original_CLIENT_"& _ 
                "CC_NP_HSHAKING)) AND ((@IsNull_CLIENT_CC_NP_EYE_BLINK = 1 AND [CLIENT_CC_NP_EYE_"& _ 
                "BLINK] IS NULL) OR ([CLIENT_CC_NP_EYE_BLINK] = @Original_CLIENT_CC_NP_EYE_BLINK)"& _ 
                ") AND ((@IsNull_CLIENT_CC_NP_OS_WEAK = 1 AND [CLIENT_CC_NP_OS_WEAK] IS NULL) OR "& _ 
                "([CLIENT_CC_NP_OS_WEAK] = @Original_CLIENT_CC_NP_OS_WEAK)) AND ((@IsNull_CLIENT_"& _ 
                "CC_NP_OTHER = 1 AND [CLIENT_CC_NP_OTHER] IS NULL) OR ([CLIENT_CC_NP_OTHER] = @Or"& _ 
                "iginal_CLIENT_CC_NP_OTHER)) AND ((@IsNull_CLIENT_CC_PP_HEADACHE = 1 AND [CLIENT_"& _ 
                "CC_PP_HEADACHE] IS NULL) OR ([CLIENT_CC_PP_HEADACHE] = @Original_CLIENT_CC_PP_HE"& _ 
                "ADACHE)) AND ((@IsNull_CLIENT_CC_PP_FEAR = 1 AND [CLIENT_CC_PP_FEAR] IS NULL) OR"& _ 
                " ([CLIENT_CC_PP_FEAR] = @Original_CLIENT_CC_PP_FEAR)) AND ((@IsNull_CLIENT_CC_PP"& _ 
                "_THINK = 1 AND [CLIENT_CC_PP_THINK] IS NULL) OR ([CLIENT_CC_PP_THINK] = @Origina"& _ 
                "l_CLIENT_CC_PP_THINK)) AND ((@IsNull_CLIENT_CC_PP_WORRY = 1 AND [CLIENT_CC_PP_WO"& _ 
                "RRY] IS NULL) OR ([CLIENT_CC_PP_WORRY] = @Original_CLIENT_CC_PP_WORRY)) AND ((@I"& _ 
                "sNull_CLIENT_CC_PP_STEAL = 1 AND [CLIENT_CC_PP_STEAL] IS NULL) OR ([CLIENT_CC_PP"& _ 
                "_STEAL] = @Original_CLIENT_CC_PP_STEAL)) AND ((@IsNull_CLIENT_CC_PP_DISOBE = 1 A"& _ 
                "ND [CLIENT_CC_PP_DISOBE] IS NULL) OR ([CLIENT_CC_PP_DISOBE] = @Original_CLIENT_C"& _ 
                "C_PP_DISOBE)) AND ((@IsNull_CLIENT_CC_PP_LIE = 1 AND [CLIENT_CC_PP_LIE] IS NULL)"& _ 
                " OR ([CLIENT_CC_PP_LIE] = @Original_CLIENT_CC_PP_LIE)) AND ((@IsNull_CLIENT_CC_P"& _ 
                "P_ANGRY = 1 AND [CLIENT_CC_PP_ANGRY] IS NULL) OR ([CLIENT_CC_PP_ANGRY] = @Origin"& _ 
                "al_CLIENT_CC_PP_ANGRY)) AND ((@IsNull_CLIENT_CC_PP_IRRIT = 1 AND [CLIENT_CC_PP_I"& _ 
                "RRIT] IS NULL) OR ([CLIENT_CC_PP_IRRIT] = @Original_CLIENT_CC_PP_IRRIT)) AND ((@"& _ 
                "IsNull_CLIENT_CC_PP_SDIFFICULTY = 1 AND [CLIENT_CC_PP_SDIFFICULTY] IS NULL) OR ("& _ 
                "[CLIENT_CC_PP_SDIFFICULTY] = @Original_CLIENT_CC_PP_SDIFFICULTY)) AND ((@IsNull_"& _ 
                "CLIENT_CC_PP_FAINTING = 1 AND [CLIENT_CC_PP_FAINTING] IS NULL) OR ([CLIENT_CC_PP"& _ 
                "_FAINTING] = @Original_CLIENT_CC_PP_FAINTING)) AND ((@IsNull_CLIENT_CC_PP_OTHER "& _ 
                "= 1 AND [CLIENT_CC_PP_OTHER] IS NULL) OR ([CLIENT_CC_PP_OTHER] = @Original_CLIEN"& _ 
                "T_CC_PP_OTHER)) AND ((@IsNull_CLIENT_CC_MAJOR_TALK = 1 AND [CLIENT_CC_MAJOR_TALK"& _ 
                "] IS NULL) OR ([CLIENT_CC_MAJOR_TALK] = @Original_CLIENT_CC_MAJOR_TALK)) AND ((@"& _ 
                "IsNull_CLIENT_CC_MAJOR_LAUGH = 1 AND [CLIENT_CC_MAJOR_LAUGH] IS NULL) OR ([CLIEN"& _ 
                "T_CC_MAJOR_LAUGH] = @Original_CLIENT_CC_MAJOR_LAUGH)) AND ((@IsNull_CLIENT_CC_MA"& _ 
                "JOR_STRAIGHT = 1 AND [CLIENT_CC_MAJOR_STRAIGHT] IS NULL) OR ([CLIENT_CC_MAJOR_ST"& _ 
                "RAIGHT] = @Original_CLIENT_CC_MAJOR_STRAIGHT)) AND ((@IsNull_CLIENT_CC_MAJOR_AGG"& _ 
                "R = 1 AND [CLIENT_CC_MAJOR_AGGR] IS NULL) OR ([CLIENT_CC_MAJOR_AGGR] = @Original"& _ 
                "_CLIENT_CC_MAJOR_AGGR)) AND ((@IsNull_CLIENT_CC_MAJOR_SDISTURB = 1 AND [CLIENT_C"& _ 
                "C_MAJOR_SDISTURB] IS NULL) OR ([CLIENT_CC_MAJOR_SDISTURB] = @Original_CLIENT_CC_"& _ 
                "MAJOR_SDISTURB)) AND ((@IsNull_CLIENT_CC_MAJOR_APPETITE = 1 AND [CLIENT_CC_MAJOR"& _ 
                "_APPETITE] IS NULL) OR ([CLIENT_CC_MAJOR_APPETITE] = @Original_CLIENT_CC_MAJOR_A"& _ 
                "PPETITE)) AND ((@IsNull_CLIENT_CC_MAJOR_SHYNESS = 1 AND [CLIENT_CC_MAJOR_SHYNESS"& _ 
                "] IS NULL) OR ([CLIENT_CC_MAJOR_SHYNESS] = @Original_CLIENT_CC_MAJOR_SHYNESS)) A"& _ 
                "ND ((@IsNull_CLIENT_CC_MAJOR_BREAK = 1 AND [CLIENT_CC_MAJOR_BREAK] IS NULL) OR ("& _ 
                "[CLIENT_CC_MAJOR_BREAK] = @Original_CLIENT_CC_MAJOR_BREAK)) AND ((@IsNull_CLIENT"& _ 
                "_CC_MAJOR_GOAWAY = 1 AND [CLIENT_CC_MAJOR_GOAWAY] IS NULL) OR ([CLIENT_CC_MAJOR_"& _ 
                "GOAWAY] = @Original_CLIENT_CC_MAJOR_GOAWAY)) AND ((@IsNull_CLIENT_CC_MAJOR_OTHER"& _ 
                " = 1 AND [CLIENT_CC_MAJOR_OTHER] IS NULL) OR ([CLIENT_CC_MAJOR_OTHER] = @Origina"& _ 
                "l_CLIENT_CC_MAJOR_OTHER)) AND ((@IsNull_CLIENT_CC_DD_NOTALK = 1 AND [CLIENT_CC_D"& _ 
                "D_NOTALK] IS NULL) OR ([CLIENT_CC_DD_NOTALK] = @Original_CLIENT_CC_DD_NOTALK)) A"& _ 
                "ND ((@IsNull_CLIENT_CC_DD_NOWALK = 1 AND [CLIENT_CC_DD_NOWALK] IS NULL) OR ([CLI"& _ 
                "ENT_CC_DD_NOWALK] = @Original_CLIENT_CC_DD_NOWALK)) AND ((@IsNull_CLIENT_CC_DD_P"& _ 
                "LAYALONE = 1 AND [CLIENT_CC_DD_PLAYALONE] IS NULL) OR ([CLIENT_CC_DD_PLAYALONE] "& _ 
                "= @Original_CLIENT_CC_DD_PLAYALONE)) AND ((@IsNull_CLIENT_CC_DD_BEAT = 1 AND [CL"& _ 
                "IENT_CC_DD_BEAT] IS NULL) OR ([CLIENT_CC_DD_BEAT] = @Original_CLIENT_CC_DD_BEAT)"& _ 
                ") AND ((@IsNull_CLIENT_CC_DD_NORESPOND = 1 AND [CLIENT_CC_DD_NORESPOND] IS NULL)"& _ 
                " OR ([CLIENT_CC_DD_NORESPOND] = @Original_CLIENT_CC_DD_NORESPOND)) AND ((@IsNull"& _ 
                "_CLIENT_CC_DD_TIP = 1 AND [CLIENT_CC_DD_TIP] IS NULL) OR ([CLIENT_CC_DD_TIP] = @"& _ 
                "Original_CLIENT_CC_DD_TIP)) AND ((@IsNull_CLIENT_CC_DD_POORMEM = 1 AND [CLIENT_C"& _ 
                "C_DD_POORMEM] IS NULL) OR ([CLIENT_CC_DD_POORMEM] = @Original_CLIENT_CC_DD_POORM"& _ 
                "EM)) AND ((@IsNull_CLIENT_CC_DD_POORUNDER = 1 AND [CLIENT_CC_DD_POORUNDER] IS NU"& _ 
                "LL) OR ([CLIENT_CC_DD_POORUNDER] = @Original_CLIENT_CC_DD_POORUNDER)) AND ((@IsN"& _ 
                "ull_CLIENT_CC_DD_POORSTUDY = 1 AND [CLIENT_CC_DD_POORSTUDY] IS NULL) OR ([CLIENT"& _ 
                "_CC_DD_POORSTUDY] = @Original_CLIENT_CC_DD_POORSTUDY)) AND ((@IsNull_CLIENT_CC_D"& _ 
                "D_THROWING = 1 AND [CLIENT_CC_DD_THROWING] IS NULL) OR ([CLIENT_CC_DD_THROWING] "& _ 
                "= @Original_CLIENT_CC_DD_THROWING)) AND ((@IsNull_CLIENT_CC_DD_DROOLING = 1 AND "& _ 
                "[CLIENT_CC_DD_DROOLING] IS NULL) OR ([CLIENT_CC_DD_DROOLING] = @Original_CLIENT_"& _ 
                "CC_DD_DROOLING)) AND ((@IsNull_CLIENT_CC_DD_NONECK = 1 AND [CLIENT_CC_DD_NONECK]"& _ 
                " IS NULL) OR ([CLIENT_CC_DD_NONECK] = @Original_CLIENT_CC_DD_NONECK)) AND ((@IsN"& _ 
                "ull_CLIENT_CC_DD_OTHER = 1 AND [CLIENT_CC_DD_OTHER] IS NULL) OR ([CLIENT_CC_DD_O"& _ 
                "THER] = @Original_CLIENT_CC_DD_OTHER)) AND ((@IsNull_CLIENT_PSYCHIATRIC = 1 AND "& _ 
                "[CLIENT_PSYCHIATRIC] IS NULL) OR ([CLIENT_PSYCHIATRIC] = @Original_CLIENT_PSYCHI"& _ 
                "ATRIC)) AND ((@IsNull_CLIENT_NEUROLOGICAL = 1 AND [CLIENT_NEUROLOGICAL] IS NULL)"& _ 
                " OR ([CLIENT_NEUROLOGICAL] = @Original_CLIENT_NEUROLOGICAL)) AND ((@IsNull_CLIEN"& _ 
                "T_DDISORDER = 1 AND [CLIENT_DDISORDER] IS NULL) OR ([CLIENT_DDISORDER] = @Origin"& _ 
                "al_CLIENT_DDISORDER)) AND ((@IsNull_CLIENT_PSYCHOLOGICAL = 1 AND [CLIENT_PSYCHOL"& _ 
                "OGICAL] IS NULL) OR ([CLIENT_PSYCHOLOGICAL] = @Original_CLIENT_PSYCHOLOGICAL)) A"& _ 
                "ND ((@IsNull_CLIENT_ADVISED_ASSESSMENT = 1 AND [CLIENT_ADVISED_ASSESSMENT] IS NU"& _ 
                "LL) OR ([CLIENT_ADVISED_ASSESSMENT] = @Original_CLIENT_ADVISED_ASSESSMENT)) AND "& _ 
                "((@IsNull_CLIENT_ADVISED_ASSESSMENT_DATE = 1 AND [CLIENT_ADVISED_ASSESSMENT_DATE"& _ 
                "] IS NULL) OR ([CLIENT_ADVISED_ASSESSMENT_DATE] = @Original_CLIENT_ADVISED_ASSES"& _ 
                "SMENT_DATE)) AND ((@IsNull_CLIENT_ADVICED_ASSESSMENT_NOTE = 1 AND [CLIENT_ADVICE"& _ 
                "D_ASSESSMENT_NOTE] IS NULL) OR ([CLIENT_ADVICED_ASSESSMENT_NOTE] = @Original_CLI"& _ 
                "ENT_ADVICED_ASSESSMENT_NOTE)) AND ((@IsNull_CLIENT_ADVICED_ASSESSMENT_DETAIL = 1"& _ 
                " AND [CLIENT_ADVICED_ASSESSMENT_DETAIL] IS NULL) OR ([CLIENT_ADVICED_ASSESSMENT_"& _ 
                "DETAIL] = @Original_CLIENT_ADVICED_ASSESSMENT_DETAIL)) AND ((@IsNull_CLIENT_NP_N"& _ 
                "OTES = 1 AND [CLIENT_NP_NOTES] IS NULL) OR ([CLIENT_NP_NOTES] = @Original_CLIENT"& _ 
                "_NP_NOTES)) AND ((@IsNull_CLIENT_PP_NOTES = 1 AND [CLIENT_PP_NOTES] IS NULL) OR "& _ 
                "([CLIENT_PP_NOTES] = @Original_CLIENT_PP_NOTES)) AND ((@IsNull_CLIENT_DD_NOTES ="& _ 
                " 1 AND [CLIENT_DD_NOTES] IS NULL) OR ([CLIENT_DD_NOTES] = @Original_CLIENT_DD_NO"& _ 
                "TES)) AND ((@IsNull_CLIENT_IS_ASSESS_CHECKED = 1 AND [CLIENT_IS_ASSESS_CHECKED] "& _ 
                "IS NULL) OR ([CLIENT_IS_ASSESS_CHECKED] = @Original_CLIENT_IS_ASSESS_CHECKED)) A"& _ 
                "ND ((@IsNull_MAIN_THERAPY_ID = 1 AND [MAIN_THERAPY_ID] IS NULL) OR ([MAIN_THERAP"& _ 
                "Y_ID] = @Original_MAIN_THERAPY_ID)) AND ((@IsNull_MAIN_THERAPY_NAME = 1 AND [MAI"& _ 
                "N_THERAPY_NAME] IS NULL) OR ([MAIN_THERAPY_NAME] = @Original_MAIN_THERAPY_NAME))"& _ 
                ");"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CLIENT_SOCIAL_ID, CLIENT_NO, CLIENT_COMORBIDITY, CLIENT_CLINICAL_AUDI"& _ 
                "T, CLIENT_POVERTY_CARD, CLIENT_POVERTY_OTHERS, CLIENT_UNIT_ALL_1, CLIENT_UNIT_AL"& _ 
                "L_2, CLIENT_SOCIAL_SERVICETYPE, CLIENT_REFER_TO, CLIENT_SOCIAL_WORKER, CLIENT_CC"& _ 
                "_NP_FIT, CLIENT_CC_NP_JERK, CLIENT_CC_NP_BSPELLS, CLIENT_CC_NP_HSHAKING, CLIENT_"& _ 
                "CC_NP_EYE_BLINK, CLIENT_CC_NP_OS_WEAK, CLIENT_CC_NP_OTHER, CLIENT_CC_PP_HEADACHE"& _ 
                ", CLIENT_CC_PP_FEAR, CLIENT_CC_PP_THINK, CLIENT_CC_PP_WORRY, CLIENT_CC_PP_STEAL,"& _ 
                " CLIENT_CC_PP_DISOBE, CLIENT_CC_PP_LIE, CLIENT_CC_PP_ANGRY, CLIENT_CC_PP_IRRIT, "& _ 
                "CLIENT_CC_PP_SDIFFICULTY, CLIENT_CC_PP_FAINTING, CLIENT_CC_PP_OTHER, CLIENT_CC_M"& _ 
                "AJOR_TALK, CLIENT_CC_MAJOR_LAUGH, CLIENT_CC_MAJOR_STRAIGHT, CLIENT_CC_MAJOR_AGGR"& _ 
                ", CLIENT_CC_MAJOR_SDISTURB, CLIENT_CC_MAJOR_APPETITE, CLIENT_CC_MAJOR_SHYNESS, C"& _ 
                "LIENT_CC_MAJOR_BREAK, CLIENT_CC_MAJOR_GOAWAY, CLIENT_CC_MAJOR_OTHER, CLIENT_CC_D"& _ 
                "D_NOTALK, CLIENT_CC_DD_NOWALK, CLIENT_CC_DD_PLAYALONE, CLIENT_CC_DD_BEAT, CLIENT"& _ 
                "_CC_DD_NORESPOND, CLIENT_CC_DD_TIP, CLIENT_CC_DD_POORMEM, CLIENT_CC_DD_POORUNDER"& _ 
                ", CLIENT_CC_DD_POORSTUDY, CLIENT_CC_DD_THROWING, CLIENT_CC_DD_DROOLING, CLIENT_C"& _ 
                "C_DD_NONECK, CLIENT_CC_DD_OTHER, CLIENT_PSYCHIATRIC, CLIENT_NEUROLOGICAL, CLIENT"& _ 
                "_DDISORDER, CLIENT_PSYCHOLOGICAL, CLIENT_ADVISED_ASSESSMENT, CLIENT_ADVISED_ASSE"& _ 
                "SSMENT_DATE, CLIENT_ADVICED_ASSESSMENT_NOTE, CLIENT_ADVICED_ASSESSMENT_DETAIL, C"& _ 
                "LIENT_NP_NOTES, CLIENT_PP_NOTES, CLIENT_DD_NOTES, CLIENT_IS_ASSESS_CHECKED, MAIN"& _ 
                "_THERAPY_ID, MAIN_THERAPY_NAME FROM CLIENT_CA_SOCIAL WHERE (CLIENT_SOCIAL_ID = @"& _ 
                "CLIENT_SOCIAL_ID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_COMORBIDITY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_COMORBIDITY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CLINICAL_AUDIT", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CLINICAL_AUDIT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_POVERTY_CARD", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_POVERTY_CARD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_POVERTY_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_POVERTY_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_UNIT_ALL_1", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_UNIT_ALL_1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_UNIT_ALL_2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_UNIT_ALL_2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_SOCIAL_SERVICETYPE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SOCIAL_SERVICETYPE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_REFER_TO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_REFER_TO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_SOCIAL_WORKER", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SOCIAL_WORKER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_NP_FIT", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_NP_FIT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_NP_JERK", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_NP_JERK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_NP_BSPELLS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_NP_BSPELLS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_NP_HSHAKING", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_NP_HSHAKING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_NP_EYE_BLINK", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_NP_EYE_BLINK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_NP_OS_WEAK", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_NP_OS_WEAK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_NP_OTHER", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_NP_OTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_PP_HEADACHE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_HEADACHE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_PP_FEAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_FEAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_PP_THINK", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_THINK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_PP_WORRY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_WORRY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_PP_STEAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_STEAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_PP_DISOBE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_DISOBE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_PP_LIE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_LIE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_PP_ANGRY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_ANGRY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_PP_IRRIT", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_IRRIT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_PP_SDIFFICULTY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_SDIFFICULTY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_PP_FAINTING", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_FAINTING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_PP_OTHER", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_OTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_MAJOR_TALK", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_TALK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_MAJOR_LAUGH", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_LAUGH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_MAJOR_STRAIGHT", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_STRAIGHT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_MAJOR_AGGR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_AGGR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_MAJOR_SDISTURB", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_SDISTURB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_MAJOR_APPETITE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_APPETITE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_MAJOR_SHYNESS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_SHYNESS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_MAJOR_BREAK", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_BREAK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_MAJOR_GOAWAY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_GOAWAY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_MAJOR_OTHER", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_OTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_DD_NOTALK", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_NOTALK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_DD_NOWALK", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_NOWALK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_DD_PLAYALONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_PLAYALONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_DD_BEAT", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_BEAT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_DD_NORESPOND", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_NORESPOND", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_DD_TIP", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_TIP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_DD_POORMEM", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_POORMEM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_DD_POORUNDER", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_POORUNDER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_DD_POORSTUDY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_POORSTUDY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_DD_THROWING", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_THROWING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_DD_DROOLING", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_DROOLING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_DD_NONECK", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_NONECK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_CC_DD_OTHER", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_OTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_PSYCHIATRIC", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_PSYCHIATRIC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NEUROLOGICAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_NEUROLOGICAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_DDISORDER", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DDISORDER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_PSYCHOLOGICAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_PSYCHOLOGICAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_ADVISED_ASSESSMENT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADVISED_ASSESSMENT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_ADVISED_ASSESSMENT_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADVISED_ASSESSMENT_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_ADVICED_ASSESSMENT_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADVICED_ASSESSMENT_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_ADVICED_ASSESSMENT_DETAIL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADVICED_ASSESSMENT_DETAIL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NP_NOTES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_NP_NOTES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_PP_NOTES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_PP_NOTES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_DD_NOTES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DD_NOTES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_IS_ASSESS_CHECKED", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_IS_ASSESS_CHECKED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MAIN_THERAPY_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "MAIN_THERAPY_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MAIN_THERAPY_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MAIN_THERAPY_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_SOCIAL_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_SOCIAL_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_COMORBIDITY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_COMORBIDITY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_COMORBIDITY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_COMORBIDITY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CLINICAL_AUDIT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CLINICAL_AUDIT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CLINICAL_AUDIT", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CLINICAL_AUDIT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_POVERTY_CARD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_POVERTY_CARD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_POVERTY_CARD", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_POVERTY_CARD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_POVERTY_OTHERS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_POVERTY_OTHERS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_POVERTY_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_POVERTY_OTHERS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_UNIT_ALL_1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_UNIT_ALL_1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_UNIT_ALL_1", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_UNIT_ALL_1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_UNIT_ALL_2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_UNIT_ALL_2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_UNIT_ALL_2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_UNIT_ALL_2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_SOCIAL_SERVICETYPE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SOCIAL_SERVICETYPE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_SOCIAL_SERVICETYPE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SOCIAL_SERVICETYPE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_REFER_TO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_REFER_TO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_REFER_TO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_REFER_TO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_SOCIAL_WORKER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SOCIAL_WORKER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_SOCIAL_WORKER", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_SOCIAL_WORKER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_NP_FIT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_NP_FIT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_NP_FIT", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_NP_FIT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_NP_JERK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_NP_JERK", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_NP_JERK", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_NP_JERK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_NP_BSPELLS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_NP_BSPELLS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_NP_BSPELLS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_NP_BSPELLS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_NP_HSHAKING", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_NP_HSHAKING", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_NP_HSHAKING", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_NP_HSHAKING", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_NP_EYE_BLINK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_NP_EYE_BLINK", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_NP_EYE_BLINK", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_NP_EYE_BLINK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_NP_OS_WEAK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_NP_OS_WEAK", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_NP_OS_WEAK", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_NP_OS_WEAK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_NP_OTHER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_NP_OTHER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_NP_OTHER", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_NP_OTHER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_PP_HEADACHE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_HEADACHE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_PP_HEADACHE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_HEADACHE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_PP_FEAR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_FEAR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_PP_FEAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_FEAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_PP_THINK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_THINK", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_PP_THINK", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_THINK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_PP_WORRY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_WORRY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_PP_WORRY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_WORRY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_PP_STEAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_STEAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_PP_STEAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_STEAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_PP_DISOBE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_DISOBE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_PP_DISOBE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_DISOBE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_PP_LIE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_LIE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_PP_LIE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_LIE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_PP_ANGRY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_ANGRY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_PP_ANGRY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_ANGRY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_PP_IRRIT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_IRRIT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_PP_IRRIT", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_IRRIT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_PP_SDIFFICULTY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_SDIFFICULTY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_PP_SDIFFICULTY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_SDIFFICULTY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_PP_FAINTING", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_FAINTING", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_PP_FAINTING", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_FAINTING", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_PP_OTHER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_OTHER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_PP_OTHER", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_PP_OTHER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_MAJOR_TALK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_TALK", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_MAJOR_TALK", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_TALK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_MAJOR_LAUGH", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_LAUGH", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_MAJOR_LAUGH", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_LAUGH", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_MAJOR_STRAIGHT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_STRAIGHT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_MAJOR_STRAIGHT", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_STRAIGHT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_MAJOR_AGGR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_AGGR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_MAJOR_AGGR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_AGGR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_MAJOR_SDISTURB", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_SDISTURB", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_MAJOR_SDISTURB", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_SDISTURB", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_MAJOR_APPETITE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_APPETITE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_MAJOR_APPETITE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_APPETITE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_MAJOR_SHYNESS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_SHYNESS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_MAJOR_SHYNESS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_SHYNESS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_MAJOR_BREAK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_BREAK", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_MAJOR_BREAK", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_BREAK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_MAJOR_GOAWAY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_GOAWAY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_MAJOR_GOAWAY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_GOAWAY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_MAJOR_OTHER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_OTHER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_MAJOR_OTHER", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_MAJOR_OTHER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_DD_NOTALK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_NOTALK", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_DD_NOTALK", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_NOTALK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_DD_NOWALK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_NOWALK", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_DD_NOWALK", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_NOWALK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_DD_PLAYALONE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_PLAYALONE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_DD_PLAYALONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_PLAYALONE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_DD_BEAT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_BEAT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_DD_BEAT", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_BEAT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_DD_NORESPOND", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_NORESPOND", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_DD_NORESPOND", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_NORESPOND", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_DD_TIP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_TIP", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_DD_TIP", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_TIP", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_DD_POORMEM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_POORMEM", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_DD_POORMEM", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_POORMEM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_DD_POORUNDER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_POORUNDER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_DD_POORUNDER", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_POORUNDER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_DD_POORSTUDY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_POORSTUDY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_DD_POORSTUDY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_POORSTUDY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_DD_THROWING", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_THROWING", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_DD_THROWING", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_THROWING", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_DD_DROOLING", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_DROOLING", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_DD_DROOLING", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_DROOLING", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_DD_NONECK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_NONECK", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_DD_NONECK", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_NONECK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_CC_DD_OTHER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_OTHER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_CC_DD_OTHER", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_CC_DD_OTHER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_PSYCHIATRIC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_PSYCHIATRIC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_PSYCHIATRIC", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_PSYCHIATRIC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_NEUROLOGICAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_NEUROLOGICAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_NEUROLOGICAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_NEUROLOGICAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_DDISORDER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DDISORDER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_DDISORDER", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DDISORDER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_PSYCHOLOGICAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_PSYCHOLOGICAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_PSYCHOLOGICAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_PSYCHOLOGICAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_ADVISED_ASSESSMENT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADVISED_ASSESSMENT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_ADVISED_ASSESSMENT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADVISED_ASSESSMENT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_ADVISED_ASSESSMENT_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADVISED_ASSESSMENT_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_ADVISED_ASSESSMENT_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADVISED_ASSESSMENT_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_ADVICED_ASSESSMENT_NOTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADVICED_ASSESSMENT_NOTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_ADVICED_ASSESSMENT_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADVICED_ASSESSMENT_NOTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_ADVICED_ASSESSMENT_DETAIL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADVICED_ASSESSMENT_DETAIL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_ADVICED_ASSESSMENT_DETAIL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADVICED_ASSESSMENT_DETAIL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_NP_NOTES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_NP_NOTES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_NP_NOTES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_NP_NOTES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_PP_NOTES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_PP_NOTES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_PP_NOTES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_PP_NOTES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_DD_NOTES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DD_NOTES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_DD_NOTES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_DD_NOTES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_IS_ASSESS_CHECKED", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_IS_ASSESS_CHECKED", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_IS_ASSESS_CHECKED", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_IS_ASSESS_CHECKED", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MAIN_THERAPY_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MAIN_THERAPY_ID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MAIN_THERAPY_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "MAIN_THERAPY_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MAIN_THERAPY_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MAIN_THERAPY_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MAIN_THERAPY_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MAIN_THERAPY_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_SOCIAL_ID", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_SOCIAL_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.KTGSYS.My.MySettings.Default.TakeoDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(3) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        CLIENT_SOCIAL_ID, CLIENT_NO, CLIENT_COMORBIDITY, CLIENT_CLINICAL_AU"& _ 
                "DIT, CLIENT_POVERTY_CARD, CLIENT_POVERTY_OTHERS, CLIENT_UNIT_ALL_1, CLIENT_UNIT_"& _ 
                "ALL_2, CLIENT_SOCIAL_SERVICETYPE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CLIENT_REFER_TO, CL"& _ 
                "IENT_SOCIAL_WORKER, CLIENT_CC_NP_FIT, CLIENT_CC_NP_JERK, CLIENT_CC_NP_BSPELLS, C"& _ 
                "LIENT_CC_NP_HSHAKING, CLIENT_CC_NP_EYE_BLINK, CLIENT_CC_NP_OS_WEAK, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"          "& _ 
                "               CLIENT_CC_NP_OTHER, CLIENT_CC_PP_HEADACHE, CLIENT_CC_PP_FEAR, CLI"& _ 
                "ENT_CC_PP_THINK, CLIENT_CC_PP_WORRY, CLIENT_CC_PP_STEAL, CLIENT_CC_PP_DISOBE, CL"& _ 
                "IENT_CC_PP_LIE, CLIENT_CC_PP_ANGRY, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CLIENT_CC_PP_IRRI"& _ 
                "T, CLIENT_CC_PP_SDIFFICULTY, CLIENT_CC_PP_FAINTING, CLIENT_CC_PP_OTHER, CLIENT_C"& _ 
                "C_MAJOR_TALK, CLIENT_CC_MAJOR_LAUGH, CLIENT_CC_MAJOR_STRAIGHT, CLIENT_CC_MAJOR_A"& _ 
                "GGR, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CLIENT_CC_MAJOR_SDISTURB, CLIENT_CC_MAJOR_APPETI"& _ 
                "TE, CLIENT_CC_MAJOR_SHYNESS, CLIENT_CC_MAJOR_BREAK, CLIENT_CC_MAJOR_GOAWAY, CLIE"& _ 
                "NT_CC_MAJOR_OTHER, CLIENT_CC_DD_NOTALK, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CLIENT_CC_DD_"& _ 
                "NOWALK, CLIENT_CC_DD_PLAYALONE, CLIENT_CC_DD_BEAT, CLIENT_CC_DD_NORESPOND, CLIEN"& _ 
                "T_CC_DD_TIP, CLIENT_CC_DD_POORMEM, CLIENT_CC_DD_POORUNDER, CLIENT_CC_DD_POORSTUD"& _ 
                "Y, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CLIENT_CC_DD_THROWING, CLIENT_CC_DD_DROOLING, CLIE"& _ 
                "NT_CC_DD_NONECK, CLIENT_CC_DD_OTHER, CLIENT_PSYCHIATRIC, CLIENT_NEUROLOGICAL, CL"& _ 
                "IENT_DDISORDER, CLIENT_PSYCHOLOGICAL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CLIENT_ADVISED_"& _ 
                "ASSESSMENT, CLIENT_ADVISED_ASSESSMENT_DATE, CLIENT_ADVICED_ASSESSMENT_NOTE, CLIE"& _ 
                "NT_ADVICED_ASSESSMENT_DETAIL, CLIENT_NP_NOTES, CLIENT_PP_NOTES, CLIENT_DD_NOTES,"& _ 
                " "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CLIENT_IS_ASSESS_CHECKED, MAIN_THERAPY_ID, MAIN_THER"& _ 
                "APY_NAME"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            CLIENT_CA_SOCIAL"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        MAIN_THERAPY_NAME"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            CLIENT_CA_SOCIAL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        ("& _ 
                "CLIENT_NO = @CLIENT_NO)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "UPDATE       CLIENT_CA_SOCIAL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET                CLIENT_ADVISED_ASSESSMENT = @CL"& _ 
                "IENT_ADVISED_ASSESSMENT, CLIENT_ADVISED_ASSESSMENT_DATE = @CLIENT_ADVISED_ASSESS"& _ 
                "MENT_DATE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CLIENT_ADVICED_ASSESSMENT_NOTE = @CLIENT_A"& _ 
                "DVICED_ASSESSMENT_NOTE, CLIENT_ADVICED_ASSESSMENT_DETAIL = @CLIENT_ADVICED_ASSES"& _ 
                "SMENT_DETAIL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (CLIENT_NO = @CLIENT_NO)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_ADVISED_ASSESSMENT", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADVISED_ASSESSMENT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_ADVISED_ASSESSMENT_DATE", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADVISED_ASSESSMENT_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_ADVICED_ASSESSMENT_NOTE", Global.System.Data.SqlDbType.NVarChar, 250, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADVICED_ASSESSMENT_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_ADVICED_ASSESSMENT_DETAIL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADVICED_ASSESSMENT_DETAIL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "UPDATE       CLIENT_CA_SOCIAL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET                MAIN_THERAPY_ID = @MAIN_THERAPY"& _ 
                "_ID, MAIN_THERAPY_NAME = @MAIN_THERAPY_NAME"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (CLIENT_NO = @CLIENT_N"& _ 
                "O)"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MAIN_THERAPY_ID", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "MAIN_THERAPY_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MAIN_THERAPY_NAME", Global.System.Data.SqlDbType.NVarChar, 150, Global.System.Data.ParameterDirection.Input, 0, 0, "MAIN_THERAPY_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_ClientImpression.CLIENT_CA_SOCIALDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_ClientImpression.CLIENT_CA_SOCIALDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_ClientImpression.CLIENT_CA_SOCIALDataTable = New DS_ClientImpression.CLIENT_CA_SOCIALDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DS_ClientImpression.CLIENT_CA_SOCIALDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DS_ClientImpression) As Integer
            Return Me.Adapter.Update(dataSet, "CLIENT_CA_SOCIAL")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_CLIENT_SOCIAL_ID As Decimal,  _
                    ByVal Original_CLIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CLIENT_COMORBIDITY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CLINICAL_AUDIT As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_POVERTY_CARD As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_POVERTY_OTHERS As String,  _
                    ByVal Original_CLIENT_UNIT_ALL_1 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CLIENT_UNIT_ALL_2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CLIENT_SOCIAL_SERVICETYPE As String,  _
                    ByVal Original_CLIENT_REFER_TO As String,  _
                    ByVal Original_CLIENT_SOCIAL_WORKER As String,  _
                    ByVal Original_CLIENT_CC_NP_FIT As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_NP_JERK As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_NP_BSPELLS As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_NP_HSHAKING As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_NP_EYE_BLINK As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_NP_OS_WEAK As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_NP_OTHER As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_PP_HEADACHE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_PP_FEAR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_PP_THINK As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_PP_WORRY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_PP_STEAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_PP_DISOBE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_PP_LIE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_PP_ANGRY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_PP_IRRIT As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_PP_SDIFFICULTY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_PP_FAINTING As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_PP_OTHER As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_MAJOR_TALK As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_MAJOR_LAUGH As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_MAJOR_STRAIGHT As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_MAJOR_AGGR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_MAJOR_SDISTURB As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_MAJOR_APPETITE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_MAJOR_SHYNESS As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_MAJOR_BREAK As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_MAJOR_GOAWAY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_MAJOR_OTHER As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_DD_NOTALK As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_DD_NOWALK As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_DD_PLAYALONE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_DD_BEAT As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_DD_NORESPOND As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_DD_TIP As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_DD_POORMEM As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_DD_POORUNDER As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_DD_POORSTUDY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_DD_THROWING As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_DD_DROOLING As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_DD_NONECK As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_DD_OTHER As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_PSYCHIATRIC As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_NEUROLOGICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_DDISORDER As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_PSYCHOLOGICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_ADVISED_ASSESSMENT As String,  _
                    ByVal Original_CLIENT_ADVISED_ASSESSMENT_DATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_CLIENT_ADVICED_ASSESSMENT_NOTE As String,  _
                    ByVal Original_CLIENT_ADVICED_ASSESSMENT_DETAIL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_NP_NOTES As String,  _
                    ByVal Original_CLIENT_PP_NOTES As String,  _
                    ByVal Original_CLIENT_DD_NOTES As String,  _
                    ByVal Original_CLIENT_IS_ASSESS_CHECKED As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_MAIN_THERAPY_ID As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_MAIN_THERAPY_NAME As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_CLIENT_SOCIAL_ID,Decimal)
            If (Original_CLIENT_NO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_CLIENT_NO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_COMORBIDITY.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_CLIENT_COMORBIDITY.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CLINICAL_AUDIT.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_CLIENT_CLINICAL_AUDIT.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_POVERTY_CARD.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_CLIENT_POVERTY_CARD.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_POVERTY_OTHERS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_CLIENT_POVERTY_OTHERS,String)
            End If
            If (Original_CLIENT_UNIT_ALL_1.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_CLIENT_UNIT_ALL_1.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_UNIT_ALL_2.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_CLIENT_UNIT_ALL_2.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_SOCIAL_SERVICETYPE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_CLIENT_SOCIAL_SERVICETYPE,String)
            End If
            If (Original_CLIENT_REFER_TO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_CLIENT_REFER_TO,String)
            End If
            If (Original_CLIENT_SOCIAL_WORKER Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_CLIENT_SOCIAL_WORKER,String)
            End If
            If (Original_CLIENT_CC_NP_FIT.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_CLIENT_CC_NP_FIT.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_NP_JERK.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_CLIENT_CC_NP_JERK.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_NP_BSPELLS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_CLIENT_CC_NP_BSPELLS.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_NP_HSHAKING.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_CLIENT_CC_NP_HSHAKING.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_NP_EYE_BLINK.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_CLIENT_CC_NP_EYE_BLINK.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_NP_OS_WEAK.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_CLIENT_CC_NP_OS_WEAK.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_NP_OTHER.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_CLIENT_CC_NP_OTHER.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_PP_HEADACHE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_CLIENT_CC_PP_HEADACHE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_PP_FEAR.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_CLIENT_CC_PP_FEAR.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_PP_THINK.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_CLIENT_CC_PP_THINK.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_PP_WORRY.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_CLIENT_CC_PP_WORRY.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_PP_STEAL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_CLIENT_CC_PP_STEAL.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_PP_DISOBE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(Original_CLIENT_CC_PP_DISOBE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_PP_LIE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(Original_CLIENT_CC_PP_LIE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_PP_ANGRY.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(Original_CLIENT_CC_PP_ANGRY.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_PP_IRRIT.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(Original_CLIENT_CC_PP_IRRIT.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_PP_SDIFFICULTY.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(Original_CLIENT_CC_PP_SDIFFICULTY.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_PP_FAINTING.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(Original_CLIENT_CC_PP_FAINTING.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_PP_OTHER.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(Original_CLIENT_CC_PP_OTHER.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_MAJOR_TALK.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(Original_CLIENT_CC_MAJOR_TALK.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_MAJOR_LAUGH.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(Original_CLIENT_CC_MAJOR_LAUGH.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_MAJOR_STRAIGHT.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(Original_CLIENT_CC_MAJOR_STRAIGHT.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(64).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_MAJOR_AGGR.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(Original_CLIENT_CC_MAJOR_AGGR.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(66).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_MAJOR_SDISTURB.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(Original_CLIENT_CC_MAJOR_SDISTURB.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(68).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_MAJOR_APPETITE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(70).Value = CType(Original_CLIENT_CC_MAJOR_APPETITE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(70).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_MAJOR_SHYNESS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(71).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(72).Value = CType(Original_CLIENT_CC_MAJOR_SHYNESS.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(71).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(72).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_MAJOR_BREAK.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(73).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(74).Value = CType(Original_CLIENT_CC_MAJOR_BREAK.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(73).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(74).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_MAJOR_GOAWAY.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(75).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(76).Value = CType(Original_CLIENT_CC_MAJOR_GOAWAY.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(75).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(76).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_MAJOR_OTHER.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(77).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(78).Value = CType(Original_CLIENT_CC_MAJOR_OTHER.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(77).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(78).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_DD_NOTALK.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(79).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(80).Value = CType(Original_CLIENT_CC_DD_NOTALK.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(79).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(80).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_DD_NOWALK.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(81).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(82).Value = CType(Original_CLIENT_CC_DD_NOWALK.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(81).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(82).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_DD_PLAYALONE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(83).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(84).Value = CType(Original_CLIENT_CC_DD_PLAYALONE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(83).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(84).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_DD_BEAT.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(85).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(86).Value = CType(Original_CLIENT_CC_DD_BEAT.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(85).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(86).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_DD_NORESPOND.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(87).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(88).Value = CType(Original_CLIENT_CC_DD_NORESPOND.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(87).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(88).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_DD_TIP.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(89).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(90).Value = CType(Original_CLIENT_CC_DD_TIP.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(89).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(90).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_DD_POORMEM.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(91).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(92).Value = CType(Original_CLIENT_CC_DD_POORMEM.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(91).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(92).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_DD_POORUNDER.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(93).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(94).Value = CType(Original_CLIENT_CC_DD_POORUNDER.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(93).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(94).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_DD_POORSTUDY.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(95).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(96).Value = CType(Original_CLIENT_CC_DD_POORSTUDY.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(95).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(96).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_DD_THROWING.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(97).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(98).Value = CType(Original_CLIENT_CC_DD_THROWING.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(97).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(98).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_DD_DROOLING.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(99).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(100).Value = CType(Original_CLIENT_CC_DD_DROOLING.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(99).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(100).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_DD_NONECK.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(101).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(102).Value = CType(Original_CLIENT_CC_DD_NONECK.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(101).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(102).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_DD_OTHER.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(103).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(104).Value = CType(Original_CLIENT_CC_DD_OTHER.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(103).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(104).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_PSYCHIATRIC.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(105).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(106).Value = CType(Original_CLIENT_PSYCHIATRIC.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(105).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(106).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_NEUROLOGICAL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(107).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(108).Value = CType(Original_CLIENT_NEUROLOGICAL.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(107).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(108).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_DDISORDER.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(109).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(110).Value = CType(Original_CLIENT_DDISORDER.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(109).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(110).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_PSYCHOLOGICAL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(111).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(112).Value = CType(Original_CLIENT_PSYCHOLOGICAL.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(111).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(112).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_ADVISED_ASSESSMENT Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(113).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(114).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(113).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(114).Value = CType(Original_CLIENT_ADVISED_ASSESSMENT,String)
            End If
            If (Original_CLIENT_ADVISED_ASSESSMENT_DATE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(115).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(116).Value = CType(Original_CLIENT_ADVISED_ASSESSMENT_DATE.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(115).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(116).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_ADVICED_ASSESSMENT_NOTE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(117).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(118).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(117).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(118).Value = CType(Original_CLIENT_ADVICED_ASSESSMENT_NOTE,String)
            End If
            If (Original_CLIENT_ADVICED_ASSESSMENT_DETAIL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(119).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(120).Value = CType(Original_CLIENT_ADVICED_ASSESSMENT_DETAIL.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(119).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(120).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_NP_NOTES Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(121).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(122).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(121).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(122).Value = CType(Original_CLIENT_NP_NOTES,String)
            End If
            If (Original_CLIENT_PP_NOTES Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(123).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(124).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(123).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(124).Value = CType(Original_CLIENT_PP_NOTES,String)
            End If
            If (Original_CLIENT_DD_NOTES Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(125).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(126).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(125).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(126).Value = CType(Original_CLIENT_DD_NOTES,String)
            End If
            If (Original_CLIENT_IS_ASSESS_CHECKED.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(127).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(128).Value = CType(Original_CLIENT_IS_ASSESS_CHECKED.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(127).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(128).Value = Global.System.DBNull.Value
            End If
            If (Original_MAIN_THERAPY_ID.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(129).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(130).Value = CType(Original_MAIN_THERAPY_ID.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(129).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(130).Value = Global.System.DBNull.Value
            End If
            If (Original_MAIN_THERAPY_NAME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(131).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(132).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(131).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(132).Value = CType(Original_MAIN_THERAPY_NAME,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal CLIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_COMORBIDITY As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CLINICAL_AUDIT As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_POVERTY_CARD As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_POVERTY_OTHERS As String,  _
                    ByVal CLIENT_UNIT_ALL_1 As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_UNIT_ALL_2 As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_SOCIAL_SERVICETYPE As String,  _
                    ByVal CLIENT_REFER_TO As String,  _
                    ByVal CLIENT_SOCIAL_WORKER As String,  _
                    ByVal CLIENT_CC_NP_FIT As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_NP_JERK As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_NP_BSPELLS As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_NP_HSHAKING As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_NP_EYE_BLINK As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_NP_OS_WEAK As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_NP_OTHER As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_PP_HEADACHE As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_PP_FEAR As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_PP_THINK As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_PP_WORRY As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_PP_STEAL As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_PP_DISOBE As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_PP_LIE As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_PP_ANGRY As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_PP_IRRIT As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_PP_SDIFFICULTY As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_PP_FAINTING As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_PP_OTHER As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_MAJOR_TALK As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_MAJOR_LAUGH As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_MAJOR_STRAIGHT As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_MAJOR_AGGR As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_MAJOR_SDISTURB As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_MAJOR_APPETITE As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_MAJOR_SHYNESS As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_MAJOR_BREAK As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_MAJOR_GOAWAY As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_MAJOR_OTHER As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_DD_NOTALK As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_DD_NOWALK As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_DD_PLAYALONE As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_DD_BEAT As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_DD_NORESPOND As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_DD_TIP As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_DD_POORMEM As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_DD_POORUNDER As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_DD_POORSTUDY As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_DD_THROWING As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_DD_DROOLING As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_DD_NONECK As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_DD_OTHER As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_PSYCHIATRIC As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_NEUROLOGICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_DDISORDER As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_PSYCHOLOGICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_ADVISED_ASSESSMENT As String,  _
                    ByVal CLIENT_ADVISED_ASSESSMENT_DATE As Global.System.Nullable(Of Date),  _
                    ByVal CLIENT_ADVICED_ASSESSMENT_NOTE As String,  _
                    ByVal CLIENT_ADVICED_ASSESSMENT_DETAIL As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_NP_NOTES As String,  _
                    ByVal CLIENT_PP_NOTES As String,  _
                    ByVal CLIENT_DD_NOTES As String,  _
                    ByVal CLIENT_IS_ASSESS_CHECKED As Global.System.Nullable(Of Boolean),  _
                    ByVal MAIN_THERAPY_ID As Global.System.Nullable(Of Decimal),  _
                    ByVal MAIN_THERAPY_NAME As String) As Integer
            If (CLIENT_NO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(CLIENT_NO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_COMORBIDITY.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(CLIENT_COMORBIDITY.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CLINICAL_AUDIT.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(CLIENT_CLINICAL_AUDIT.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_POVERTY_CARD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(CLIENT_POVERTY_CARD.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_POVERTY_OTHERS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(CLIENT_POVERTY_OTHERS,String)
            End If
            If (CLIENT_UNIT_ALL_1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(CLIENT_UNIT_ALL_1.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_UNIT_ALL_2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(CLIENT_UNIT_ALL_2.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_SOCIAL_SERVICETYPE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(CLIENT_SOCIAL_SERVICETYPE,String)
            End If
            If (CLIENT_REFER_TO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(CLIENT_REFER_TO,String)
            End If
            If (CLIENT_SOCIAL_WORKER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(CLIENT_SOCIAL_WORKER,String)
            End If
            If (CLIENT_CC_NP_FIT.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(CLIENT_CC_NP_FIT.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_NP_JERK.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(CLIENT_CC_NP_JERK.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_NP_BSPELLS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(CLIENT_CC_NP_BSPELLS.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_NP_HSHAKING.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(CLIENT_CC_NP_HSHAKING.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_NP_EYE_BLINK.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(CLIENT_CC_NP_EYE_BLINK.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_NP_OS_WEAK.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(CLIENT_CC_NP_OS_WEAK.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_NP_OTHER.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(CLIENT_CC_NP_OTHER.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_PP_HEADACHE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(CLIENT_CC_PP_HEADACHE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_PP_FEAR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(CLIENT_CC_PP_FEAR.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_PP_THINK.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(CLIENT_CC_PP_THINK.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_PP_WORRY.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(CLIENT_CC_PP_WORRY.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_PP_STEAL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(CLIENT_CC_PP_STEAL.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_PP_DISOBE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(CLIENT_CC_PP_DISOBE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_PP_LIE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(CLIENT_CC_PP_LIE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_PP_ANGRY.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(CLIENT_CC_PP_ANGRY.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_PP_IRRIT.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(CLIENT_CC_PP_IRRIT.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_PP_SDIFFICULTY.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(CLIENT_CC_PP_SDIFFICULTY.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_PP_FAINTING.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(CLIENT_CC_PP_FAINTING.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_PP_OTHER.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(CLIENT_CC_PP_OTHER.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_MAJOR_TALK.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(CLIENT_CC_MAJOR_TALK.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_MAJOR_LAUGH.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(CLIENT_CC_MAJOR_LAUGH.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_MAJOR_STRAIGHT.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(CLIENT_CC_MAJOR_STRAIGHT.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_MAJOR_AGGR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(CLIENT_CC_MAJOR_AGGR.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_MAJOR_SDISTURB.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(CLIENT_CC_MAJOR_SDISTURB.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_MAJOR_APPETITE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(CLIENT_CC_MAJOR_APPETITE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_MAJOR_SHYNESS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(CLIENT_CC_MAJOR_SHYNESS.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_MAJOR_BREAK.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(CLIENT_CC_MAJOR_BREAK.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_MAJOR_GOAWAY.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(CLIENT_CC_MAJOR_GOAWAY.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_MAJOR_OTHER.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(CLIENT_CC_MAJOR_OTHER.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_DD_NOTALK.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(CLIENT_CC_DD_NOTALK.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_DD_NOWALK.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(CLIENT_CC_DD_NOWALK.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_DD_PLAYALONE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(CLIENT_CC_DD_PLAYALONE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_DD_BEAT.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(CLIENT_CC_DD_BEAT.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_DD_NORESPOND.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(CLIENT_CC_DD_NORESPOND.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_DD_TIP.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(CLIENT_CC_DD_TIP.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_DD_POORMEM.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(CLIENT_CC_DD_POORMEM.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_DD_POORUNDER.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(CLIENT_CC_DD_POORUNDER.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_DD_POORSTUDY.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(CLIENT_CC_DD_POORSTUDY.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_DD_THROWING.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(CLIENT_CC_DD_THROWING.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_DD_DROOLING.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(49).Value = CType(CLIENT_CC_DD_DROOLING.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_DD_NONECK.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(50).Value = CType(CLIENT_CC_DD_NONECK.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_DD_OTHER.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(51).Value = CType(CLIENT_CC_DD_OTHER.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_PSYCHIATRIC.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(52).Value = CType(CLIENT_PSYCHIATRIC.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_NEUROLOGICAL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(53).Value = CType(CLIENT_NEUROLOGICAL.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(53).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_DDISORDER.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(54).Value = CType(CLIENT_DDISORDER.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_PSYCHOLOGICAL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(55).Value = CType(CLIENT_PSYCHOLOGICAL.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_ADVISED_ASSESSMENT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(56).Value = CType(CLIENT_ADVISED_ASSESSMENT,String)
            End If
            If (CLIENT_ADVISED_ASSESSMENT_DATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(57).Value = CType(CLIENT_ADVISED_ASSESSMENT_DATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_ADVICED_ASSESSMENT_NOTE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(58).Value = CType(CLIENT_ADVICED_ASSESSMENT_NOTE,String)
            End If
            If (CLIENT_ADVICED_ASSESSMENT_DETAIL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(59).Value = CType(CLIENT_ADVICED_ASSESSMENT_DETAIL.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(59).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_NP_NOTES Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(60).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(60).Value = CType(CLIENT_NP_NOTES,String)
            End If
            If (CLIENT_PP_NOTES Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(61).Value = CType(CLIENT_PP_NOTES,String)
            End If
            If (CLIENT_DD_NOTES Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(62).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(62).Value = CType(CLIENT_DD_NOTES,String)
            End If
            If (CLIENT_IS_ASSESS_CHECKED.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(63).Value = CType(CLIENT_IS_ASSESS_CHECKED.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(63).Value = Global.System.DBNull.Value
            End If
            If (MAIN_THERAPY_ID.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(64).Value = CType(MAIN_THERAPY_ID.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(64).Value = Global.System.DBNull.Value
            End If
            If (MAIN_THERAPY_NAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(65).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(65).Value = CType(MAIN_THERAPY_NAME,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CLIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_COMORBIDITY As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CLINICAL_AUDIT As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_POVERTY_CARD As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_POVERTY_OTHERS As String,  _
                    ByVal CLIENT_UNIT_ALL_1 As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_UNIT_ALL_2 As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_SOCIAL_SERVICETYPE As String,  _
                    ByVal CLIENT_REFER_TO As String,  _
                    ByVal CLIENT_SOCIAL_WORKER As String,  _
                    ByVal CLIENT_CC_NP_FIT As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_NP_JERK As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_NP_BSPELLS As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_NP_HSHAKING As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_NP_EYE_BLINK As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_NP_OS_WEAK As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_NP_OTHER As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_PP_HEADACHE As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_PP_FEAR As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_PP_THINK As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_PP_WORRY As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_PP_STEAL As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_PP_DISOBE As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_PP_LIE As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_PP_ANGRY As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_PP_IRRIT As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_PP_SDIFFICULTY As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_PP_FAINTING As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_PP_OTHER As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_MAJOR_TALK As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_MAJOR_LAUGH As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_MAJOR_STRAIGHT As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_MAJOR_AGGR As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_MAJOR_SDISTURB As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_MAJOR_APPETITE As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_MAJOR_SHYNESS As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_MAJOR_BREAK As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_MAJOR_GOAWAY As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_MAJOR_OTHER As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_DD_NOTALK As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_DD_NOWALK As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_DD_PLAYALONE As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_DD_BEAT As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_DD_NORESPOND As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_DD_TIP As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_DD_POORMEM As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_DD_POORUNDER As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_DD_POORSTUDY As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_DD_THROWING As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_DD_DROOLING As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_DD_NONECK As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_DD_OTHER As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_PSYCHIATRIC As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_NEUROLOGICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_DDISORDER As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_PSYCHOLOGICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_ADVISED_ASSESSMENT As String,  _
                    ByVal CLIENT_ADVISED_ASSESSMENT_DATE As Global.System.Nullable(Of Date),  _
                    ByVal CLIENT_ADVICED_ASSESSMENT_NOTE As String,  _
                    ByVal CLIENT_ADVICED_ASSESSMENT_DETAIL As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_NP_NOTES As String,  _
                    ByVal CLIENT_PP_NOTES As String,  _
                    ByVal CLIENT_DD_NOTES As String,  _
                    ByVal CLIENT_IS_ASSESS_CHECKED As Global.System.Nullable(Of Boolean),  _
                    ByVal MAIN_THERAPY_ID As Global.System.Nullable(Of Decimal),  _
                    ByVal MAIN_THERAPY_NAME As String,  _
                    ByVal Original_CLIENT_SOCIAL_ID As Decimal,  _
                    ByVal Original_CLIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CLIENT_COMORBIDITY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CLINICAL_AUDIT As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_POVERTY_CARD As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_POVERTY_OTHERS As String,  _
                    ByVal Original_CLIENT_UNIT_ALL_1 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CLIENT_UNIT_ALL_2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CLIENT_SOCIAL_SERVICETYPE As String,  _
                    ByVal Original_CLIENT_REFER_TO As String,  _
                    ByVal Original_CLIENT_SOCIAL_WORKER As String,  _
                    ByVal Original_CLIENT_CC_NP_FIT As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_NP_JERK As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_NP_BSPELLS As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_NP_HSHAKING As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_NP_EYE_BLINK As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_NP_OS_WEAK As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_NP_OTHER As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_PP_HEADACHE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_PP_FEAR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_PP_THINK As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_PP_WORRY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_PP_STEAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_PP_DISOBE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_PP_LIE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_PP_ANGRY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_PP_IRRIT As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_PP_SDIFFICULTY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_PP_FAINTING As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_PP_OTHER As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_MAJOR_TALK As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_MAJOR_LAUGH As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_MAJOR_STRAIGHT As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_MAJOR_AGGR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_MAJOR_SDISTURB As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_MAJOR_APPETITE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_MAJOR_SHYNESS As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_MAJOR_BREAK As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_MAJOR_GOAWAY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_MAJOR_OTHER As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_DD_NOTALK As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_DD_NOWALK As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_DD_PLAYALONE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_DD_BEAT As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_DD_NORESPOND As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_DD_TIP As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_DD_POORMEM As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_DD_POORUNDER As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_DD_POORSTUDY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_DD_THROWING As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_DD_DROOLING As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_DD_NONECK As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_DD_OTHER As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_PSYCHIATRIC As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_NEUROLOGICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_DDISORDER As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_PSYCHOLOGICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_ADVISED_ASSESSMENT As String,  _
                    ByVal Original_CLIENT_ADVISED_ASSESSMENT_DATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_CLIENT_ADVICED_ASSESSMENT_NOTE As String,  _
                    ByVal Original_CLIENT_ADVICED_ASSESSMENT_DETAIL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_NP_NOTES As String,  _
                    ByVal Original_CLIENT_PP_NOTES As String,  _
                    ByVal Original_CLIENT_DD_NOTES As String,  _
                    ByVal Original_CLIENT_IS_ASSESS_CHECKED As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_MAIN_THERAPY_ID As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_MAIN_THERAPY_NAME As String,  _
                    ByVal CLIENT_SOCIAL_ID As Decimal) As Integer
            If (CLIENT_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(CLIENT_NO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_COMORBIDITY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(CLIENT_COMORBIDITY.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CLINICAL_AUDIT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(CLIENT_CLINICAL_AUDIT.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_POVERTY_CARD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(CLIENT_POVERTY_CARD.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_POVERTY_OTHERS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(CLIENT_POVERTY_OTHERS,String)
            End If
            If (CLIENT_UNIT_ALL_1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(CLIENT_UNIT_ALL_1.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_UNIT_ALL_2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(CLIENT_UNIT_ALL_2.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_SOCIAL_SERVICETYPE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(CLIENT_SOCIAL_SERVICETYPE,String)
            End If
            If (CLIENT_REFER_TO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(CLIENT_REFER_TO,String)
            End If
            If (CLIENT_SOCIAL_WORKER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(CLIENT_SOCIAL_WORKER,String)
            End If
            If (CLIENT_CC_NP_FIT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(CLIENT_CC_NP_FIT.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_NP_JERK.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(CLIENT_CC_NP_JERK.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_NP_BSPELLS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(CLIENT_CC_NP_BSPELLS.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_NP_HSHAKING.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(CLIENT_CC_NP_HSHAKING.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_NP_EYE_BLINK.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(CLIENT_CC_NP_EYE_BLINK.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_NP_OS_WEAK.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(CLIENT_CC_NP_OS_WEAK.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_NP_OTHER.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(CLIENT_CC_NP_OTHER.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_PP_HEADACHE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(CLIENT_CC_PP_HEADACHE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_PP_FEAR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(CLIENT_CC_PP_FEAR.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_PP_THINK.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(CLIENT_CC_PP_THINK.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_PP_WORRY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(CLIENT_CC_PP_WORRY.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_PP_STEAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(CLIENT_CC_PP_STEAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_PP_DISOBE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(CLIENT_CC_PP_DISOBE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_PP_LIE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(CLIENT_CC_PP_LIE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_PP_ANGRY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(CLIENT_CC_PP_ANGRY.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_PP_IRRIT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(CLIENT_CC_PP_IRRIT.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_PP_SDIFFICULTY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(CLIENT_CC_PP_SDIFFICULTY.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_PP_FAINTING.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(CLIENT_CC_PP_FAINTING.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_PP_OTHER.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(CLIENT_CC_PP_OTHER.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_MAJOR_TALK.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(CLIENT_CC_MAJOR_TALK.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_MAJOR_LAUGH.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(CLIENT_CC_MAJOR_LAUGH.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_MAJOR_STRAIGHT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(CLIENT_CC_MAJOR_STRAIGHT.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_MAJOR_AGGR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(CLIENT_CC_MAJOR_AGGR.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_MAJOR_SDISTURB.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(CLIENT_CC_MAJOR_SDISTURB.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_MAJOR_APPETITE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(CLIENT_CC_MAJOR_APPETITE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_MAJOR_SHYNESS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(CLIENT_CC_MAJOR_SHYNESS.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_MAJOR_BREAK.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(CLIENT_CC_MAJOR_BREAK.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_MAJOR_GOAWAY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(CLIENT_CC_MAJOR_GOAWAY.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_MAJOR_OTHER.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(CLIENT_CC_MAJOR_OTHER.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_DD_NOTALK.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(CLIENT_CC_DD_NOTALK.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_DD_NOWALK.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(CLIENT_CC_DD_NOWALK.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_DD_PLAYALONE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(CLIENT_CC_DD_PLAYALONE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_DD_BEAT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(CLIENT_CC_DD_BEAT.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_DD_NORESPOND.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(CLIENT_CC_DD_NORESPOND.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_DD_TIP.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(CLIENT_CC_DD_TIP.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_DD_POORMEM.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(CLIENT_CC_DD_POORMEM.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_DD_POORUNDER.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(CLIENT_CC_DD_POORUNDER.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_DD_POORSTUDY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(CLIENT_CC_DD_POORSTUDY.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_DD_THROWING.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(CLIENT_CC_DD_THROWING.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_DD_DROOLING.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(CLIENT_CC_DD_DROOLING.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_DD_NONECK.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(CLIENT_CC_DD_NONECK.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_CC_DD_OTHER.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(CLIENT_CC_DD_OTHER.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_PSYCHIATRIC.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(CLIENT_PSYCHIATRIC.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_NEUROLOGICAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(CLIENT_NEUROLOGICAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_DDISORDER.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(CLIENT_DDISORDER.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_PSYCHOLOGICAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(CLIENT_PSYCHOLOGICAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_ADVISED_ASSESSMENT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(CLIENT_ADVISED_ASSESSMENT,String)
            End If
            If (CLIENT_ADVISED_ASSESSMENT_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(CLIENT_ADVISED_ASSESSMENT_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_ADVICED_ASSESSMENT_NOTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(CLIENT_ADVICED_ASSESSMENT_NOTE,String)
            End If
            If (CLIENT_ADVICED_ASSESSMENT_DETAIL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(CLIENT_ADVICED_ASSESSMENT_DETAIL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(59).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_NP_NOTES Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(60).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(CLIENT_NP_NOTES,String)
            End If
            If (CLIENT_PP_NOTES Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(CLIENT_PP_NOTES,String)
            End If
            If (CLIENT_DD_NOTES Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(62).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(CLIENT_DD_NOTES,String)
            End If
            If (CLIENT_IS_ASSESS_CHECKED.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(CLIENT_IS_ASSESS_CHECKED.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(63).Value = Global.System.DBNull.Value
            End If
            If (MAIN_THERAPY_ID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(MAIN_THERAPY_ID.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(64).Value = Global.System.DBNull.Value
            End If
            If (MAIN_THERAPY_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(65).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(MAIN_THERAPY_NAME,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(66).Value = CType(Original_CLIENT_SOCIAL_ID,Decimal)
            If (Original_CLIENT_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(Original_CLIENT_NO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(68).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_COMORBIDITY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(Original_CLIENT_COMORBIDITY.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CLINICAL_AUDIT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(Original_CLIENT_CLINICAL_AUDIT.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_POVERTY_CARD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(Original_CLIENT_POVERTY_CARD.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_POVERTY_OTHERS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(76).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(Original_CLIENT_POVERTY_OTHERS,String)
            End If
            If (Original_CLIENT_UNIT_ALL_1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(Original_CLIENT_UNIT_ALL_1.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(78).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_UNIT_ALL_2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(Original_CLIENT_UNIT_ALL_2.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(80).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_SOCIAL_SERVICETYPE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(Original_CLIENT_SOCIAL_SERVICETYPE,String)
            End If
            If (Original_CLIENT_REFER_TO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(Original_CLIENT_REFER_TO,String)
            End If
            If (Original_CLIENT_SOCIAL_WORKER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(Original_CLIENT_SOCIAL_WORKER,String)
            End If
            If (Original_CLIENT_CC_NP_FIT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(Original_CLIENT_CC_NP_FIT.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(88).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_NP_JERK.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(Original_CLIENT_CC_NP_JERK.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_NP_BSPELLS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(Original_CLIENT_CC_NP_BSPELLS.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(92).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_NP_HSHAKING.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(Original_CLIENT_CC_NP_HSHAKING.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(94).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_NP_EYE_BLINK.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(Original_CLIENT_CC_NP_EYE_BLINK.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(96).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_NP_OS_WEAK.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(Original_CLIENT_CC_NP_OS_WEAK.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(98).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_NP_OTHER.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(Original_CLIENT_CC_NP_OTHER.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(100).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_PP_HEADACHE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(Original_CLIENT_CC_PP_HEADACHE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(102).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_PP_FEAR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(Original_CLIENT_CC_PP_FEAR.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(104).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_PP_THINK.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(106).Value = CType(Original_CLIENT_CC_PP_THINK.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(106).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_PP_WORRY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(107).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(108).Value = CType(Original_CLIENT_CC_PP_WORRY.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(107).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(108).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_PP_STEAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(109).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(110).Value = CType(Original_CLIENT_CC_PP_STEAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(109).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(110).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_PP_DISOBE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(111).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(112).Value = CType(Original_CLIENT_CC_PP_DISOBE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(111).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(112).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_PP_LIE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(113).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(114).Value = CType(Original_CLIENT_CC_PP_LIE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(113).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(114).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_PP_ANGRY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(115).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(116).Value = CType(Original_CLIENT_CC_PP_ANGRY.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(115).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(116).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_PP_IRRIT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(117).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(118).Value = CType(Original_CLIENT_CC_PP_IRRIT.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(117).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(118).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_PP_SDIFFICULTY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(119).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(120).Value = CType(Original_CLIENT_CC_PP_SDIFFICULTY.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(119).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(120).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_PP_FAINTING.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(121).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(122).Value = CType(Original_CLIENT_CC_PP_FAINTING.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(121).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(122).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_PP_OTHER.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(123).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(124).Value = CType(Original_CLIENT_CC_PP_OTHER.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(123).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(124).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_MAJOR_TALK.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(125).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(126).Value = CType(Original_CLIENT_CC_MAJOR_TALK.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(125).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(126).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_MAJOR_LAUGH.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(127).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(128).Value = CType(Original_CLIENT_CC_MAJOR_LAUGH.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(127).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(128).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_MAJOR_STRAIGHT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(129).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(130).Value = CType(Original_CLIENT_CC_MAJOR_STRAIGHT.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(129).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(130).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_MAJOR_AGGR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(131).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(132).Value = CType(Original_CLIENT_CC_MAJOR_AGGR.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(131).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(132).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_MAJOR_SDISTURB.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(133).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(134).Value = CType(Original_CLIENT_CC_MAJOR_SDISTURB.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(133).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(134).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_MAJOR_APPETITE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(135).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(136).Value = CType(Original_CLIENT_CC_MAJOR_APPETITE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(135).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(136).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_MAJOR_SHYNESS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(137).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(138).Value = CType(Original_CLIENT_CC_MAJOR_SHYNESS.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(137).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(138).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_MAJOR_BREAK.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(139).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(140).Value = CType(Original_CLIENT_CC_MAJOR_BREAK.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(139).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(140).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_MAJOR_GOAWAY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(141).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(142).Value = CType(Original_CLIENT_CC_MAJOR_GOAWAY.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(141).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(142).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_MAJOR_OTHER.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(143).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(144).Value = CType(Original_CLIENT_CC_MAJOR_OTHER.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(143).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(144).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_DD_NOTALK.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(145).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(146).Value = CType(Original_CLIENT_CC_DD_NOTALK.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(145).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(146).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_DD_NOWALK.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(147).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(148).Value = CType(Original_CLIENT_CC_DD_NOWALK.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(147).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(148).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_DD_PLAYALONE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(149).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(150).Value = CType(Original_CLIENT_CC_DD_PLAYALONE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(149).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(150).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_DD_BEAT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(151).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(152).Value = CType(Original_CLIENT_CC_DD_BEAT.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(151).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(152).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_DD_NORESPOND.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(153).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(154).Value = CType(Original_CLIENT_CC_DD_NORESPOND.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(153).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(154).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_DD_TIP.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(155).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(156).Value = CType(Original_CLIENT_CC_DD_TIP.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(155).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(156).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_DD_POORMEM.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(157).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(158).Value = CType(Original_CLIENT_CC_DD_POORMEM.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(157).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(158).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_DD_POORUNDER.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(159).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(160).Value = CType(Original_CLIENT_CC_DD_POORUNDER.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(159).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(160).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_DD_POORSTUDY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(161).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(162).Value = CType(Original_CLIENT_CC_DD_POORSTUDY.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(161).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(162).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_DD_THROWING.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(163).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(164).Value = CType(Original_CLIENT_CC_DD_THROWING.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(163).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(164).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_DD_DROOLING.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(165).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(166).Value = CType(Original_CLIENT_CC_DD_DROOLING.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(165).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(166).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_DD_NONECK.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(167).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(168).Value = CType(Original_CLIENT_CC_DD_NONECK.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(167).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(168).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_CC_DD_OTHER.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(169).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(170).Value = CType(Original_CLIENT_CC_DD_OTHER.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(169).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(170).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_PSYCHIATRIC.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(171).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(172).Value = CType(Original_CLIENT_PSYCHIATRIC.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(171).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(172).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_NEUROLOGICAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(173).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(174).Value = CType(Original_CLIENT_NEUROLOGICAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(173).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(174).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_DDISORDER.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(175).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(176).Value = CType(Original_CLIENT_DDISORDER.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(175).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(176).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_PSYCHOLOGICAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(177).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(178).Value = CType(Original_CLIENT_PSYCHOLOGICAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(177).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(178).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_ADVISED_ASSESSMENT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(179).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(180).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(179).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(180).Value = CType(Original_CLIENT_ADVISED_ASSESSMENT,String)
            End If
            If (Original_CLIENT_ADVISED_ASSESSMENT_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(181).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(182).Value = CType(Original_CLIENT_ADVISED_ASSESSMENT_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(181).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(182).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_ADVICED_ASSESSMENT_NOTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(183).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(184).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(183).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(184).Value = CType(Original_CLIENT_ADVICED_ASSESSMENT_NOTE,String)
            End If
            If (Original_CLIENT_ADVICED_ASSESSMENT_DETAIL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(185).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(186).Value = CType(Original_CLIENT_ADVICED_ASSESSMENT_DETAIL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(185).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(186).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_NP_NOTES Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(187).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(188).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(187).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(188).Value = CType(Original_CLIENT_NP_NOTES,String)
            End If
            If (Original_CLIENT_PP_NOTES Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(189).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(190).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(189).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(190).Value = CType(Original_CLIENT_PP_NOTES,String)
            End If
            If (Original_CLIENT_DD_NOTES Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(191).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(192).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(191).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(192).Value = CType(Original_CLIENT_DD_NOTES,String)
            End If
            If (Original_CLIENT_IS_ASSESS_CHECKED.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(193).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(194).Value = CType(Original_CLIENT_IS_ASSESS_CHECKED.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(193).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(194).Value = Global.System.DBNull.Value
            End If
            If (Original_MAIN_THERAPY_ID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(195).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(196).Value = CType(Original_MAIN_THERAPY_ID.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(195).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(196).Value = Global.System.DBNull.Value
            End If
            If (Original_MAIN_THERAPY_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(197).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(198).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(197).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(198).Value = CType(Original_MAIN_THERAPY_NAME,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(199).Value = CType(CLIENT_SOCIAL_ID,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CLIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_COMORBIDITY As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CLINICAL_AUDIT As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_POVERTY_CARD As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_POVERTY_OTHERS As String,  _
                    ByVal CLIENT_UNIT_ALL_1 As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_UNIT_ALL_2 As Global.System.Nullable(Of Decimal),  _
                    ByVal CLIENT_SOCIAL_SERVICETYPE As String,  _
                    ByVal CLIENT_REFER_TO As String,  _
                    ByVal CLIENT_SOCIAL_WORKER As String,  _
                    ByVal CLIENT_CC_NP_FIT As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_NP_JERK As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_NP_BSPELLS As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_NP_HSHAKING As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_NP_EYE_BLINK As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_NP_OS_WEAK As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_NP_OTHER As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_PP_HEADACHE As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_PP_FEAR As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_PP_THINK As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_PP_WORRY As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_PP_STEAL As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_PP_DISOBE As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_PP_LIE As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_PP_ANGRY As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_PP_IRRIT As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_PP_SDIFFICULTY As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_PP_FAINTING As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_PP_OTHER As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_MAJOR_TALK As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_MAJOR_LAUGH As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_MAJOR_STRAIGHT As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_MAJOR_AGGR As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_MAJOR_SDISTURB As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_MAJOR_APPETITE As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_MAJOR_SHYNESS As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_MAJOR_BREAK As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_MAJOR_GOAWAY As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_MAJOR_OTHER As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_DD_NOTALK As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_DD_NOWALK As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_DD_PLAYALONE As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_DD_BEAT As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_DD_NORESPOND As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_DD_TIP As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_DD_POORMEM As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_DD_POORUNDER As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_DD_POORSTUDY As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_DD_THROWING As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_DD_DROOLING As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_DD_NONECK As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_CC_DD_OTHER As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_PSYCHIATRIC As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_NEUROLOGICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_DDISORDER As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_PSYCHOLOGICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_ADVISED_ASSESSMENT As String,  _
                    ByVal CLIENT_ADVISED_ASSESSMENT_DATE As Global.System.Nullable(Of Date),  _
                    ByVal CLIENT_ADVICED_ASSESSMENT_NOTE As String,  _
                    ByVal CLIENT_ADVICED_ASSESSMENT_DETAIL As Global.System.Nullable(Of Boolean),  _
                    ByVal CLIENT_NP_NOTES As String,  _
                    ByVal CLIENT_PP_NOTES As String,  _
                    ByVal CLIENT_DD_NOTES As String,  _
                    ByVal CLIENT_IS_ASSESS_CHECKED As Global.System.Nullable(Of Boolean),  _
                    ByVal MAIN_THERAPY_ID As Global.System.Nullable(Of Decimal),  _
                    ByVal MAIN_THERAPY_NAME As String,  _
                    ByVal Original_CLIENT_SOCIAL_ID As Decimal,  _
                    ByVal Original_CLIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CLIENT_COMORBIDITY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CLINICAL_AUDIT As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_POVERTY_CARD As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_POVERTY_OTHERS As String,  _
                    ByVal Original_CLIENT_UNIT_ALL_1 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CLIENT_UNIT_ALL_2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CLIENT_SOCIAL_SERVICETYPE As String,  _
                    ByVal Original_CLIENT_REFER_TO As String,  _
                    ByVal Original_CLIENT_SOCIAL_WORKER As String,  _
                    ByVal Original_CLIENT_CC_NP_FIT As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_NP_JERK As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_NP_BSPELLS As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_NP_HSHAKING As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_NP_EYE_BLINK As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_NP_OS_WEAK As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_NP_OTHER As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_PP_HEADACHE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_PP_FEAR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_PP_THINK As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_PP_WORRY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_PP_STEAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_PP_DISOBE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_PP_LIE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_PP_ANGRY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_PP_IRRIT As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_PP_SDIFFICULTY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_PP_FAINTING As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_PP_OTHER As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_MAJOR_TALK As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_MAJOR_LAUGH As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_MAJOR_STRAIGHT As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_MAJOR_AGGR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_MAJOR_SDISTURB As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_MAJOR_APPETITE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_MAJOR_SHYNESS As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_MAJOR_BREAK As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_MAJOR_GOAWAY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_MAJOR_OTHER As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_DD_NOTALK As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_DD_NOWALK As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_DD_PLAYALONE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_DD_BEAT As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_DD_NORESPOND As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_DD_TIP As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_DD_POORMEM As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_DD_POORUNDER As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_DD_POORSTUDY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_DD_THROWING As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_DD_DROOLING As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_DD_NONECK As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_CC_DD_OTHER As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_PSYCHIATRIC As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_NEUROLOGICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_DDISORDER As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_PSYCHOLOGICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_ADVISED_ASSESSMENT As String,  _
                    ByVal Original_CLIENT_ADVISED_ASSESSMENT_DATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_CLIENT_ADVICED_ASSESSMENT_NOTE As String,  _
                    ByVal Original_CLIENT_ADVICED_ASSESSMENT_DETAIL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CLIENT_NP_NOTES As String,  _
                    ByVal Original_CLIENT_PP_NOTES As String,  _
                    ByVal Original_CLIENT_DD_NOTES As String,  _
                    ByVal Original_CLIENT_IS_ASSESS_CHECKED As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_MAIN_THERAPY_ID As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_MAIN_THERAPY_NAME As String) As Integer
            Return Me.Update(CLIENT_NO, CLIENT_COMORBIDITY, CLIENT_CLINICAL_AUDIT, CLIENT_POVERTY_CARD, CLIENT_POVERTY_OTHERS, CLIENT_UNIT_ALL_1, CLIENT_UNIT_ALL_2, CLIENT_SOCIAL_SERVICETYPE, CLIENT_REFER_TO, CLIENT_SOCIAL_WORKER, CLIENT_CC_NP_FIT, CLIENT_CC_NP_JERK, CLIENT_CC_NP_BSPELLS, CLIENT_CC_NP_HSHAKING, CLIENT_CC_NP_EYE_BLINK, CLIENT_CC_NP_OS_WEAK, CLIENT_CC_NP_OTHER, CLIENT_CC_PP_HEADACHE, CLIENT_CC_PP_FEAR, CLIENT_CC_PP_THINK, CLIENT_CC_PP_WORRY, CLIENT_CC_PP_STEAL, CLIENT_CC_PP_DISOBE, CLIENT_CC_PP_LIE, CLIENT_CC_PP_ANGRY, CLIENT_CC_PP_IRRIT, CLIENT_CC_PP_SDIFFICULTY, CLIENT_CC_PP_FAINTING, CLIENT_CC_PP_OTHER, CLIENT_CC_MAJOR_TALK, CLIENT_CC_MAJOR_LAUGH, CLIENT_CC_MAJOR_STRAIGHT, CLIENT_CC_MAJOR_AGGR, CLIENT_CC_MAJOR_SDISTURB, CLIENT_CC_MAJOR_APPETITE, CLIENT_CC_MAJOR_SHYNESS, CLIENT_CC_MAJOR_BREAK, CLIENT_CC_MAJOR_GOAWAY, CLIENT_CC_MAJOR_OTHER, CLIENT_CC_DD_NOTALK, CLIENT_CC_DD_NOWALK, CLIENT_CC_DD_PLAYALONE, CLIENT_CC_DD_BEAT, CLIENT_CC_DD_NORESPOND, CLIENT_CC_DD_TIP, CLIENT_CC_DD_POORMEM, CLIENT_CC_DD_POORUNDER, CLIENT_CC_DD_POORSTUDY, CLIENT_CC_DD_THROWING, CLIENT_CC_DD_DROOLING, CLIENT_CC_DD_NONECK, CLIENT_CC_DD_OTHER, CLIENT_PSYCHIATRIC, CLIENT_NEUROLOGICAL, CLIENT_DDISORDER, CLIENT_PSYCHOLOGICAL, CLIENT_ADVISED_ASSESSMENT, CLIENT_ADVISED_ASSESSMENT_DATE, CLIENT_ADVICED_ASSESSMENT_NOTE, CLIENT_ADVICED_ASSESSMENT_DETAIL, CLIENT_NP_NOTES, CLIENT_PP_NOTES, CLIENT_DD_NOTES, CLIENT_IS_ASSESS_CHECKED, MAIN_THERAPY_ID, MAIN_THERAPY_NAME, Original_CLIENT_SOCIAL_ID, Original_CLIENT_NO, Original_CLIENT_COMORBIDITY, Original_CLIENT_CLINICAL_AUDIT, Original_CLIENT_POVERTY_CARD, Original_CLIENT_POVERTY_OTHERS, Original_CLIENT_UNIT_ALL_1, Original_CLIENT_UNIT_ALL_2, Original_CLIENT_SOCIAL_SERVICETYPE, Original_CLIENT_REFER_TO, Original_CLIENT_SOCIAL_WORKER, Original_CLIENT_CC_NP_FIT, Original_CLIENT_CC_NP_JERK, Original_CLIENT_CC_NP_BSPELLS, Original_CLIENT_CC_NP_HSHAKING, Original_CLIENT_CC_NP_EYE_BLINK, Original_CLIENT_CC_NP_OS_WEAK, Original_CLIENT_CC_NP_OTHER, Original_CLIENT_CC_PP_HEADACHE, Original_CLIENT_CC_PP_FEAR, Original_CLIENT_CC_PP_THINK, Original_CLIENT_CC_PP_WORRY, Original_CLIENT_CC_PP_STEAL, Original_CLIENT_CC_PP_DISOBE, Original_CLIENT_CC_PP_LIE, Original_CLIENT_CC_PP_ANGRY, Original_CLIENT_CC_PP_IRRIT, Original_CLIENT_CC_PP_SDIFFICULTY, Original_CLIENT_CC_PP_FAINTING, Original_CLIENT_CC_PP_OTHER, Original_CLIENT_CC_MAJOR_TALK, Original_CLIENT_CC_MAJOR_LAUGH, Original_CLIENT_CC_MAJOR_STRAIGHT, Original_CLIENT_CC_MAJOR_AGGR, Original_CLIENT_CC_MAJOR_SDISTURB, Original_CLIENT_CC_MAJOR_APPETITE, Original_CLIENT_CC_MAJOR_SHYNESS, Original_CLIENT_CC_MAJOR_BREAK, Original_CLIENT_CC_MAJOR_GOAWAY, Original_CLIENT_CC_MAJOR_OTHER, Original_CLIENT_CC_DD_NOTALK, Original_CLIENT_CC_DD_NOWALK, Original_CLIENT_CC_DD_PLAYALONE, Original_CLIENT_CC_DD_BEAT, Original_CLIENT_CC_DD_NORESPOND, Original_CLIENT_CC_DD_TIP, Original_CLIENT_CC_DD_POORMEM, Original_CLIENT_CC_DD_POORUNDER, Original_CLIENT_CC_DD_POORSTUDY, Original_CLIENT_CC_DD_THROWING, Original_CLIENT_CC_DD_DROOLING, Original_CLIENT_CC_DD_NONECK, Original_CLIENT_CC_DD_OTHER, Original_CLIENT_PSYCHIATRIC, Original_CLIENT_NEUROLOGICAL, Original_CLIENT_DDISORDER, Original_CLIENT_PSYCHOLOGICAL, Original_CLIENT_ADVISED_ASSESSMENT, Original_CLIENT_ADVISED_ASSESSMENT_DATE, Original_CLIENT_ADVICED_ASSESSMENT_NOTE, Original_CLIENT_ADVICED_ASSESSMENT_DETAIL, Original_CLIENT_NP_NOTES, Original_CLIENT_PP_NOTES, Original_CLIENT_DD_NOTES, Original_CLIENT_IS_ASSESS_CHECKED, Original_MAIN_THERAPY_ID, Original_MAIN_THERAPY_NAME, Original_CLIENT_SOCIAL_ID)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function GetMainTherapy(ByVal CLIENT_NO As Global.System.Nullable(Of Decimal)) As Object
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            If (CLIENT_NO.HasValue = true) Then
                command.Parameters(0).Value = CType(CLIENT_NO.Value,Decimal)
            Else
                command.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UpdateAssessment(ByVal CLIENT_ADVISED_ASSESSMENT As String, ByVal CLIENT_ADVISED_ASSESSMENT_DATE As Global.System.Nullable(Of Date), ByVal CLIENT_ADVICED_ASSESSMENT_NOTE As String, ByVal CLIENT_ADVICED_ASSESSMENT_DETAIL As Global.System.Nullable(Of Boolean), ByVal CLIENT_NO As Global.System.Nullable(Of Decimal)) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(2)
            If (CLIENT_ADVISED_ASSESSMENT Is Nothing) Then
                command.Parameters(0).Value = Global.System.DBNull.Value
            Else
                command.Parameters(0).Value = CType(CLIENT_ADVISED_ASSESSMENT,String)
            End If
            If (CLIENT_ADVISED_ASSESSMENT_DATE.HasValue = true) Then
                command.Parameters(1).Value = CType(CLIENT_ADVISED_ASSESSMENT_DATE.Value,Date)
            Else
                command.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_ADVICED_ASSESSMENT_NOTE Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(CLIENT_ADVICED_ASSESSMENT_NOTE,String)
            End If
            If (CLIENT_ADVICED_ASSESSMENT_DETAIL.HasValue = true) Then
                command.Parameters(3).Value = CType(CLIENT_ADVICED_ASSESSMENT_DETAIL.Value,Boolean)
            Else
                command.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_NO.HasValue = true) Then
                command.Parameters(4).Value = CType(CLIENT_NO.Value,Decimal)
            Else
                command.Parameters(4).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UpdateMainTherapy(ByVal MAIN_THERAPY_ID As Global.System.Nullable(Of Decimal), ByVal MAIN_THERAPY_NAME As String, ByVal CLIENT_NO As Global.System.Nullable(Of Decimal)) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(3)
            If (MAIN_THERAPY_ID.HasValue = true) Then
                command.Parameters(0).Value = CType(MAIN_THERAPY_ID.Value,Decimal)
            Else
                command.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (MAIN_THERAPY_NAME Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(MAIN_THERAPY_NAME,String)
            End If
            If (CLIENT_NO.HasValue = true) Then
                command.Parameters(2).Value = CType(CLIENT_NO.Value,Decimal)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class CCAMH_CLIENT_DDISORDERTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "CCAMH_CLIENT_DDISORDER"
            tableMapping.ColumnMappings.Add("SYMPTOM_ID", "SYMPTOM_ID")
            tableMapping.ColumnMappings.Add("SYMPTOM_NAME", "SYMPTOM_NAME")
            tableMapping.ColumnMappings.Add("DESCRIPTION", "DESCRIPTION")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [CCAMH_CLIENT_DDISORDER] WHERE (([SYMPTOM_ID] = @Original_SYMPTOM_ID)"& _ 
                " AND ((@IsNull_SYMPTOM_NAME = 1 AND [SYMPTOM_NAME] IS NULL) OR ([SYMPTOM_NAME] ="& _ 
                " @Original_SYMPTOM_NAME)) AND ((@IsNull_DESCRIPTION = 1 AND [DESCRIPTION] IS NUL"& _ 
                "L) OR ([DESCRIPTION] = @Original_DESCRIPTION)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SYMPTOM_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "SYMPTOM_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SYMPTOM_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SYMPTOM_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DESCRIPTION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [CCAMH_CLIENT_DDISORDER] ([SYMPTOM_NAME], [DESCRIPTION]) VALUES (@SYM"& _ 
                "PTOM_NAME, @DESCRIPTION);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT SYMPTOM_ID, SYMPTOM_NAME, DESCRIPTION FROM CCA"& _ 
                "MH_CLIENT_DDISORDER WHERE (SYMPTOM_ID = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SYMPTOM_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [CCAMH_CLIENT_DDISORDER] SET [SYMPTOM_NAME] = @SYMPTOM_NAME, [DESCRIPTION]"& _ 
                " = @DESCRIPTION WHERE (([SYMPTOM_ID] = @Original_SYMPTOM_ID) AND ((@IsNull_SYMPT"& _ 
                "OM_NAME = 1 AND [SYMPTOM_NAME] IS NULL) OR ([SYMPTOM_NAME] = @Original_SYMPTOM_N"& _ 
                "AME)) AND ((@IsNull_DESCRIPTION = 1 AND [DESCRIPTION] IS NULL) OR ([DESCRIPTION]"& _ 
                " = @Original_DESCRIPTION)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT SYMPTOM_ID, SYMPTOM_NAME, DESCRIPTION FROM "& _ 
                "CCAMH_CLIENT_DDISORDER WHERE (SYMPTOM_ID = @SYMPTOM_ID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SYMPTOM_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SYMPTOM_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "SYMPTOM_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SYMPTOM_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SYMPTOM_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DESCRIPTION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SYMPTOM_ID", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "SYMPTOM_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.KTGSYS.My.MySettings.Default.TakeoDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        SYMPTOM_ID, SYMPTOM_NAME, DESCRIPTION"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            CCAMH_CLIENT"& _ 
                "_DDISORDER"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "INSERT INTO CCAMH_CLIENT_DDISORDER"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (SYMPTOM_NAME, DESCR"& _ 
                "IPTION)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"VALUES        (@SYMPTOM_NAME,@DESCRIPTION); "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT SYMPTOM_ID, SYMPTO"& _ 
                "M_NAME, DESCRIPTION FROM CCAMH_CLIENT_DDISORDER WHERE (SYMPTOM_ID = SCOPE_IDENTI"& _ 
                "TY())"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SYMPTOM_NAME", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 200, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_ClientImpression.CCAMH_CLIENT_DDISORDERDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_ClientImpression.CCAMH_CLIENT_DDISORDERDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_ClientImpression.CCAMH_CLIENT_DDISORDERDataTable = New DS_ClientImpression.CCAMH_CLIENT_DDISORDERDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DS_ClientImpression.CCAMH_CLIENT_DDISORDERDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DS_ClientImpression) As Integer
            Return Me.Adapter.Update(dataSet, "CCAMH_CLIENT_DDISORDER")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_SYMPTOM_ID As Decimal, ByVal Original_SYMPTOM_NAME As String, ByVal Original_DESCRIPTION As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_SYMPTOM_ID,Decimal)
            If (Original_SYMPTOM_NAME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_SYMPTOM_NAME,String)
            End If
            If (Original_DESCRIPTION Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_DESCRIPTION,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal SYMPTOM_NAME As String, ByVal DESCRIPTION As String) As Integer
            If (SYMPTOM_NAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(SYMPTOM_NAME,String)
            End If
            If (DESCRIPTION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(DESCRIPTION,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal SYMPTOM_NAME As String, ByVal DESCRIPTION As String, ByVal Original_SYMPTOM_ID As Decimal, ByVal Original_SYMPTOM_NAME As String, ByVal Original_DESCRIPTION As String, ByVal SYMPTOM_ID As Decimal) As Integer
            If (SYMPTOM_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(SYMPTOM_NAME,String)
            End If
            If (DESCRIPTION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(DESCRIPTION,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Original_SYMPTOM_ID,Decimal)
            If (Original_SYMPTOM_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_SYMPTOM_NAME,String)
            End If
            If (Original_DESCRIPTION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_DESCRIPTION,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(SYMPTOM_ID,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal SYMPTOM_NAME As String, ByVal DESCRIPTION As String, ByVal Original_SYMPTOM_ID As Decimal, ByVal Original_SYMPTOM_NAME As String, ByVal Original_DESCRIPTION As String) As Integer
            Return Me.Update(SYMPTOM_NAME, DESCRIPTION, Original_SYMPTOM_ID, Original_SYMPTOM_NAME, Original_DESCRIPTION, Original_SYMPTOM_ID)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, false)>  _
        Public Overloads Overridable Function InsertQuery(ByVal SYMPTOM_NAME As String, ByVal DESCRIPTION As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            If (SYMPTOM_NAME Is Nothing) Then
                command.Parameters(0).Value = Global.System.DBNull.Value
            Else
                command.Parameters(0).Value = CType(SYMPTOM_NAME,String)
            End If
            If (DESCRIPTION Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(DESCRIPTION,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class CCAMH_DDISORDER_DETAILTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "CCAMH_DDISORDER_DETAIL"
            tableMapping.ColumnMappings.Add("REF_ID", "REF_ID")
            tableMapping.ColumnMappings.Add("CLIENT_NO", "CLIENT_NO")
            tableMapping.ColumnMappings.Add("SYMPTOM_ID", "SYMPTOM_ID")
            tableMapping.ColumnMappings.Add("DESCRIPTION", "DESCRIPTION")
            tableMapping.ColumnMappings.Add("SYMPTOM_NAME", "SYMPTOM_NAME")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [CCAMH_DDISORDER_DETAIL] WHERE (([REF_ID] = @Original_REF_ID) AND ((@"& _ 
                "IsNull_CLIENT_NO = 1 AND [CLIENT_NO] IS NULL) OR ([CLIENT_NO] = @Original_CLIENT"& _ 
                "_NO)) AND ((@IsNull_SYMPTOM_ID = 1 AND [SYMPTOM_ID] IS NULL) OR ([SYMPTOM_ID] = "& _ 
                "@Original_SYMPTOM_ID)) AND ((@IsNull_DESCRIPTION = 1 AND [DESCRIPTION] IS NULL) "& _ 
                "OR ([DESCRIPTION] = @Original_DESCRIPTION)) AND ((@IsNull_SYMPTOM_NAME = 1 AND ["& _ 
                "SYMPTOM_NAME] IS NULL) OR ([SYMPTOM_NAME] = @Original_SYMPTOM_NAME)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REF_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "REF_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SYMPTOM_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_ID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SYMPTOM_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "SYMPTOM_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DESCRIPTION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SYMPTOM_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SYMPTOM_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [CCAMH_DDISORDER_DETAIL] ([CLIENT_NO], [SYMPTOM_ID], [DESCRIPTION], ["& _ 
                "SYMPTOM_NAME]) VALUES (@CLIENT_NO, @SYMPTOM_ID, @DESCRIPTION, @SYMPTOM_NAME);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"S"& _ 
                "ELECT REF_ID, CLIENT_NO, SYMPTOM_ID, DESCRIPTION, SYMPTOM_NAME FROM CCAMH_DDISOR"& _ 
                "DER_DETAIL WHERE (REF_ID = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SYMPTOM_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "SYMPTOM_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SYMPTOM_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [CCAMH_DDISORDER_DETAIL] SET [CLIENT_NO] = @CLIENT_NO, [SYMPTOM_ID] = @SYM"& _ 
                "PTOM_ID, [DESCRIPTION] = @DESCRIPTION, [SYMPTOM_NAME] = @SYMPTOM_NAME WHERE (([R"& _ 
                "EF_ID] = @Original_REF_ID) AND ((@IsNull_CLIENT_NO = 1 AND [CLIENT_NO] IS NULL) "& _ 
                "OR ([CLIENT_NO] = @Original_CLIENT_NO)) AND ((@IsNull_SYMPTOM_ID = 1 AND [SYMPTO"& _ 
                "M_ID] IS NULL) OR ([SYMPTOM_ID] = @Original_SYMPTOM_ID)) AND ((@IsNull_DESCRIPTI"& _ 
                "ON = 1 AND [DESCRIPTION] IS NULL) OR ([DESCRIPTION] = @Original_DESCRIPTION)) AN"& _ 
                "D ((@IsNull_SYMPTOM_NAME = 1 AND [SYMPTOM_NAME] IS NULL) OR ([SYMPTOM_NAME] = @O"& _ 
                "riginal_SYMPTOM_NAME)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT REF_ID, CLIENT_NO, SYMPTOM_ID, DESCRIPTION, SYM"& _ 
                "PTOM_NAME FROM CCAMH_DDISORDER_DETAIL WHERE (REF_ID = @REF_ID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SYMPTOM_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "SYMPTOM_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SYMPTOM_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REF_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "REF_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SYMPTOM_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_ID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SYMPTOM_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "SYMPTOM_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DESCRIPTION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SYMPTOM_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SYMPTOM_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REF_ID", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "REF_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.KTGSYS.My.MySettings.Default.TakeoDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(3) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        REF_ID, CLIENT_NO, SYMPTOM_ID, DESCRIPTION, SYMPTOM_NAME"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM     "& _ 
                "       CCAMH_DDISORDER_DETAIL"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "DELETE FROM CCAMH_DDISORDER_DETAIL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (CLIENT_NO = @CLIENT_NO)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT CLIENT_NO, DESCRIPTION, REF_ID, SYMPTOM_ID, SYMPTOM_NAME FROM CCAMH_DDISOR"& _ 
                "DER_DETAIL WHERE (CLIENT_NO = @CLIENT_NO)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "INSERT INTO CCAMH_DDISORDER_DETAIL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (CLIENT_NO, SYMPTOM_"& _ 
                "ID, DESCRIPTION, SYMPTOM_NAME)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"VALUES        (@CLIENT_NO,@SYMPTOM_ID,@DESCRIPTI"& _ 
                "ON,@SYMPTOM_NAME); "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT REF_ID, CLIENT_NO, SYMPTOM_ID, DESCRIPTION, SYMPTOM_"& _ 
                "NAME FROM CCAMH_DDISORDER_DETAIL WHERE (REF_ID = SCOPE_IDENTITY())"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SYMPTOM_ID", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "SYMPTOM_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 200, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SYMPTOM_NAME", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_ClientImpression.CCAMH_DDISORDER_DETAILDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_ClientImpression.CCAMH_DDISORDER_DETAILDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_ClientImpression.CCAMH_DDISORDER_DETAILDataTable = New DS_ClientImpression.CCAMH_DDISORDER_DETAILDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As DS_ClientImpression.CCAMH_DDISORDER_DETAILDataTable, ByVal CLIENT_NO As Global.System.Nullable(Of Decimal)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (CLIENT_NO.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CLIENT_NO.Value,Decimal)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByClientNo(ByVal CLIENT_NO As Global.System.Nullable(Of Decimal)) As DS_ClientImpression.CCAMH_DDISORDER_DETAILDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (CLIENT_NO.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CLIENT_NO.Value,Decimal)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DS_ClientImpression.CCAMH_DDISORDER_DETAILDataTable = New DS_ClientImpression.CCAMH_DDISORDER_DETAILDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DS_ClientImpression.CCAMH_DDISORDER_DETAILDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DS_ClientImpression) As Integer
            Return Me.Adapter.Update(dataSet, "CCAMH_DDISORDER_DETAIL")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_REF_ID As Decimal, ByVal Original_CLIENT_NO As Global.System.Nullable(Of Decimal), ByVal Original_SYMPTOM_ID As Global.System.Nullable(Of Decimal), ByVal Original_DESCRIPTION As String, ByVal Original_SYMPTOM_NAME As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_REF_ID,Decimal)
            If (Original_CLIENT_NO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_CLIENT_NO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Original_SYMPTOM_ID.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_SYMPTOM_ID.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_DESCRIPTION Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_DESCRIPTION,String)
            End If
            If (Original_SYMPTOM_NAME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_SYMPTOM_NAME,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal CLIENT_NO As Global.System.Nullable(Of Decimal), ByVal SYMPTOM_ID As Global.System.Nullable(Of Decimal), ByVal DESCRIPTION As String, ByVal SYMPTOM_NAME As String) As Integer
            If (CLIENT_NO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(CLIENT_NO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (SYMPTOM_ID.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(SYMPTOM_ID.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (DESCRIPTION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(DESCRIPTION,String)
            End If
            If (SYMPTOM_NAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(SYMPTOM_NAME,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal CLIENT_NO As Global.System.Nullable(Of Decimal), ByVal SYMPTOM_ID As Global.System.Nullable(Of Decimal), ByVal DESCRIPTION As String, ByVal SYMPTOM_NAME As String, ByVal Original_REF_ID As Decimal, ByVal Original_CLIENT_NO As Global.System.Nullable(Of Decimal), ByVal Original_SYMPTOM_ID As Global.System.Nullable(Of Decimal), ByVal Original_DESCRIPTION As String, ByVal Original_SYMPTOM_NAME As String, ByVal REF_ID As Decimal) As Integer
            If (CLIENT_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(CLIENT_NO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (SYMPTOM_ID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(SYMPTOM_ID.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (DESCRIPTION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(DESCRIPTION,String)
            End If
            If (SYMPTOM_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(SYMPTOM_NAME,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_REF_ID,Decimal)
            If (Original_CLIENT_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_CLIENT_NO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_SYMPTOM_ID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_SYMPTOM_ID.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_DESCRIPTION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_DESCRIPTION,String)
            End If
            If (Original_SYMPTOM_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_SYMPTOM_NAME,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(13).Value = CType(REF_ID,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal CLIENT_NO As Global.System.Nullable(Of Decimal), ByVal SYMPTOM_ID As Global.System.Nullable(Of Decimal), ByVal DESCRIPTION As String, ByVal SYMPTOM_NAME As String, ByVal Original_REF_ID As Decimal, ByVal Original_CLIENT_NO As Global.System.Nullable(Of Decimal), ByVal Original_SYMPTOM_ID As Global.System.Nullable(Of Decimal), ByVal Original_DESCRIPTION As String, ByVal Original_SYMPTOM_NAME As String) As Integer
            Return Me.Update(CLIENT_NO, SYMPTOM_ID, DESCRIPTION, SYMPTOM_NAME, Original_REF_ID, Original_CLIENT_NO, Original_SYMPTOM_ID, Original_DESCRIPTION, Original_SYMPTOM_NAME, Original_REF_ID)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, false)>  _
        Public Overloads Overridable Function DeleteDataByClientNo(ByVal CLIENT_NO As Global.System.Nullable(Of Decimal)) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            If (CLIENT_NO.HasValue = true) Then
                command.Parameters(0).Value = CType(CLIENT_NO.Value,Decimal)
            Else
                command.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, false)>  _
        Public Overloads Overridable Function InsertQuery(ByVal CLIENT_NO As Global.System.Nullable(Of Decimal), ByVal SYMPTOM_ID As Global.System.Nullable(Of Decimal), ByVal DESCRIPTION As String, ByVal SYMPTOM_NAME As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(3)
            If (CLIENT_NO.HasValue = true) Then
                command.Parameters(0).Value = CType(CLIENT_NO.Value,Decimal)
            Else
                command.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (SYMPTOM_ID.HasValue = true) Then
                command.Parameters(1).Value = CType(SYMPTOM_ID.Value,Decimal)
            Else
                command.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (DESCRIPTION Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(DESCRIPTION,String)
            End If
            If (SYMPTOM_NAME Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(SYMPTOM_NAME,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class CCAMH_PSYCHO_MINOR_DETAILTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "CCAMH_PSYCHO_MINOR_DETAIL"
            tableMapping.ColumnMappings.Add("REF_ID", "REF_ID")
            tableMapping.ColumnMappings.Add("CLIENT_NO", "CLIENT_NO")
            tableMapping.ColumnMappings.Add("SYMPTOM_ID", "SYMPTOM_ID")
            tableMapping.ColumnMappings.Add("DESCRIPTION", "DESCRIPTION")
            tableMapping.ColumnMappings.Add("SYMPTOM_NAME", "SYMPTOM_NAME")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [CCAMH_PSYCHO_MINOR_DETAIL] WHERE (([REF_ID] = @Original_REF_ID) AND "& _ 
                "((@IsNull_CLIENT_NO = 1 AND [CLIENT_NO] IS NULL) OR ([CLIENT_NO] = @Original_CLI"& _ 
                "ENT_NO)) AND ((@IsNull_SYMPTOM_ID = 1 AND [SYMPTOM_ID] IS NULL) OR ([SYMPTOM_ID]"& _ 
                " = @Original_SYMPTOM_ID)) AND ((@IsNull_DESCRIPTION = 1 AND [DESCRIPTION] IS NUL"& _ 
                "L) OR ([DESCRIPTION] = @Original_DESCRIPTION)) AND ((@IsNull_SYMPTOM_NAME = 1 AN"& _ 
                "D [SYMPTOM_NAME] IS NULL) OR ([SYMPTOM_NAME] = @Original_SYMPTOM_NAME)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REF_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "REF_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SYMPTOM_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_ID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SYMPTOM_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "SYMPTOM_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DESCRIPTION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SYMPTOM_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SYMPTOM_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [CCAMH_PSYCHO_MINOR_DETAIL] ([CLIENT_NO], [SYMPTOM_ID], [DESCRIPTION]"& _ 
                ", [SYMPTOM_NAME]) VALUES (@CLIENT_NO, @SYMPTOM_ID, @DESCRIPTION, @SYMPTOM_NAME);"& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT REF_ID, CLIENT_NO, SYMPTOM_ID, DESCRIPTION, SYMPTOM_NAME FROM CCAMH_PSY"& _ 
                "CHO_MINOR_DETAIL WHERE (REF_ID = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SYMPTOM_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "SYMPTOM_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SYMPTOM_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [CCAMH_PSYCHO_MINOR_DETAIL] SET [CLIENT_NO] = @CLIENT_NO, [SYMPTOM_ID] = @"& _ 
                "SYMPTOM_ID, [DESCRIPTION] = @DESCRIPTION, [SYMPTOM_NAME] = @SYMPTOM_NAME WHERE ("& _ 
                "([REF_ID] = @Original_REF_ID) AND ((@IsNull_CLIENT_NO = 1 AND [CLIENT_NO] IS NUL"& _ 
                "L) OR ([CLIENT_NO] = @Original_CLIENT_NO)) AND ((@IsNull_SYMPTOM_ID = 1 AND [SYM"& _ 
                "PTOM_ID] IS NULL) OR ([SYMPTOM_ID] = @Original_SYMPTOM_ID)) AND ((@IsNull_DESCRI"& _ 
                "PTION = 1 AND [DESCRIPTION] IS NULL) OR ([DESCRIPTION] = @Original_DESCRIPTION))"& _ 
                " AND ((@IsNull_SYMPTOM_NAME = 1 AND [SYMPTOM_NAME] IS NULL) OR ([SYMPTOM_NAME] ="& _ 
                " @Original_SYMPTOM_NAME)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT REF_ID, CLIENT_NO, SYMPTOM_ID, DESCRIPTION, "& _ 
                "SYMPTOM_NAME FROM CCAMH_PSYCHO_MINOR_DETAIL WHERE (REF_ID = @REF_ID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SYMPTOM_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "SYMPTOM_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SYMPTOM_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REF_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "REF_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SYMPTOM_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_ID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SYMPTOM_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "SYMPTOM_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DESCRIPTION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SYMPTOM_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SYMPTOM_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REF_ID", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "REF_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.KTGSYS.My.MySettings.Default.TakeoDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(3) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        REF_ID, CLIENT_NO, SYMPTOM_ID, DESCRIPTION, SYMPTOM_NAME"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM     "& _ 
                "       CCAMH_PSYCHO_MINOR_DETAIL"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "DELETE FROM CCAMH_PSYCHO_MINOR_DETAIL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (CLIENT_NO = @CLIENT_NO)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT CLIENT_NO, DESCRIPTION, REF_ID, SYMPTOM_ID, SYMPTOM_NAME FROM CCAMH_PSYCHO"& _ 
                "_MINOR_DETAIL WHERE (CLIENT_NO = @CLIENT_NO)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "INSERT INTO CCAMH_PSYCHO_MINOR_DETAIL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (CLIENT_NO, SYMPT"& _ 
                "OM_ID, DESCRIPTION, SYMPTOM_NAME)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"VALUES        (@CLIENT_NO,@SYMPTOM_ID,@DESCRI"& _ 
                "PTION,@SYMPTOM_NAME); "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT REF_ID, CLIENT_NO, SYMPTOM_ID, DESCRIPTION, SYMPT"& _ 
                "OM_NAME FROM CCAMH_PSYCHO_MINOR_DETAIL WHERE (REF_ID = SCOPE_IDENTITY())"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SYMPTOM_ID", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "SYMPTOM_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 200, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SYMPTOM_NAME", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_ClientImpression.CCAMH_PSYCHO_MINOR_DETAILDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_ClientImpression.CCAMH_PSYCHO_MINOR_DETAILDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_ClientImpression.CCAMH_PSYCHO_MINOR_DETAILDataTable = New DS_ClientImpression.CCAMH_PSYCHO_MINOR_DETAILDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As DS_ClientImpression.CCAMH_PSYCHO_MINOR_DETAILDataTable, ByVal CLIENT_NO As Global.System.Nullable(Of Decimal)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (CLIENT_NO.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CLIENT_NO.Value,Decimal)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByClientNo(ByVal CLIENT_NO As Global.System.Nullable(Of Decimal)) As DS_ClientImpression.CCAMH_PSYCHO_MINOR_DETAILDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (CLIENT_NO.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CLIENT_NO.Value,Decimal)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DS_ClientImpression.CCAMH_PSYCHO_MINOR_DETAILDataTable = New DS_ClientImpression.CCAMH_PSYCHO_MINOR_DETAILDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DS_ClientImpression.CCAMH_PSYCHO_MINOR_DETAILDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DS_ClientImpression) As Integer
            Return Me.Adapter.Update(dataSet, "CCAMH_PSYCHO_MINOR_DETAIL")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_REF_ID As Decimal, ByVal Original_CLIENT_NO As Global.System.Nullable(Of Decimal), ByVal Original_SYMPTOM_ID As Global.System.Nullable(Of Decimal), ByVal Original_DESCRIPTION As String, ByVal Original_SYMPTOM_NAME As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_REF_ID,Decimal)
            If (Original_CLIENT_NO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_CLIENT_NO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Original_SYMPTOM_ID.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_SYMPTOM_ID.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_DESCRIPTION Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_DESCRIPTION,String)
            End If
            If (Original_SYMPTOM_NAME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_SYMPTOM_NAME,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal CLIENT_NO As Global.System.Nullable(Of Decimal), ByVal SYMPTOM_ID As Global.System.Nullable(Of Decimal), ByVal DESCRIPTION As String, ByVal SYMPTOM_NAME As String) As Integer
            If (CLIENT_NO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(CLIENT_NO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (SYMPTOM_ID.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(SYMPTOM_ID.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (DESCRIPTION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(DESCRIPTION,String)
            End If
            If (SYMPTOM_NAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(SYMPTOM_NAME,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal CLIENT_NO As Global.System.Nullable(Of Decimal), ByVal SYMPTOM_ID As Global.System.Nullable(Of Decimal), ByVal DESCRIPTION As String, ByVal SYMPTOM_NAME As String, ByVal Original_REF_ID As Decimal, ByVal Original_CLIENT_NO As Global.System.Nullable(Of Decimal), ByVal Original_SYMPTOM_ID As Global.System.Nullable(Of Decimal), ByVal Original_DESCRIPTION As String, ByVal Original_SYMPTOM_NAME As String, ByVal REF_ID As Decimal) As Integer
            If (CLIENT_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(CLIENT_NO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (SYMPTOM_ID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(SYMPTOM_ID.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (DESCRIPTION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(DESCRIPTION,String)
            End If
            If (SYMPTOM_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(SYMPTOM_NAME,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_REF_ID,Decimal)
            If (Original_CLIENT_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_CLIENT_NO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_SYMPTOM_ID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_SYMPTOM_ID.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_DESCRIPTION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_DESCRIPTION,String)
            End If
            If (Original_SYMPTOM_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_SYMPTOM_NAME,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(13).Value = CType(REF_ID,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal CLIENT_NO As Global.System.Nullable(Of Decimal), ByVal SYMPTOM_ID As Global.System.Nullable(Of Decimal), ByVal DESCRIPTION As String, ByVal SYMPTOM_NAME As String, ByVal Original_REF_ID As Decimal, ByVal Original_CLIENT_NO As Global.System.Nullable(Of Decimal), ByVal Original_SYMPTOM_ID As Global.System.Nullable(Of Decimal), ByVal Original_DESCRIPTION As String, ByVal Original_SYMPTOM_NAME As String) As Integer
            Return Me.Update(CLIENT_NO, SYMPTOM_ID, DESCRIPTION, SYMPTOM_NAME, Original_REF_ID, Original_CLIENT_NO, Original_SYMPTOM_ID, Original_DESCRIPTION, Original_SYMPTOM_NAME, Original_REF_ID)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, false)>  _
        Public Overloads Overridable Function DeleteDataByClientNo(ByVal CLIENT_NO As Global.System.Nullable(Of Decimal)) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            If (CLIENT_NO.HasValue = true) Then
                command.Parameters(0).Value = CType(CLIENT_NO.Value,Decimal)
            Else
                command.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, false)>  _
        Public Overloads Overridable Function InsertQuery(ByVal CLIENT_NO As Global.System.Nullable(Of Decimal), ByVal SYMPTOM_ID As Global.System.Nullable(Of Decimal), ByVal DESCRIPTION As String, ByVal SYMPTOM_NAME As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(3)
            If (CLIENT_NO.HasValue = true) Then
                command.Parameters(0).Value = CType(CLIENT_NO.Value,Decimal)
            Else
                command.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (SYMPTOM_ID.HasValue = true) Then
                command.Parameters(1).Value = CType(SYMPTOM_ID.Value,Decimal)
            Else
                command.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (DESCRIPTION Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(DESCRIPTION,String)
            End If
            If (SYMPTOM_NAME Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(SYMPTOM_NAME,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class CCAMH_NEUROTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "CCAMH_NEURO"
            tableMapping.ColumnMappings.Add("SYMPTOM_ID", "SYMPTOM_ID")
            tableMapping.ColumnMappings.Add("DESCRIPTION", "DESCRIPTION")
            tableMapping.ColumnMappings.Add("SYMPTOM_NAME", "SYMPTOM_NAME")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [CCAMH_NEURO] WHERE (([SYMPTOM_ID] = @Original_SYMPTOM_ID) AND ((@IsN"& _ 
                "ull_SYMPTOM_NAME = 1 AND [SYMPTOM_NAME] IS NULL) OR ([SYMPTOM_NAME] = @Original_"& _ 
                "SYMPTOM_NAME)) AND ((@IsNull_DESCRIPTION = 1 AND [DESCRIPTION] IS NULL) OR ([DES"& _ 
                "CRIPTION] = @Original_DESCRIPTION)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SYMPTOM_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "SYMPTOM_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SYMPTOM_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SYMPTOM_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DESCRIPTION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [CCAMH_NEURO] ([SYMPTOM_NAME], [DESCRIPTION]) VALUES (@SYMPTOM_NAME, "& _ 
                "@DESCRIPTION);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT SYMPTOM_ID, SYMPTOM_NAME, DESCRIPTION FROM CCAMH_NEURO WH"& _ 
                "ERE (SYMPTOM_ID = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SYMPTOM_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [CCAMH_NEURO] SET [SYMPTOM_NAME] = @SYMPTOM_NAME, [DESCRIPTION] = @DESCRIP"& _ 
                "TION WHERE (([SYMPTOM_ID] = @Original_SYMPTOM_ID) AND ((@IsNull_SYMPTOM_NAME = 1"& _ 
                " AND [SYMPTOM_NAME] IS NULL) OR ([SYMPTOM_NAME] = @Original_SYMPTOM_NAME)) AND ("& _ 
                "(@IsNull_DESCRIPTION = 1 AND [DESCRIPTION] IS NULL) OR ([DESCRIPTION] = @Origina"& _ 
                "l_DESCRIPTION)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT SYMPTOM_ID, SYMPTOM_NAME, DESCRIPTION FROM CCAMH_NEURO"& _ 
                " WHERE (SYMPTOM_ID = @SYMPTOM_ID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SYMPTOM_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SYMPTOM_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "SYMPTOM_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SYMPTOM_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SYMPTOM_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DESCRIPTION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SYMPTOM_ID", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "SYMPTOM_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.KTGSYS.My.MySettings.Default.TakeoDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        SYMPTOM_ID, SYMPTOM_NAME, DESCRIPTION"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            CCAMH_NEURO"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "INSERT INTO CCAMH_NEURO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (SYMPTOM_NAME, DESCRIPTION)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"VA"& _ 
                "LUES        (@SYMPTOM_NAME,@DESCRIPTION); "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT SYMPTOM_ID, SYMPTOM_NAME, DES"& _ 
                "CRIPTION FROM CCAMH_NEURO WHERE (SYMPTOM_ID = SCOPE_IDENTITY())"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SYMPTOM_NAME", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 200, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_ClientImpression.CCAMH_NEURODataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_ClientImpression.CCAMH_NEURODataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_ClientImpression.CCAMH_NEURODataTable = New DS_ClientImpression.CCAMH_NEURODataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DS_ClientImpression.CCAMH_NEURODataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DS_ClientImpression) As Integer
            Return Me.Adapter.Update(dataSet, "CCAMH_NEURO")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_SYMPTOM_ID As Decimal, ByVal Original_SYMPTOM_NAME As String, ByVal Original_DESCRIPTION As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_SYMPTOM_ID,Decimal)
            If (Original_SYMPTOM_NAME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_SYMPTOM_NAME,String)
            End If
            If (Original_DESCRIPTION Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_DESCRIPTION,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal SYMPTOM_NAME As String, ByVal DESCRIPTION As String) As Integer
            If (SYMPTOM_NAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(SYMPTOM_NAME,String)
            End If
            If (DESCRIPTION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(DESCRIPTION,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal SYMPTOM_NAME As String, ByVal DESCRIPTION As String, ByVal Original_SYMPTOM_ID As Decimal, ByVal Original_SYMPTOM_NAME As String, ByVal Original_DESCRIPTION As String, ByVal SYMPTOM_ID As Decimal) As Integer
            If (SYMPTOM_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(SYMPTOM_NAME,String)
            End If
            If (DESCRIPTION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(DESCRIPTION,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Original_SYMPTOM_ID,Decimal)
            If (Original_SYMPTOM_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_SYMPTOM_NAME,String)
            End If
            If (Original_DESCRIPTION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_DESCRIPTION,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(SYMPTOM_ID,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal SYMPTOM_NAME As String, ByVal DESCRIPTION As String, ByVal Original_SYMPTOM_ID As Decimal, ByVal Original_SYMPTOM_NAME As String, ByVal Original_DESCRIPTION As String) As Integer
            Return Me.Update(SYMPTOM_NAME, DESCRIPTION, Original_SYMPTOM_ID, Original_SYMPTOM_NAME, Original_DESCRIPTION, Original_SYMPTOM_ID)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, false)>  _
        Public Overloads Overridable Function InsertQuery(ByVal SYMPTOM_NAME As String, ByVal DESCRIPTION As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            If (SYMPTOM_NAME Is Nothing) Then
                command.Parameters(0).Value = Global.System.DBNull.Value
            Else
                command.Parameters(0).Value = CType(SYMPTOM_NAME,String)
            End If
            If (DESCRIPTION Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(DESCRIPTION,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class CCAMH_PSYCHO_MAJORTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "CCAMH_PSYCHO_MAJOR"
            tableMapping.ColumnMappings.Add("SYMPTOM_ID", "SYMPTOM_ID")
            tableMapping.ColumnMappings.Add("SYMPTOM_NAME", "SYMPTOM_NAME")
            tableMapping.ColumnMappings.Add("DESCRIPTION", "DESCRIPTION")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [CCAMH_PSYCHO_MAJOR] WHERE (([SYMPTOM_ID] = @Original_SYMPTOM_ID) AND"& _ 
                " ((@IsNull_SYMPTOM_NAME = 1 AND [SYMPTOM_NAME] IS NULL) OR ([SYMPTOM_NAME] = @Or"& _ 
                "iginal_SYMPTOM_NAME)) AND ((@IsNull_DESCRIPTION = 1 AND [DESCRIPTION] IS NULL) O"& _ 
                "R ([DESCRIPTION] = @Original_DESCRIPTION)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SYMPTOM_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "SYMPTOM_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SYMPTOM_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SYMPTOM_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DESCRIPTION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [CCAMH_PSYCHO_MAJOR] ([SYMPTOM_NAME], [DESCRIPTION]) VALUES (@SYMPTOM"& _ 
                "_NAME, @DESCRIPTION);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT SYMPTOM_ID, SYMPTOM_NAME, DESCRIPTION FROM CCAMH_P"& _ 
                "SYCHO_MAJOR WHERE (SYMPTOM_ID = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SYMPTOM_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [CCAMH_PSYCHO_MAJOR] SET [SYMPTOM_NAME] = @SYMPTOM_NAME, [DESCRIPTION] = @"& _ 
                "DESCRIPTION WHERE (([SYMPTOM_ID] = @Original_SYMPTOM_ID) AND ((@IsNull_SYMPTOM_N"& _ 
                "AME = 1 AND [SYMPTOM_NAME] IS NULL) OR ([SYMPTOM_NAME] = @Original_SYMPTOM_NAME)"& _ 
                ") AND ((@IsNull_DESCRIPTION = 1 AND [DESCRIPTION] IS NULL) OR ([DESCRIPTION] = @"& _ 
                "Original_DESCRIPTION)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT SYMPTOM_ID, SYMPTOM_NAME, DESCRIPTION FROM CCAM"& _ 
                "H_PSYCHO_MAJOR WHERE (SYMPTOM_ID = @SYMPTOM_ID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SYMPTOM_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SYMPTOM_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "SYMPTOM_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SYMPTOM_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SYMPTOM_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DESCRIPTION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SYMPTOM_ID", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "SYMPTOM_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.KTGSYS.My.MySettings.Default.TakeoDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        SYMPTOM_ID, SYMPTOM_NAME, DESCRIPTION"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            CCAMH_PSYCHO"& _ 
                "_MAJOR"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "INSERT INTO CCAMH_PSYCHO_MAJOR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (SYMPTOM_NAME, DESCRIPTI"& _ 
                "ON)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"VALUES        (@SYMPTOM_NAME,@DESCRIPTION); "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT SYMPTOM_ID, SYMPTOM_NA"& _ 
                "ME, DESCRIPTION FROM CCAMH_PSYCHO_MAJOR WHERE (SYMPTOM_ID = SCOPE_IDENTITY())"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SYMPTOM_NAME", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 200, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_ClientImpression.CCAMH_PSYCHO_MAJORDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_ClientImpression.CCAMH_PSYCHO_MAJORDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_ClientImpression.CCAMH_PSYCHO_MAJORDataTable = New DS_ClientImpression.CCAMH_PSYCHO_MAJORDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DS_ClientImpression.CCAMH_PSYCHO_MAJORDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DS_ClientImpression) As Integer
            Return Me.Adapter.Update(dataSet, "CCAMH_PSYCHO_MAJOR")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_SYMPTOM_ID As Decimal, ByVal Original_SYMPTOM_NAME As String, ByVal Original_DESCRIPTION As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_SYMPTOM_ID,Decimal)
            If (Original_SYMPTOM_NAME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_SYMPTOM_NAME,String)
            End If
            If (Original_DESCRIPTION Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_DESCRIPTION,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal SYMPTOM_NAME As String, ByVal DESCRIPTION As String) As Integer
            If (SYMPTOM_NAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(SYMPTOM_NAME,String)
            End If
            If (DESCRIPTION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(DESCRIPTION,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal SYMPTOM_NAME As String, ByVal DESCRIPTION As String, ByVal Original_SYMPTOM_ID As Decimal, ByVal Original_SYMPTOM_NAME As String, ByVal Original_DESCRIPTION As String, ByVal SYMPTOM_ID As Decimal) As Integer
            If (SYMPTOM_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(SYMPTOM_NAME,String)
            End If
            If (DESCRIPTION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(DESCRIPTION,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Original_SYMPTOM_ID,Decimal)
            If (Original_SYMPTOM_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_SYMPTOM_NAME,String)
            End If
            If (Original_DESCRIPTION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_DESCRIPTION,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(SYMPTOM_ID,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal SYMPTOM_NAME As String, ByVal DESCRIPTION As String, ByVal Original_SYMPTOM_ID As Decimal, ByVal Original_SYMPTOM_NAME As String, ByVal Original_DESCRIPTION As String) As Integer
            Return Me.Update(SYMPTOM_NAME, DESCRIPTION, Original_SYMPTOM_ID, Original_SYMPTOM_NAME, Original_DESCRIPTION, Original_SYMPTOM_ID)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, false)>  _
        Public Overloads Overridable Function InsertQuery(ByVal SYMPTOM_NAME As String, ByVal DESCRIPTION As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            If (SYMPTOM_NAME Is Nothing) Then
                command.Parameters(0).Value = Global.System.DBNull.Value
            Else
                command.Parameters(0).Value = CType(SYMPTOM_NAME,String)
            End If
            If (DESCRIPTION Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(DESCRIPTION,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class CCAMH_PSYCHO_MINORTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "CCAMH_PSYCHO_MINOR"
            tableMapping.ColumnMappings.Add("SYMPTOM_ID", "SYMPTOM_ID")
            tableMapping.ColumnMappings.Add("SYMPTOM_NAME", "SYMPTOM_NAME")
            tableMapping.ColumnMappings.Add("DESCRIPTION", "DESCRIPTION")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [CCAMH_PSYCHO_MINOR] WHERE (([SYMPTOM_ID] = @Original_SYMPTOM_ID) AND"& _ 
                " ((@IsNull_SYMPTOM_NAME = 1 AND [SYMPTOM_NAME] IS NULL) OR ([SYMPTOM_NAME] = @Or"& _ 
                "iginal_SYMPTOM_NAME)) AND ((@IsNull_DESCRIPTION = 1 AND [DESCRIPTION] IS NULL) O"& _ 
                "R ([DESCRIPTION] = @Original_DESCRIPTION)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SYMPTOM_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "SYMPTOM_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SYMPTOM_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SYMPTOM_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DESCRIPTION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [CCAMH_PSYCHO_MINOR] ([SYMPTOM_NAME], [DESCRIPTION]) VALUES (@SYMPTOM"& _ 
                "_NAME, @DESCRIPTION);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT SYMPTOM_ID, SYMPTOM_NAME, DESCRIPTION FROM CCAMH_P"& _ 
                "SYCHO_MINOR WHERE (SYMPTOM_ID = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SYMPTOM_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [CCAMH_PSYCHO_MINOR] SET [SYMPTOM_NAME] = @SYMPTOM_NAME, [DESCRIPTION] = @"& _ 
                "DESCRIPTION WHERE (([SYMPTOM_ID] = @Original_SYMPTOM_ID) AND ((@IsNull_SYMPTOM_N"& _ 
                "AME = 1 AND [SYMPTOM_NAME] IS NULL) OR ([SYMPTOM_NAME] = @Original_SYMPTOM_NAME)"& _ 
                ") AND ((@IsNull_DESCRIPTION = 1 AND [DESCRIPTION] IS NULL) OR ([DESCRIPTION] = @"& _ 
                "Original_DESCRIPTION)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT SYMPTOM_ID, SYMPTOM_NAME, DESCRIPTION FROM CCAM"& _ 
                "H_PSYCHO_MINOR WHERE (SYMPTOM_ID = @SYMPTOM_ID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SYMPTOM_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SYMPTOM_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "SYMPTOM_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SYMPTOM_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SYMPTOM_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DESCRIPTION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SYMPTOM_ID", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "SYMPTOM_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.KTGSYS.My.MySettings.Default.TakeoDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        SYMPTOM_ID, SYMPTOM_NAME, DESCRIPTION"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            CCAMH_PSYCHO"& _ 
                "_MINOR"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "INSERT INTO CCAMH_PSYCHO_MINOR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (SYMPTOM_NAME, DESCRIPTI"& _ 
                "ON)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"VALUES        (@SYMPTOM_NAME,@DESCRIPTION); "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT SYMPTOM_ID, SYMPTOM_NA"& _ 
                "ME, DESCRIPTION FROM CCAMH_PSYCHO_MINOR WHERE (SYMPTOM_ID = SCOPE_IDENTITY())"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SYMPTOM_NAME", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 200, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_ClientImpression.CCAMH_PSYCHO_MINORDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_ClientImpression.CCAMH_PSYCHO_MINORDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_ClientImpression.CCAMH_PSYCHO_MINORDataTable = New DS_ClientImpression.CCAMH_PSYCHO_MINORDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DS_ClientImpression.CCAMH_PSYCHO_MINORDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DS_ClientImpression) As Integer
            Return Me.Adapter.Update(dataSet, "CCAMH_PSYCHO_MINOR")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_SYMPTOM_ID As Decimal, ByVal Original_SYMPTOM_NAME As String, ByVal Original_DESCRIPTION As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_SYMPTOM_ID,Decimal)
            If (Original_SYMPTOM_NAME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_SYMPTOM_NAME,String)
            End If
            If (Original_DESCRIPTION Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_DESCRIPTION,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal SYMPTOM_NAME As String, ByVal DESCRIPTION As String) As Integer
            If (SYMPTOM_NAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(SYMPTOM_NAME,String)
            End If
            If (DESCRIPTION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(DESCRIPTION,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal SYMPTOM_NAME As String, ByVal DESCRIPTION As String, ByVal Original_SYMPTOM_ID As Decimal, ByVal Original_SYMPTOM_NAME As String, ByVal Original_DESCRIPTION As String, ByVal SYMPTOM_ID As Decimal) As Integer
            If (SYMPTOM_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(SYMPTOM_NAME,String)
            End If
            If (DESCRIPTION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(DESCRIPTION,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Original_SYMPTOM_ID,Decimal)
            If (Original_SYMPTOM_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_SYMPTOM_NAME,String)
            End If
            If (Original_DESCRIPTION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_DESCRIPTION,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(SYMPTOM_ID,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal SYMPTOM_NAME As String, ByVal DESCRIPTION As String, ByVal Original_SYMPTOM_ID As Decimal, ByVal Original_SYMPTOM_NAME As String, ByVal Original_DESCRIPTION As String) As Integer
            Return Me.Update(SYMPTOM_NAME, DESCRIPTION, Original_SYMPTOM_ID, Original_SYMPTOM_NAME, Original_DESCRIPTION, Original_SYMPTOM_ID)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, false)>  _
        Public Overloads Overridable Function InsertQuery(ByVal SYMPTOM_NAME As String, ByVal DESCRIPTION As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            If (SYMPTOM_NAME Is Nothing) Then
                command.Parameters(0).Value = Global.System.DBNull.Value
            Else
                command.Parameters(0).Value = CType(SYMPTOM_NAME,String)
            End If
            If (DESCRIPTION Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(DESCRIPTION,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class CCAMH_PSYCHO_MAJOR_DETAILTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "CCAMH_PSYCHO_MAJOR_DETAIL"
            tableMapping.ColumnMappings.Add("REF_ID", "REF_ID")
            tableMapping.ColumnMappings.Add("CLIENT_NO", "CLIENT_NO")
            tableMapping.ColumnMappings.Add("SYMPTOM_ID", "SYMPTOM_ID")
            tableMapping.ColumnMappings.Add("DESCRIPTION", "DESCRIPTION")
            tableMapping.ColumnMappings.Add("SYMPTOM_NAME", "SYMPTOM_NAME")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [CCAMH_PSYCHO_MAJOR_DETAIL] WHERE (([REF_ID] = @Original_REF_ID) AND "& _ 
                "((@IsNull_CLIENT_NO = 1 AND [CLIENT_NO] IS NULL) OR ([CLIENT_NO] = @Original_CLI"& _ 
                "ENT_NO)) AND ((@IsNull_SYMPTOM_ID = 1 AND [SYMPTOM_ID] IS NULL) OR ([SYMPTOM_ID]"& _ 
                " = @Original_SYMPTOM_ID)) AND ((@IsNull_DESCRIPTION = 1 AND [DESCRIPTION] IS NUL"& _ 
                "L) OR ([DESCRIPTION] = @Original_DESCRIPTION)) AND ((@IsNull_SYMPTOM_NAME = 1 AN"& _ 
                "D [SYMPTOM_NAME] IS NULL) OR ([SYMPTOM_NAME] = @Original_SYMPTOM_NAME)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REF_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "REF_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SYMPTOM_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_ID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SYMPTOM_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "SYMPTOM_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DESCRIPTION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SYMPTOM_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SYMPTOM_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [CCAMH_PSYCHO_MAJOR_DETAIL] ([CLIENT_NO], [SYMPTOM_ID], [DESCRIPTION]"& _ 
                ", [SYMPTOM_NAME]) VALUES (@CLIENT_NO, @SYMPTOM_ID, @DESCRIPTION, @SYMPTOM_NAME);"& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT REF_ID, CLIENT_NO, SYMPTOM_ID, DESCRIPTION, SYMPTOM_NAME FROM CCAMH_PSY"& _ 
                "CHO_MAJOR_DETAIL WHERE (REF_ID = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SYMPTOM_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "SYMPTOM_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SYMPTOM_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [CCAMH_PSYCHO_MAJOR_DETAIL] SET [CLIENT_NO] = @CLIENT_NO, [SYMPTOM_ID] = @"& _ 
                "SYMPTOM_ID, [DESCRIPTION] = @DESCRIPTION, [SYMPTOM_NAME] = @SYMPTOM_NAME WHERE ("& _ 
                "([REF_ID] = @Original_REF_ID) AND ((@IsNull_CLIENT_NO = 1 AND [CLIENT_NO] IS NUL"& _ 
                "L) OR ([CLIENT_NO] = @Original_CLIENT_NO)) AND ((@IsNull_SYMPTOM_ID = 1 AND [SYM"& _ 
                "PTOM_ID] IS NULL) OR ([SYMPTOM_ID] = @Original_SYMPTOM_ID)) AND ((@IsNull_DESCRI"& _ 
                "PTION = 1 AND [DESCRIPTION] IS NULL) OR ([DESCRIPTION] = @Original_DESCRIPTION))"& _ 
                " AND ((@IsNull_SYMPTOM_NAME = 1 AND [SYMPTOM_NAME] IS NULL) OR ([SYMPTOM_NAME] ="& _ 
                " @Original_SYMPTOM_NAME)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT REF_ID, CLIENT_NO, SYMPTOM_ID, DESCRIPTION, "& _ 
                "SYMPTOM_NAME FROM CCAMH_PSYCHO_MAJOR_DETAIL WHERE (REF_ID = @REF_ID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SYMPTOM_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "SYMPTOM_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SYMPTOM_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REF_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "REF_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SYMPTOM_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_ID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SYMPTOM_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "SYMPTOM_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DESCRIPTION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SYMPTOM_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SYMPTOM_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REF_ID", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "REF_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.KTGSYS.My.MySettings.Default.TakeoDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(3) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        REF_ID, CLIENT_NO, SYMPTOM_ID, DESCRIPTION, SYMPTOM_NAME"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM     "& _ 
                "       CCAMH_PSYCHO_MAJOR_DETAIL"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "DELETE FROM CCAMH_PSYCHO_MAJOR_DETAIL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (CLIENT_NO = @CLIENT_NO)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT CLIENT_NO, DESCRIPTION, REF_ID, SYMPTOM_ID, SYMPTOM_NAME FROM CCAMH_PSYCHO"& _ 
                "_MAJOR_DETAIL WHERE (CLIENT_NO = @CLIENT_NO)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "INSERT INTO CCAMH_PSYCHO_MAJOR_DETAIL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (CLIENT_NO, SYMPT"& _ 
                "OM_ID, DESCRIPTION, SYMPTOM_NAME)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"VALUES        (@CLIENT_NO,@SYMPTOM_ID,@DESCRI"& _ 
                "PTION,@SYMPTOM_NAME); "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT REF_ID, CLIENT_NO, SYMPTOM_ID, DESCRIPTION, SYMPT"& _ 
                "OM_NAME FROM CCAMH_PSYCHO_MAJOR_DETAIL WHERE (REF_ID = SCOPE_IDENTITY())"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SYMPTOM_ID", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "SYMPTOM_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 200, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SYMPTOM_NAME", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_ClientImpression.CCAMH_PSYCHO_MAJOR_DETAILDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_ClientImpression.CCAMH_PSYCHO_MAJOR_DETAILDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_ClientImpression.CCAMH_PSYCHO_MAJOR_DETAILDataTable = New DS_ClientImpression.CCAMH_PSYCHO_MAJOR_DETAILDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As DS_ClientImpression.CCAMH_PSYCHO_MAJOR_DETAILDataTable, ByVal CLIENT_NO As Global.System.Nullable(Of Decimal)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (CLIENT_NO.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CLIENT_NO.Value,Decimal)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByClientNo(ByVal CLIENT_NO As Global.System.Nullable(Of Decimal)) As DS_ClientImpression.CCAMH_PSYCHO_MAJOR_DETAILDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (CLIENT_NO.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CLIENT_NO.Value,Decimal)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DS_ClientImpression.CCAMH_PSYCHO_MAJOR_DETAILDataTable = New DS_ClientImpression.CCAMH_PSYCHO_MAJOR_DETAILDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DS_ClientImpression.CCAMH_PSYCHO_MAJOR_DETAILDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DS_ClientImpression) As Integer
            Return Me.Adapter.Update(dataSet, "CCAMH_PSYCHO_MAJOR_DETAIL")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_REF_ID As Decimal, ByVal Original_CLIENT_NO As Global.System.Nullable(Of Decimal), ByVal Original_SYMPTOM_ID As Global.System.Nullable(Of Decimal), ByVal Original_DESCRIPTION As String, ByVal Original_SYMPTOM_NAME As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_REF_ID,Decimal)
            If (Original_CLIENT_NO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_CLIENT_NO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Original_SYMPTOM_ID.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_SYMPTOM_ID.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_DESCRIPTION Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_DESCRIPTION,String)
            End If
            If (Original_SYMPTOM_NAME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_SYMPTOM_NAME,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal CLIENT_NO As Global.System.Nullable(Of Decimal), ByVal SYMPTOM_ID As Global.System.Nullable(Of Decimal), ByVal DESCRIPTION As String, ByVal SYMPTOM_NAME As String) As Integer
            If (CLIENT_NO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(CLIENT_NO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (SYMPTOM_ID.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(SYMPTOM_ID.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (DESCRIPTION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(DESCRIPTION,String)
            End If
            If (SYMPTOM_NAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(SYMPTOM_NAME,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal CLIENT_NO As Global.System.Nullable(Of Decimal), ByVal SYMPTOM_ID As Global.System.Nullable(Of Decimal), ByVal DESCRIPTION As String, ByVal SYMPTOM_NAME As String, ByVal Original_REF_ID As Decimal, ByVal Original_CLIENT_NO As Global.System.Nullable(Of Decimal), ByVal Original_SYMPTOM_ID As Global.System.Nullable(Of Decimal), ByVal Original_DESCRIPTION As String, ByVal Original_SYMPTOM_NAME As String, ByVal REF_ID As Decimal) As Integer
            If (CLIENT_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(CLIENT_NO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (SYMPTOM_ID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(SYMPTOM_ID.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (DESCRIPTION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(DESCRIPTION,String)
            End If
            If (SYMPTOM_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(SYMPTOM_NAME,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_REF_ID,Decimal)
            If (Original_CLIENT_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_CLIENT_NO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_SYMPTOM_ID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_SYMPTOM_ID.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_DESCRIPTION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_DESCRIPTION,String)
            End If
            If (Original_SYMPTOM_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_SYMPTOM_NAME,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(13).Value = CType(REF_ID,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal CLIENT_NO As Global.System.Nullable(Of Decimal), ByVal SYMPTOM_ID As Global.System.Nullable(Of Decimal), ByVal DESCRIPTION As String, ByVal SYMPTOM_NAME As String, ByVal Original_REF_ID As Decimal, ByVal Original_CLIENT_NO As Global.System.Nullable(Of Decimal), ByVal Original_SYMPTOM_ID As Global.System.Nullable(Of Decimal), ByVal Original_DESCRIPTION As String, ByVal Original_SYMPTOM_NAME As String) As Integer
            Return Me.Update(CLIENT_NO, SYMPTOM_ID, DESCRIPTION, SYMPTOM_NAME, Original_REF_ID, Original_CLIENT_NO, Original_SYMPTOM_ID, Original_DESCRIPTION, Original_SYMPTOM_NAME, Original_REF_ID)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, false)>  _
        Public Overloads Overridable Function DeleteDataByClientNo(ByVal CLIENT_NO As Global.System.Nullable(Of Decimal)) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            If (CLIENT_NO.HasValue = true) Then
                command.Parameters(0).Value = CType(CLIENT_NO.Value,Decimal)
            Else
                command.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, false)>  _
        Public Overloads Overridable Function InsertQuery(ByVal CLIENT_NO As Global.System.Nullable(Of Decimal), ByVal SYMPTOM_ID As Global.System.Nullable(Of Decimal), ByVal DESCRIPTION As String, ByVal SYMPTOM_NAME As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(3)
            If (CLIENT_NO.HasValue = true) Then
                command.Parameters(0).Value = CType(CLIENT_NO.Value,Decimal)
            Else
                command.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (SYMPTOM_ID.HasValue = true) Then
                command.Parameters(1).Value = CType(SYMPTOM_ID.Value,Decimal)
            Else
                command.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (DESCRIPTION Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(DESCRIPTION,String)
            End If
            If (SYMPTOM_NAME Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(SYMPTOM_NAME,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class CCAMH_CLIENT_NEUROTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "CCAMH_CLIENT_NEURO"
            tableMapping.ColumnMappings.Add("REF_ID", "REF_ID")
            tableMapping.ColumnMappings.Add("CLIENT_NO", "CLIENT_NO")
            tableMapping.ColumnMappings.Add("SYMPTOM_ID", "SYMPTOM_ID")
            tableMapping.ColumnMappings.Add("DESCRIPTION", "DESCRIPTION")
            tableMapping.ColumnMappings.Add("SYMPTOM_NAME", "SYMPTOM_NAME")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [CCAMH_CLIENT_NEURO] WHERE (([REF_ID] = @Original_REF_ID) AND ((@IsNu"& _ 
                "ll_CLIENT_NO = 1 AND [CLIENT_NO] IS NULL) OR ([CLIENT_NO] = @Original_CLIENT_NO)"& _ 
                ") AND ((@IsNull_SYMPTOM_ID = 1 AND [SYMPTOM_ID] IS NULL) OR ([SYMPTOM_ID] = @Ori"& _ 
                "ginal_SYMPTOM_ID)) AND ((@IsNull_DESCRIPTION = 1 AND [DESCRIPTION] IS NULL) OR ("& _ 
                "[DESCRIPTION] = @Original_DESCRIPTION)) AND ((@IsNull_SYMPTOM_NAME = 1 AND [SYMP"& _ 
                "TOM_NAME] IS NULL) OR ([SYMPTOM_NAME] = @Original_SYMPTOM_NAME)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REF_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "REF_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SYMPTOM_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_ID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SYMPTOM_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "SYMPTOM_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DESCRIPTION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SYMPTOM_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SYMPTOM_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [CCAMH_CLIENT_NEURO] ([CLIENT_NO], [SYMPTOM_ID], [DESCRIPTION], [SYMP"& _ 
                "TOM_NAME]) VALUES (@CLIENT_NO, @SYMPTOM_ID, @DESCRIPTION, @SYMPTOM_NAME);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELEC"& _ 
                "T REF_ID, CLIENT_NO, SYMPTOM_ID, DESCRIPTION, SYMPTOM_NAME FROM CCAMH_CLIENT_NEU"& _ 
                "RO WHERE (REF_ID = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SYMPTOM_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "SYMPTOM_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SYMPTOM_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [CCAMH_CLIENT_NEURO] SET [CLIENT_NO] = @CLIENT_NO, [SYMPTOM_ID] = @SYMPTOM"& _ 
                "_ID, [DESCRIPTION] = @DESCRIPTION, [SYMPTOM_NAME] = @SYMPTOM_NAME WHERE (([REF_I"& _ 
                "D] = @Original_REF_ID) AND ((@IsNull_CLIENT_NO = 1 AND [CLIENT_NO] IS NULL) OR ("& _ 
                "[CLIENT_NO] = @Original_CLIENT_NO)) AND ((@IsNull_SYMPTOM_ID = 1 AND [SYMPTOM_ID"& _ 
                "] IS NULL) OR ([SYMPTOM_ID] = @Original_SYMPTOM_ID)) AND ((@IsNull_DESCRIPTION ="& _ 
                " 1 AND [DESCRIPTION] IS NULL) OR ([DESCRIPTION] = @Original_DESCRIPTION)) AND (("& _ 
                "@IsNull_SYMPTOM_NAME = 1 AND [SYMPTOM_NAME] IS NULL) OR ([SYMPTOM_NAME] = @Origi"& _ 
                "nal_SYMPTOM_NAME)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT REF_ID, CLIENT_NO, SYMPTOM_ID, DESCRIPTION, SYMPTOM"& _ 
                "_NAME FROM CCAMH_CLIENT_NEURO WHERE (REF_ID = @REF_ID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SYMPTOM_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "SYMPTOM_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SYMPTOM_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REF_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "REF_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SYMPTOM_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_ID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SYMPTOM_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "SYMPTOM_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DESCRIPTION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SYMPTOM_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SYMPTOM_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REF_ID", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "REF_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.KTGSYS.My.MySettings.Default.TakeoDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(3) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        REF_ID, CLIENT_NO, SYMPTOM_ID, DESCRIPTION, SYMPTOM_NAME"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM     "& _ 
                "       CCAMH_CLIENT_NEURO"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "DELETE FROM CCAMH_CLIENT_NEURO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (CLIENT_NO = @CLIENT_NO)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT CLIENT_NO, DESCRIPTION, REF_ID, SYMPTOM_ID, SYMPTOM_NAME FROM CCAMH_CLIENT"& _ 
                "_NEURO WHERE (CLIENT_NO = @CLIENT_NO)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "INSERT INTO CCAMH_CLIENT_NEURO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (CLIENT_NO, SYMPTOM_ID, "& _ 
                "DESCRIPTION, SYMPTOM_NAME)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"VALUES        (@CLIENT_NO,@SYMPTOM_ID,@DESCRIPTION,@"& _ 
                "SYMPTOM_NAME); "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT REF_ID, CLIENT_NO, SYMPTOM_ID, DESCRIPTION, SYMPTOM_NAME"& _ 
                " FROM CCAMH_CLIENT_NEURO WHERE (REF_ID = SCOPE_IDENTITY())"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SYMPTOM_ID", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "SYMPTOM_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESCRIPTION", Global.System.Data.SqlDbType.NVarChar, 200, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SYMPTOM_NAME", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SYMPTOM_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_ClientImpression.CCAMH_CLIENT_NEURODataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DS_ClientImpression.CCAMH_CLIENT_NEURODataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DS_ClientImpression.CCAMH_CLIENT_NEURODataTable = New DS_ClientImpression.CCAMH_CLIENT_NEURODataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As DS_ClientImpression.CCAMH_CLIENT_NEURODataTable, ByVal CLIENT_NO As Global.System.Nullable(Of Decimal)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (CLIENT_NO.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CLIENT_NO.Value,Decimal)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByClientNo(ByVal CLIENT_NO As Global.System.Nullable(Of Decimal)) As DS_ClientImpression.CCAMH_CLIENT_NEURODataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (CLIENT_NO.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CLIENT_NO.Value,Decimal)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DS_ClientImpression.CCAMH_CLIENT_NEURODataTable = New DS_ClientImpression.CCAMH_CLIENT_NEURODataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DS_ClientImpression.CCAMH_CLIENT_NEURODataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DS_ClientImpression) As Integer
            Return Me.Adapter.Update(dataSet, "CCAMH_CLIENT_NEURO")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_REF_ID As Decimal, ByVal Original_CLIENT_NO As Global.System.Nullable(Of Decimal), ByVal Original_SYMPTOM_ID As Global.System.Nullable(Of Decimal), ByVal Original_DESCRIPTION As String, ByVal Original_SYMPTOM_NAME As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_REF_ID,Decimal)
            If (Original_CLIENT_NO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_CLIENT_NO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Original_SYMPTOM_ID.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_SYMPTOM_ID.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_DESCRIPTION Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_DESCRIPTION,String)
            End If
            If (Original_SYMPTOM_NAME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_SYMPTOM_NAME,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal CLIENT_NO As Global.System.Nullable(Of Decimal), ByVal SYMPTOM_ID As Global.System.Nullable(Of Decimal), ByVal DESCRIPTION As String, ByVal SYMPTOM_NAME As String) As Integer
            If (CLIENT_NO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(CLIENT_NO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (SYMPTOM_ID.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(SYMPTOM_ID.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (DESCRIPTION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(DESCRIPTION,String)
            End If
            If (SYMPTOM_NAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(SYMPTOM_NAME,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal CLIENT_NO As Global.System.Nullable(Of Decimal), ByVal SYMPTOM_ID As Global.System.Nullable(Of Decimal), ByVal DESCRIPTION As String, ByVal SYMPTOM_NAME As String, ByVal Original_REF_ID As Decimal, ByVal Original_CLIENT_NO As Global.System.Nullable(Of Decimal), ByVal Original_SYMPTOM_ID As Global.System.Nullable(Of Decimal), ByVal Original_DESCRIPTION As String, ByVal Original_SYMPTOM_NAME As String, ByVal REF_ID As Decimal) As Integer
            If (CLIENT_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(CLIENT_NO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (SYMPTOM_ID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(SYMPTOM_ID.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (DESCRIPTION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(DESCRIPTION,String)
            End If
            If (SYMPTOM_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(SYMPTOM_NAME,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_REF_ID,Decimal)
            If (Original_CLIENT_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_CLIENT_NO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_SYMPTOM_ID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_SYMPTOM_ID.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_DESCRIPTION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_DESCRIPTION,String)
            End If
            If (Original_SYMPTOM_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_SYMPTOM_NAME,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(13).Value = CType(REF_ID,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal CLIENT_NO As Global.System.Nullable(Of Decimal), ByVal SYMPTOM_ID As Global.System.Nullable(Of Decimal), ByVal DESCRIPTION As String, ByVal SYMPTOM_NAME As String, ByVal Original_REF_ID As Decimal, ByVal Original_CLIENT_NO As Global.System.Nullable(Of Decimal), ByVal Original_SYMPTOM_ID As Global.System.Nullable(Of Decimal), ByVal Original_DESCRIPTION As String, ByVal Original_SYMPTOM_NAME As String) As Integer
            Return Me.Update(CLIENT_NO, SYMPTOM_ID, DESCRIPTION, SYMPTOM_NAME, Original_REF_ID, Original_CLIENT_NO, Original_SYMPTOM_ID, Original_DESCRIPTION, Original_SYMPTOM_NAME, Original_REF_ID)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, false)>  _
        Public Overloads Overridable Function DeleteDataByClientNo(ByVal CLIENT_NO As Global.System.Nullable(Of Decimal)) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            If (CLIENT_NO.HasValue = true) Then
                command.Parameters(0).Value = CType(CLIENT_NO.Value,Decimal)
            Else
                command.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, false)>  _
        Public Overloads Overridable Function InsertQuery(ByVal CLIENT_NO As Global.System.Nullable(Of Decimal), ByVal SYMPTOM_ID As Global.System.Nullable(Of Decimal), ByVal DESCRIPTION As String, ByVal SYMPTOM_NAME As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(3)
            If (CLIENT_NO.HasValue = true) Then
                command.Parameters(0).Value = CType(CLIENT_NO.Value,Decimal)
            Else
                command.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (SYMPTOM_ID.HasValue = true) Then
                command.Parameters(1).Value = CType(SYMPTOM_ID.Value,Decimal)
            Else
                command.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (DESCRIPTION Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(DESCRIPTION,String)
            End If
            If (SYMPTOM_NAME Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(SYMPTOM_NAME,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _cLIENT_CA_SOCIALTableAdapter As CLIENT_CA_SOCIALTableAdapter
        
        Private _cCAMH_CLIENT_DDISORDERTableAdapter As CCAMH_CLIENT_DDISORDERTableAdapter
        
        Private _cCAMH_DDISORDER_DETAILTableAdapter As CCAMH_DDISORDER_DETAILTableAdapter
        
        Private _cCAMH_PSYCHO_MINOR_DETAILTableAdapter As CCAMH_PSYCHO_MINOR_DETAILTableAdapter
        
        Private _cCAMH_NEUROTableAdapter As CCAMH_NEUROTableAdapter
        
        Private _cCAMH_PSYCHO_MAJORTableAdapter As CCAMH_PSYCHO_MAJORTableAdapter
        
        Private _cCAMH_PSYCHO_MINORTableAdapter As CCAMH_PSYCHO_MINORTableAdapter
        
        Private _cCAMH_PSYCHO_MAJOR_DETAILTableAdapter As CCAMH_PSYCHO_MAJOR_DETAILTableAdapter
        
        Private _cCAMH_CLIENT_NEUROTableAdapter As CCAMH_CLIENT_NEUROTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property CLIENT_CA_SOCIALTableAdapter() As CLIENT_CA_SOCIALTableAdapter
            Get
                Return Me._cLIENT_CA_SOCIALTableAdapter
            End Get
            Set
                Me._cLIENT_CA_SOCIALTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property CCAMH_CLIENT_DDISORDERTableAdapter() As CCAMH_CLIENT_DDISORDERTableAdapter
            Get
                Return Me._cCAMH_CLIENT_DDISORDERTableAdapter
            End Get
            Set
                Me._cCAMH_CLIENT_DDISORDERTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property CCAMH_DDISORDER_DETAILTableAdapter() As CCAMH_DDISORDER_DETAILTableAdapter
            Get
                Return Me._cCAMH_DDISORDER_DETAILTableAdapter
            End Get
            Set
                Me._cCAMH_DDISORDER_DETAILTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property CCAMH_PSYCHO_MINOR_DETAILTableAdapter() As CCAMH_PSYCHO_MINOR_DETAILTableAdapter
            Get
                Return Me._cCAMH_PSYCHO_MINOR_DETAILTableAdapter
            End Get
            Set
                Me._cCAMH_PSYCHO_MINOR_DETAILTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property CCAMH_NEUROTableAdapter() As CCAMH_NEUROTableAdapter
            Get
                Return Me._cCAMH_NEUROTableAdapter
            End Get
            Set
                Me._cCAMH_NEUROTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property CCAMH_PSYCHO_MAJORTableAdapter() As CCAMH_PSYCHO_MAJORTableAdapter
            Get
                Return Me._cCAMH_PSYCHO_MAJORTableAdapter
            End Get
            Set
                Me._cCAMH_PSYCHO_MAJORTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property CCAMH_PSYCHO_MINORTableAdapter() As CCAMH_PSYCHO_MINORTableAdapter
            Get
                Return Me._cCAMH_PSYCHO_MINORTableAdapter
            End Get
            Set
                Me._cCAMH_PSYCHO_MINORTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property CCAMH_PSYCHO_MAJOR_DETAILTableAdapter() As CCAMH_PSYCHO_MAJOR_DETAILTableAdapter
            Get
                Return Me._cCAMH_PSYCHO_MAJOR_DETAILTableAdapter
            End Get
            Set
                Me._cCAMH_PSYCHO_MAJOR_DETAILTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property CCAMH_CLIENT_NEUROTableAdapter() As CCAMH_CLIENT_NEUROTableAdapter
            Get
                Return Me._cCAMH_CLIENT_NEUROTableAdapter
            End Get
            Set
                Me._cCAMH_CLIENT_NEUROTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._cLIENT_CA_SOCIALTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._cLIENT_CA_SOCIALTableAdapter.Connection) Is Nothing)) Then
                    Return Me._cLIENT_CA_SOCIALTableAdapter.Connection
                End If
                If ((Not (Me._cCAMH_CLIENT_DDISORDERTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._cCAMH_CLIENT_DDISORDERTableAdapter.Connection) Is Nothing)) Then
                    Return Me._cCAMH_CLIENT_DDISORDERTableAdapter.Connection
                End If
                If ((Not (Me._cCAMH_DDISORDER_DETAILTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._cCAMH_DDISORDER_DETAILTableAdapter.Connection) Is Nothing)) Then
                    Return Me._cCAMH_DDISORDER_DETAILTableAdapter.Connection
                End If
                If ((Not (Me._cCAMH_PSYCHO_MINOR_DETAILTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._cCAMH_PSYCHO_MINOR_DETAILTableAdapter.Connection) Is Nothing)) Then
                    Return Me._cCAMH_PSYCHO_MINOR_DETAILTableAdapter.Connection
                End If
                If ((Not (Me._cCAMH_NEUROTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._cCAMH_NEUROTableAdapter.Connection) Is Nothing)) Then
                    Return Me._cCAMH_NEUROTableAdapter.Connection
                End If
                If ((Not (Me._cCAMH_PSYCHO_MAJORTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._cCAMH_PSYCHO_MAJORTableAdapter.Connection) Is Nothing)) Then
                    Return Me._cCAMH_PSYCHO_MAJORTableAdapter.Connection
                End If
                If ((Not (Me._cCAMH_PSYCHO_MINORTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._cCAMH_PSYCHO_MINORTableAdapter.Connection) Is Nothing)) Then
                    Return Me._cCAMH_PSYCHO_MINORTableAdapter.Connection
                End If
                If ((Not (Me._cCAMH_PSYCHO_MAJOR_DETAILTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._cCAMH_PSYCHO_MAJOR_DETAILTableAdapter.Connection) Is Nothing)) Then
                    Return Me._cCAMH_PSYCHO_MAJOR_DETAILTableAdapter.Connection
                End If
                If ((Not (Me._cCAMH_CLIENT_NEUROTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._cCAMH_CLIENT_NEUROTableAdapter.Connection) Is Nothing)) Then
                    Return Me._cCAMH_CLIENT_NEUROTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._cLIENT_CA_SOCIALTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._cCAMH_CLIENT_DDISORDERTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._cCAMH_DDISORDER_DETAILTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._cCAMH_PSYCHO_MINOR_DETAILTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._cCAMH_NEUROTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._cCAMH_PSYCHO_MAJORTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._cCAMH_PSYCHO_MINORTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._cCAMH_PSYCHO_MAJOR_DETAILTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._cCAMH_CLIENT_NEUROTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As DS_ClientImpression, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._cLIENT_CA_SOCIALTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.CLIENT_CA_SOCIAL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._cLIENT_CA_SOCIALTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._cCAMH_CLIENT_DDISORDERTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.CCAMH_CLIENT_DDISORDER.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._cCAMH_CLIENT_DDISORDERTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._cCAMH_DDISORDER_DETAILTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.CCAMH_DDISORDER_DETAIL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._cCAMH_DDISORDER_DETAILTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._cCAMH_PSYCHO_MINOR_DETAILTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.CCAMH_PSYCHO_MINOR_DETAIL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._cCAMH_PSYCHO_MINOR_DETAILTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._cCAMH_NEUROTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.CCAMH_NEURO.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._cCAMH_NEUROTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._cCAMH_PSYCHO_MAJORTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.CCAMH_PSYCHO_MAJOR.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._cCAMH_PSYCHO_MAJORTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._cCAMH_PSYCHO_MINORTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.CCAMH_PSYCHO_MINOR.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._cCAMH_PSYCHO_MINORTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._cCAMH_PSYCHO_MAJOR_DETAILTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.CCAMH_PSYCHO_MAJOR_DETAIL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._cCAMH_PSYCHO_MAJOR_DETAILTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._cCAMH_CLIENT_NEUROTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.CCAMH_CLIENT_NEURO.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._cCAMH_CLIENT_NEUROTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As DS_ClientImpression, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._cLIENT_CA_SOCIALTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.CLIENT_CA_SOCIAL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._cLIENT_CA_SOCIALTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._cCAMH_CLIENT_DDISORDERTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.CCAMH_CLIENT_DDISORDER.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._cCAMH_CLIENT_DDISORDERTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._cCAMH_DDISORDER_DETAILTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.CCAMH_DDISORDER_DETAIL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._cCAMH_DDISORDER_DETAILTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._cCAMH_PSYCHO_MINOR_DETAILTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.CCAMH_PSYCHO_MINOR_DETAIL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._cCAMH_PSYCHO_MINOR_DETAILTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._cCAMH_NEUROTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.CCAMH_NEURO.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._cCAMH_NEUROTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._cCAMH_PSYCHO_MAJORTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.CCAMH_PSYCHO_MAJOR.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._cCAMH_PSYCHO_MAJORTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._cCAMH_PSYCHO_MINORTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.CCAMH_PSYCHO_MINOR.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._cCAMH_PSYCHO_MINORTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._cCAMH_PSYCHO_MAJOR_DETAILTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.CCAMH_PSYCHO_MAJOR_DETAIL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._cCAMH_PSYCHO_MAJOR_DETAILTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._cCAMH_CLIENT_NEUROTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.CCAMH_CLIENT_NEURO.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._cCAMH_CLIENT_NEUROTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As DS_ClientImpression, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._cCAMH_CLIENT_NEUROTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.CCAMH_CLIENT_NEURO.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._cCAMH_CLIENT_NEUROTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._cCAMH_PSYCHO_MAJOR_DETAILTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.CCAMH_PSYCHO_MAJOR_DETAIL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._cCAMH_PSYCHO_MAJOR_DETAILTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._cCAMH_PSYCHO_MINORTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.CCAMH_PSYCHO_MINOR.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._cCAMH_PSYCHO_MINORTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._cCAMH_PSYCHO_MAJORTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.CCAMH_PSYCHO_MAJOR.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._cCAMH_PSYCHO_MAJORTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._cCAMH_NEUROTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.CCAMH_NEURO.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._cCAMH_NEUROTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._cCAMH_PSYCHO_MINOR_DETAILTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.CCAMH_PSYCHO_MINOR_DETAIL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._cCAMH_PSYCHO_MINOR_DETAILTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._cCAMH_DDISORDER_DETAILTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.CCAMH_DDISORDER_DETAIL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._cCAMH_DDISORDER_DETAILTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._cCAMH_CLIENT_DDISORDERTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.CCAMH_CLIENT_DDISORDER.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._cCAMH_CLIENT_DDISORDERTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._cLIENT_CA_SOCIALTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.CLIENT_CA_SOCIAL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._cLIENT_CA_SOCIALTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As DS_ClientImpression) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._cLIENT_CA_SOCIALTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._cLIENT_CA_SOCIALTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._cCAMH_CLIENT_DDISORDERTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._cCAMH_CLIENT_DDISORDERTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._cCAMH_DDISORDER_DETAILTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._cCAMH_DDISORDER_DETAILTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._cCAMH_PSYCHO_MINOR_DETAILTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._cCAMH_PSYCHO_MINOR_DETAILTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._cCAMH_NEUROTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._cCAMH_NEUROTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._cCAMH_PSYCHO_MAJORTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._cCAMH_PSYCHO_MAJORTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._cCAMH_PSYCHO_MINORTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._cCAMH_PSYCHO_MINORTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._cCAMH_PSYCHO_MAJOR_DETAILTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._cCAMH_PSYCHO_MAJOR_DETAILTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._cCAMH_CLIENT_NEUROTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._cCAMH_CLIENT_NEUROTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._cLIENT_CA_SOCIALTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._cLIENT_CA_SOCIALTableAdapter, Me._cLIENT_CA_SOCIALTableAdapter.Connection)
                    Me._cLIENT_CA_SOCIALTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._cLIENT_CA_SOCIALTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._cLIENT_CA_SOCIALTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._cLIENT_CA_SOCIALTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._cLIENT_CA_SOCIALTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._cCAMH_CLIENT_DDISORDERTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._cCAMH_CLIENT_DDISORDERTableAdapter, Me._cCAMH_CLIENT_DDISORDERTableAdapter.Connection)
                    Me._cCAMH_CLIENT_DDISORDERTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._cCAMH_CLIENT_DDISORDERTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._cCAMH_CLIENT_DDISORDERTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._cCAMH_CLIENT_DDISORDERTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._cCAMH_CLIENT_DDISORDERTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._cCAMH_DDISORDER_DETAILTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._cCAMH_DDISORDER_DETAILTableAdapter, Me._cCAMH_DDISORDER_DETAILTableAdapter.Connection)
                    Me._cCAMH_DDISORDER_DETAILTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._cCAMH_DDISORDER_DETAILTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._cCAMH_DDISORDER_DETAILTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._cCAMH_DDISORDER_DETAILTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._cCAMH_DDISORDER_DETAILTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._cCAMH_PSYCHO_MINOR_DETAILTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._cCAMH_PSYCHO_MINOR_DETAILTableAdapter, Me._cCAMH_PSYCHO_MINOR_DETAILTableAdapter.Connection)
                    Me._cCAMH_PSYCHO_MINOR_DETAILTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._cCAMH_PSYCHO_MINOR_DETAILTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._cCAMH_PSYCHO_MINOR_DETAILTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._cCAMH_PSYCHO_MINOR_DETAILTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._cCAMH_PSYCHO_MINOR_DETAILTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._cCAMH_NEUROTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._cCAMH_NEUROTableAdapter, Me._cCAMH_NEUROTableAdapter.Connection)
                    Me._cCAMH_NEUROTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._cCAMH_NEUROTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._cCAMH_NEUROTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._cCAMH_NEUROTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._cCAMH_NEUROTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._cCAMH_PSYCHO_MAJORTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._cCAMH_PSYCHO_MAJORTableAdapter, Me._cCAMH_PSYCHO_MAJORTableAdapter.Connection)
                    Me._cCAMH_PSYCHO_MAJORTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._cCAMH_PSYCHO_MAJORTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._cCAMH_PSYCHO_MAJORTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._cCAMH_PSYCHO_MAJORTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._cCAMH_PSYCHO_MAJORTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._cCAMH_PSYCHO_MINORTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._cCAMH_PSYCHO_MINORTableAdapter, Me._cCAMH_PSYCHO_MINORTableAdapter.Connection)
                    Me._cCAMH_PSYCHO_MINORTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._cCAMH_PSYCHO_MINORTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._cCAMH_PSYCHO_MINORTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._cCAMH_PSYCHO_MINORTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._cCAMH_PSYCHO_MINORTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._cCAMH_PSYCHO_MAJOR_DETAILTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._cCAMH_PSYCHO_MAJOR_DETAILTableAdapter, Me._cCAMH_PSYCHO_MAJOR_DETAILTableAdapter.Connection)
                    Me._cCAMH_PSYCHO_MAJOR_DETAILTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._cCAMH_PSYCHO_MAJOR_DETAILTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._cCAMH_PSYCHO_MAJOR_DETAILTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._cCAMH_PSYCHO_MAJOR_DETAILTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._cCAMH_PSYCHO_MAJOR_DETAILTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._cCAMH_CLIENT_NEUROTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._cCAMH_CLIENT_NEUROTableAdapter, Me._cCAMH_CLIENT_NEUROTableAdapter.Connection)
                    Me._cCAMH_CLIENT_NEUROTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._cCAMH_CLIENT_NEUROTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._cCAMH_CLIENT_NEUROTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._cCAMH_CLIENT_NEUROTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._cCAMH_CLIENT_NEUROTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._cLIENT_CA_SOCIALTableAdapter) Is Nothing) Then
                    Me._cLIENT_CA_SOCIALTableAdapter.Connection = CType(revertConnections(Me._cLIENT_CA_SOCIALTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._cLIENT_CA_SOCIALTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._cCAMH_CLIENT_DDISORDERTableAdapter) Is Nothing) Then
                    Me._cCAMH_CLIENT_DDISORDERTableAdapter.Connection = CType(revertConnections(Me._cCAMH_CLIENT_DDISORDERTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._cCAMH_CLIENT_DDISORDERTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._cCAMH_DDISORDER_DETAILTableAdapter) Is Nothing) Then
                    Me._cCAMH_DDISORDER_DETAILTableAdapter.Connection = CType(revertConnections(Me._cCAMH_DDISORDER_DETAILTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._cCAMH_DDISORDER_DETAILTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._cCAMH_PSYCHO_MINOR_DETAILTableAdapter) Is Nothing) Then
                    Me._cCAMH_PSYCHO_MINOR_DETAILTableAdapter.Connection = CType(revertConnections(Me._cCAMH_PSYCHO_MINOR_DETAILTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._cCAMH_PSYCHO_MINOR_DETAILTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._cCAMH_NEUROTableAdapter) Is Nothing) Then
                    Me._cCAMH_NEUROTableAdapter.Connection = CType(revertConnections(Me._cCAMH_NEUROTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._cCAMH_NEUROTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._cCAMH_PSYCHO_MAJORTableAdapter) Is Nothing) Then
                    Me._cCAMH_PSYCHO_MAJORTableAdapter.Connection = CType(revertConnections(Me._cCAMH_PSYCHO_MAJORTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._cCAMH_PSYCHO_MAJORTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._cCAMH_PSYCHO_MINORTableAdapter) Is Nothing) Then
                    Me._cCAMH_PSYCHO_MINORTableAdapter.Connection = CType(revertConnections(Me._cCAMH_PSYCHO_MINORTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._cCAMH_PSYCHO_MINORTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._cCAMH_PSYCHO_MAJOR_DETAILTableAdapter) Is Nothing) Then
                    Me._cCAMH_PSYCHO_MAJOR_DETAILTableAdapter.Connection = CType(revertConnections(Me._cCAMH_PSYCHO_MAJOR_DETAILTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._cCAMH_PSYCHO_MAJOR_DETAILTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._cCAMH_CLIENT_NEUROTableAdapter) Is Nothing) Then
                    Me._cCAMH_CLIENT_NEUROTableAdapter.Connection = CType(revertConnections(Me._cCAMH_CLIENT_NEUROTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._cCAMH_CLIENT_NEUROTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
