'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DSFastTrack"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DSFastTrack
    Inherits Global.System.Data.DataSet
    
    Private tableCCAMH_FAST_TRACKING As CCAMH_FAST_TRACKINGDataTable
    
    Private tableCCAMH_VIEW_TRACKING As CCAMH_VIEW_TRACKINGDataTable
    
    Private tableCCAMH_VIEW_ADVISED_CLIENTS As CCAMH_VIEW_ADVISED_CLIENTSDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("CCAMH_FAST_TRACKING")) Is Nothing) Then
                MyBase.Tables.Add(New CCAMH_FAST_TRACKINGDataTable(ds.Tables("CCAMH_FAST_TRACKING")))
            End If
            If (Not (ds.Tables("CCAMH_VIEW_TRACKING")) Is Nothing) Then
                MyBase.Tables.Add(New CCAMH_VIEW_TRACKINGDataTable(ds.Tables("CCAMH_VIEW_TRACKING")))
            End If
            If (Not (ds.Tables("CCAMH_VIEW_ADVISED_CLIENTS")) Is Nothing) Then
                MyBase.Tables.Add(New CCAMH_VIEW_ADVISED_CLIENTSDataTable(ds.Tables("CCAMH_VIEW_ADVISED_CLIENTS")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CCAMH_FAST_TRACKING() As CCAMH_FAST_TRACKINGDataTable
        Get
            Return Me.tableCCAMH_FAST_TRACKING
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CCAMH_VIEW_TRACKING() As CCAMH_VIEW_TRACKINGDataTable
        Get
            Return Me.tableCCAMH_VIEW_TRACKING
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CCAMH_VIEW_ADVISED_CLIENTS() As CCAMH_VIEW_ADVISED_CLIENTSDataTable
        Get
            Return Me.tableCCAMH_VIEW_ADVISED_CLIENTS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DSFastTrack = CType(MyBase.Clone,DSFastTrack)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("CCAMH_FAST_TRACKING")) Is Nothing) Then
                MyBase.Tables.Add(New CCAMH_FAST_TRACKINGDataTable(ds.Tables("CCAMH_FAST_TRACKING")))
            End If
            If (Not (ds.Tables("CCAMH_VIEW_TRACKING")) Is Nothing) Then
                MyBase.Tables.Add(New CCAMH_VIEW_TRACKINGDataTable(ds.Tables("CCAMH_VIEW_TRACKING")))
            End If
            If (Not (ds.Tables("CCAMH_VIEW_ADVISED_CLIENTS")) Is Nothing) Then
                MyBase.Tables.Add(New CCAMH_VIEW_ADVISED_CLIENTSDataTable(ds.Tables("CCAMH_VIEW_ADVISED_CLIENTS")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableCCAMH_FAST_TRACKING = CType(MyBase.Tables("CCAMH_FAST_TRACKING"),CCAMH_FAST_TRACKINGDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCCAMH_FAST_TRACKING) Is Nothing) Then
                Me.tableCCAMH_FAST_TRACKING.InitVars
            End If
        End If
        Me.tableCCAMH_VIEW_TRACKING = CType(MyBase.Tables("CCAMH_VIEW_TRACKING"),CCAMH_VIEW_TRACKINGDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCCAMH_VIEW_TRACKING) Is Nothing) Then
                Me.tableCCAMH_VIEW_TRACKING.InitVars
            End If
        End If
        Me.tableCCAMH_VIEW_ADVISED_CLIENTS = CType(MyBase.Tables("CCAMH_VIEW_ADVISED_CLIENTS"),CCAMH_VIEW_ADVISED_CLIENTSDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCCAMH_VIEW_ADVISED_CLIENTS) Is Nothing) Then
                Me.tableCCAMH_VIEW_ADVISED_CLIENTS.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "DSFastTrack"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DSFastTrack.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableCCAMH_FAST_TRACKING = New CCAMH_FAST_TRACKINGDataTable()
        MyBase.Tables.Add(Me.tableCCAMH_FAST_TRACKING)
        Me.tableCCAMH_VIEW_TRACKING = New CCAMH_VIEW_TRACKINGDataTable()
        MyBase.Tables.Add(Me.tableCCAMH_VIEW_TRACKING)
        Me.tableCCAMH_VIEW_ADVISED_CLIENTS = New CCAMH_VIEW_ADVISED_CLIENTSDataTable()
        MyBase.Tables.Add(Me.tableCCAMH_VIEW_ADVISED_CLIENTS)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCCAMH_FAST_TRACKING() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCCAMH_VIEW_TRACKING() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCCAMH_VIEW_ADVISED_CLIENTS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DSFastTrack = New DSFastTrack()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub CCAMH_FAST_TRACKINGRowChangeEventHandler(ByVal sender As Object, ByVal e As CCAMH_FAST_TRACKINGRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub CCAMH_VIEW_TRACKINGRowChangeEventHandler(ByVal sender As Object, ByVal e As CCAMH_VIEW_TRACKINGRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub CCAMH_VIEW_ADVISED_CLIENTSRowChangeEventHandler(ByVal sender As Object, ByVal e As CCAMH_VIEW_ADVISED_CLIENTSRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CCAMH_FAST_TRACKINGDataTable
        Inherits Global.System.Data.TypedTableBase(Of CCAMH_FAST_TRACKINGRow)
        
        Private columnFAST_TRACK_ID As Global.System.Data.DataColumn
        
        Private columnCREATE_DATE As Global.System.Data.DataColumn
        
        Private columnCLIENT_NO As Global.System.Data.DataColumn
        
        Private columnDATE_OF_LAST_FIT As Global.System.Data.DataColumn
        
        Private columnDATE_OF_FAST_TRACT As Global.System.Data.DataColumn
        
        Private columnNEXT_VIST As Global.System.Data.DataColumn
        
        Private columnTRACK_NOTE As Global.System.Data.DataColumn
        
        Private columnTRACKING_STATUS As Global.System.Data.DataColumn
        
        Private columnTHERAPY_NAME As Global.System.Data.DataColumn
        
        Private columnCART_LAVEL As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CCAMH_FAST_TRACKING"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FAST_TRACK_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFAST_TRACK_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATE_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATE_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DATE_OF_LAST_FITColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATE_OF_LAST_FIT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DATE_OF_FAST_TRACTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATE_OF_FAST_TRACT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NEXT_VISTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNEXT_VIST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TRACK_NOTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRACK_NOTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TRACKING_STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRACKING_STATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property THERAPY_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTHERAPY_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CART_LAVELColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCART_LAVEL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CCAMH_FAST_TRACKINGRow
            Get
                Return CType(Me.Rows(index),CCAMH_FAST_TRACKINGRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_FAST_TRACKINGRowChanging As CCAMH_FAST_TRACKINGRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_FAST_TRACKINGRowChanged As CCAMH_FAST_TRACKINGRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_FAST_TRACKINGRowDeleting As CCAMH_FAST_TRACKINGRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_FAST_TRACKINGRowDeleted As CCAMH_FAST_TRACKINGRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCCAMH_FAST_TRACKINGRow(ByVal row As CCAMH_FAST_TRACKINGRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCCAMH_FAST_TRACKINGRow(ByVal CREATE_DATE As Date, ByVal CLIENT_NO As Decimal, ByVal DATE_OF_LAST_FIT As Date, ByVal DATE_OF_FAST_TRACT As Date, ByVal NEXT_VIST As Date, ByVal TRACK_NOTE As String, ByVal TRACKING_STATUS As String, ByVal THERAPY_NAME As String, ByVal CART_LAVEL As String) As CCAMH_FAST_TRACKINGRow
            Dim rowCCAMH_FAST_TRACKINGRow As CCAMH_FAST_TRACKINGRow = CType(Me.NewRow,CCAMH_FAST_TRACKINGRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, CREATE_DATE, CLIENT_NO, DATE_OF_LAST_FIT, DATE_OF_FAST_TRACT, NEXT_VIST, TRACK_NOTE, TRACKING_STATUS, THERAPY_NAME, CART_LAVEL}
            rowCCAMH_FAST_TRACKINGRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCCAMH_FAST_TRACKINGRow)
            Return rowCCAMH_FAST_TRACKINGRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByFAST_TRACK_ID(ByVal FAST_TRACK_ID As Decimal) As CCAMH_FAST_TRACKINGRow
            Return CType(Me.Rows.Find(New Object() {FAST_TRACK_ID}),CCAMH_FAST_TRACKINGRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CCAMH_FAST_TRACKINGDataTable = CType(MyBase.Clone,CCAMH_FAST_TRACKINGDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CCAMH_FAST_TRACKINGDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnFAST_TRACK_ID = MyBase.Columns("FAST_TRACK_ID")
            Me.columnCREATE_DATE = MyBase.Columns("CREATE_DATE")
            Me.columnCLIENT_NO = MyBase.Columns("CLIENT_NO")
            Me.columnDATE_OF_LAST_FIT = MyBase.Columns("DATE_OF_LAST_FIT")
            Me.columnDATE_OF_FAST_TRACT = MyBase.Columns("DATE_OF_FAST_TRACT")
            Me.columnNEXT_VIST = MyBase.Columns("NEXT_VIST")
            Me.columnTRACK_NOTE = MyBase.Columns("TRACK_NOTE")
            Me.columnTRACKING_STATUS = MyBase.Columns("TRACKING_STATUS")
            Me.columnTHERAPY_NAME = MyBase.Columns("THERAPY_NAME")
            Me.columnCART_LAVEL = MyBase.Columns("CART_LAVEL")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnFAST_TRACK_ID = New Global.System.Data.DataColumn("FAST_TRACK_ID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFAST_TRACK_ID)
            Me.columnCREATE_DATE = New Global.System.Data.DataColumn("CREATE_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATE_DATE)
            Me.columnCLIENT_NO = New Global.System.Data.DataColumn("CLIENT_NO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_NO)
            Me.columnDATE_OF_LAST_FIT = New Global.System.Data.DataColumn("DATE_OF_LAST_FIT", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATE_OF_LAST_FIT)
            Me.columnDATE_OF_FAST_TRACT = New Global.System.Data.DataColumn("DATE_OF_FAST_TRACT", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATE_OF_FAST_TRACT)
            Me.columnNEXT_VIST = New Global.System.Data.DataColumn("NEXT_VIST", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNEXT_VIST)
            Me.columnTRACK_NOTE = New Global.System.Data.DataColumn("TRACK_NOTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRACK_NOTE)
            Me.columnTRACKING_STATUS = New Global.System.Data.DataColumn("TRACKING_STATUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRACKING_STATUS)
            Me.columnTHERAPY_NAME = New Global.System.Data.DataColumn("THERAPY_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTHERAPY_NAME)
            Me.columnCART_LAVEL = New Global.System.Data.DataColumn("CART_LAVEL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCART_LAVEL)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnFAST_TRACK_ID}, true))
            Me.columnFAST_TRACK_ID.AutoIncrement = true
            Me.columnFAST_TRACK_ID.AutoIncrementSeed = -1
            Me.columnFAST_TRACK_ID.AutoIncrementStep = -1
            Me.columnFAST_TRACK_ID.AllowDBNull = false
            Me.columnFAST_TRACK_ID.ReadOnly = true
            Me.columnFAST_TRACK_ID.Unique = true
            Me.columnTRACK_NOTE.MaxLength = 1550
            Me.columnTRACKING_STATUS.MaxLength = 50
            Me.columnTHERAPY_NAME.MaxLength = 50
            Me.columnCART_LAVEL.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCCAMH_FAST_TRACKINGRow() As CCAMH_FAST_TRACKINGRow
            Return CType(Me.NewRow,CCAMH_FAST_TRACKINGRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CCAMH_FAST_TRACKINGRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CCAMH_FAST_TRACKINGRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CCAMH_FAST_TRACKINGRowChangedEvent) Is Nothing) Then
                RaiseEvent CCAMH_FAST_TRACKINGRowChanged(Me, New CCAMH_FAST_TRACKINGRowChangeEvent(CType(e.Row,CCAMH_FAST_TRACKINGRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CCAMH_FAST_TRACKINGRowChangingEvent) Is Nothing) Then
                RaiseEvent CCAMH_FAST_TRACKINGRowChanging(Me, New CCAMH_FAST_TRACKINGRowChangeEvent(CType(e.Row,CCAMH_FAST_TRACKINGRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CCAMH_FAST_TRACKINGRowDeletedEvent) Is Nothing) Then
                RaiseEvent CCAMH_FAST_TRACKINGRowDeleted(Me, New CCAMH_FAST_TRACKINGRowChangeEvent(CType(e.Row,CCAMH_FAST_TRACKINGRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CCAMH_FAST_TRACKINGRowDeletingEvent) Is Nothing) Then
                RaiseEvent CCAMH_FAST_TRACKINGRowDeleting(Me, New CCAMH_FAST_TRACKINGRowChangeEvent(CType(e.Row,CCAMH_FAST_TRACKINGRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCCAMH_FAST_TRACKINGRow(ByVal row As CCAMH_FAST_TRACKINGRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSFastTrack = New DSFastTrack()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CCAMH_FAST_TRACKINGDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CCAMH_VIEW_TRACKINGDataTable
        Inherits Global.System.Data.TypedTableBase(Of CCAMH_VIEW_TRACKINGRow)
        
        Private columnCLIENT_NO As Global.System.Data.DataColumn
        
        Private columnCLIENT_NAME_KHM As Global.System.Data.DataColumn
        
        Private columnCLIENT_NAME As Global.System.Data.DataColumn
        
        Private columnCLIENT_SEX As Global.System.Data.DataColumn
        
        Private columnCAL_AGE As Global.System.Data.DataColumn
        
        Private columnCLIENT_DATE_REG As Global.System.Data.DataColumn
        
        Private columnFULL_ADDRESS_KH As Global.System.Data.DataColumn
        
        Private columnFULL_ADDRESS_ENG As Global.System.Data.DataColumn
        
        Private columnFAST_TRACK_ID As Global.System.Data.DataColumn
        
        Private columnCREATE_DATE As Global.System.Data.DataColumn
        
        Private columnDATE_OF_LAST_FIT As Global.System.Data.DataColumn
        
        Private columnDATE_OF_FAST_TRACT As Global.System.Data.DataColumn
        
        Private columnNEXT_VIST As Global.System.Data.DataColumn
        
        Private columnTRACK_NOTE As Global.System.Data.DataColumn
        
        Private columnTRACKING_STATUS As Global.System.Data.DataColumn
        
        Private columnTHERAPY_NAME As Global.System.Data.DataColumn
        
        Private columnCLIENT_ADDRESS_PHONE As Global.System.Data.DataColumn
        
        Private columnCART_LAVEL As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CCAMH_VIEW_TRACKING"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_NAME_KHMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_NAME_KHM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_SEXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_SEX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CAL_AGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCAL_AGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_DATE_REGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_DATE_REG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FULL_ADDRESS_KHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFULL_ADDRESS_KH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FULL_ADDRESS_ENGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFULL_ADDRESS_ENG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FAST_TRACK_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFAST_TRACK_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATE_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATE_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DATE_OF_LAST_FITColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATE_OF_LAST_FIT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DATE_OF_FAST_TRACTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATE_OF_FAST_TRACT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NEXT_VISTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNEXT_VIST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TRACK_NOTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRACK_NOTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TRACKING_STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRACKING_STATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property THERAPY_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTHERAPY_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_ADDRESS_PHONEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_ADDRESS_PHONE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CART_LAVELColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCART_LAVEL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CCAMH_VIEW_TRACKINGRow
            Get
                Return CType(Me.Rows(index),CCAMH_VIEW_TRACKINGRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_VIEW_TRACKINGRowChanging As CCAMH_VIEW_TRACKINGRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_VIEW_TRACKINGRowChanged As CCAMH_VIEW_TRACKINGRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_VIEW_TRACKINGRowDeleting As CCAMH_VIEW_TRACKINGRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_VIEW_TRACKINGRowDeleted As CCAMH_VIEW_TRACKINGRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCCAMH_VIEW_TRACKINGRow(ByVal row As CCAMH_VIEW_TRACKINGRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCCAMH_VIEW_TRACKINGRow( _
                    ByVal CLIENT_NO As Decimal,  _
                    ByVal CLIENT_NAME_KHM As String,  _
                    ByVal CLIENT_NAME As String,  _
                    ByVal CLIENT_SEX As String,  _
                    ByVal CAL_AGE As Integer,  _
                    ByVal CLIENT_DATE_REG As Date,  _
                    ByVal FULL_ADDRESS_KH As String,  _
                    ByVal FULL_ADDRESS_ENG As String,  _
                    ByVal FAST_TRACK_ID As Decimal,  _
                    ByVal CREATE_DATE As Date,  _
                    ByVal DATE_OF_LAST_FIT As Date,  _
                    ByVal DATE_OF_FAST_TRACT As Date,  _
                    ByVal NEXT_VIST As Date,  _
                    ByVal TRACK_NOTE As String,  _
                    ByVal TRACKING_STATUS As String,  _
                    ByVal THERAPY_NAME As String,  _
                    ByVal CLIENT_ADDRESS_PHONE As String,  _
                    ByVal CART_LAVEL As String) As CCAMH_VIEW_TRACKINGRow
            Dim rowCCAMH_VIEW_TRACKINGRow As CCAMH_VIEW_TRACKINGRow = CType(Me.NewRow,CCAMH_VIEW_TRACKINGRow)
            Dim columnValuesArray() As Object = New Object() {CLIENT_NO, CLIENT_NAME_KHM, CLIENT_NAME, CLIENT_SEX, CAL_AGE, CLIENT_DATE_REG, FULL_ADDRESS_KH, FULL_ADDRESS_ENG, FAST_TRACK_ID, CREATE_DATE, DATE_OF_LAST_FIT, DATE_OF_FAST_TRACT, NEXT_VIST, TRACK_NOTE, TRACKING_STATUS, THERAPY_NAME, CLIENT_ADDRESS_PHONE, CART_LAVEL}
            rowCCAMH_VIEW_TRACKINGRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCCAMH_VIEW_TRACKINGRow)
            Return rowCCAMH_VIEW_TRACKINGRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CCAMH_VIEW_TRACKINGDataTable = CType(MyBase.Clone,CCAMH_VIEW_TRACKINGDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CCAMH_VIEW_TRACKINGDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCLIENT_NO = MyBase.Columns("CLIENT_NO")
            Me.columnCLIENT_NAME_KHM = MyBase.Columns("CLIENT_NAME_KHM")
            Me.columnCLIENT_NAME = MyBase.Columns("CLIENT_NAME")
            Me.columnCLIENT_SEX = MyBase.Columns("CLIENT_SEX")
            Me.columnCAL_AGE = MyBase.Columns("CAL_AGE")
            Me.columnCLIENT_DATE_REG = MyBase.Columns("CLIENT_DATE_REG")
            Me.columnFULL_ADDRESS_KH = MyBase.Columns("FULL_ADDRESS_KH")
            Me.columnFULL_ADDRESS_ENG = MyBase.Columns("FULL_ADDRESS_ENG")
            Me.columnFAST_TRACK_ID = MyBase.Columns("FAST_TRACK_ID")
            Me.columnCREATE_DATE = MyBase.Columns("CREATE_DATE")
            Me.columnDATE_OF_LAST_FIT = MyBase.Columns("DATE_OF_LAST_FIT")
            Me.columnDATE_OF_FAST_TRACT = MyBase.Columns("DATE_OF_FAST_TRACT")
            Me.columnNEXT_VIST = MyBase.Columns("NEXT_VIST")
            Me.columnTRACK_NOTE = MyBase.Columns("TRACK_NOTE")
            Me.columnTRACKING_STATUS = MyBase.Columns("TRACKING_STATUS")
            Me.columnTHERAPY_NAME = MyBase.Columns("THERAPY_NAME")
            Me.columnCLIENT_ADDRESS_PHONE = MyBase.Columns("CLIENT_ADDRESS_PHONE")
            Me.columnCART_LAVEL = MyBase.Columns("CART_LAVEL")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCLIENT_NO = New Global.System.Data.DataColumn("CLIENT_NO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_NO)
            Me.columnCLIENT_NAME_KHM = New Global.System.Data.DataColumn("CLIENT_NAME_KHM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_NAME_KHM)
            Me.columnCLIENT_NAME = New Global.System.Data.DataColumn("CLIENT_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_NAME)
            Me.columnCLIENT_SEX = New Global.System.Data.DataColumn("CLIENT_SEX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_SEX)
            Me.columnCAL_AGE = New Global.System.Data.DataColumn("CAL_AGE", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCAL_AGE)
            Me.columnCLIENT_DATE_REG = New Global.System.Data.DataColumn("CLIENT_DATE_REG", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_DATE_REG)
            Me.columnFULL_ADDRESS_KH = New Global.System.Data.DataColumn("FULL_ADDRESS_KH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFULL_ADDRESS_KH)
            Me.columnFULL_ADDRESS_ENG = New Global.System.Data.DataColumn("FULL_ADDRESS_ENG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFULL_ADDRESS_ENG)
            Me.columnFAST_TRACK_ID = New Global.System.Data.DataColumn("FAST_TRACK_ID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFAST_TRACK_ID)
            Me.columnCREATE_DATE = New Global.System.Data.DataColumn("CREATE_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATE_DATE)
            Me.columnDATE_OF_LAST_FIT = New Global.System.Data.DataColumn("DATE_OF_LAST_FIT", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATE_OF_LAST_FIT)
            Me.columnDATE_OF_FAST_TRACT = New Global.System.Data.DataColumn("DATE_OF_FAST_TRACT", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATE_OF_FAST_TRACT)
            Me.columnNEXT_VIST = New Global.System.Data.DataColumn("NEXT_VIST", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNEXT_VIST)
            Me.columnTRACK_NOTE = New Global.System.Data.DataColumn("TRACK_NOTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRACK_NOTE)
            Me.columnTRACKING_STATUS = New Global.System.Data.DataColumn("TRACKING_STATUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRACKING_STATUS)
            Me.columnTHERAPY_NAME = New Global.System.Data.DataColumn("THERAPY_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTHERAPY_NAME)
            Me.columnCLIENT_ADDRESS_PHONE = New Global.System.Data.DataColumn("CLIENT_ADDRESS_PHONE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_ADDRESS_PHONE)
            Me.columnCART_LAVEL = New Global.System.Data.DataColumn("CART_LAVEL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCART_LAVEL)
            Me.columnCLIENT_NO.AllowDBNull = false
            Me.columnCLIENT_NAME_KHM.MaxLength = 100
            Me.columnCLIENT_NAME.MaxLength = 100
            Me.columnCLIENT_SEX.MaxLength = 1
            Me.columnCAL_AGE.ReadOnly = true
            Me.columnFULL_ADDRESS_KH.ReadOnly = true
            Me.columnFULL_ADDRESS_KH.MaxLength = 231
            Me.columnFULL_ADDRESS_ENG.ReadOnly = true
            Me.columnFULL_ADDRESS_ENG.MaxLength = 245
            Me.columnFAST_TRACK_ID.AllowDBNull = false
            Me.columnTRACK_NOTE.MaxLength = 150
            Me.columnTRACKING_STATUS.MaxLength = 50
            Me.columnTHERAPY_NAME.MaxLength = 50
            Me.columnCLIENT_ADDRESS_PHONE.MaxLength = 150
            Me.columnCART_LAVEL.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCCAMH_VIEW_TRACKINGRow() As CCAMH_VIEW_TRACKINGRow
            Return CType(Me.NewRow,CCAMH_VIEW_TRACKINGRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CCAMH_VIEW_TRACKINGRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CCAMH_VIEW_TRACKINGRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CCAMH_VIEW_TRACKINGRowChangedEvent) Is Nothing) Then
                RaiseEvent CCAMH_VIEW_TRACKINGRowChanged(Me, New CCAMH_VIEW_TRACKINGRowChangeEvent(CType(e.Row,CCAMH_VIEW_TRACKINGRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CCAMH_VIEW_TRACKINGRowChangingEvent) Is Nothing) Then
                RaiseEvent CCAMH_VIEW_TRACKINGRowChanging(Me, New CCAMH_VIEW_TRACKINGRowChangeEvent(CType(e.Row,CCAMH_VIEW_TRACKINGRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CCAMH_VIEW_TRACKINGRowDeletedEvent) Is Nothing) Then
                RaiseEvent CCAMH_VIEW_TRACKINGRowDeleted(Me, New CCAMH_VIEW_TRACKINGRowChangeEvent(CType(e.Row,CCAMH_VIEW_TRACKINGRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CCAMH_VIEW_TRACKINGRowDeletingEvent) Is Nothing) Then
                RaiseEvent CCAMH_VIEW_TRACKINGRowDeleting(Me, New CCAMH_VIEW_TRACKINGRowChangeEvent(CType(e.Row,CCAMH_VIEW_TRACKINGRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCCAMH_VIEW_TRACKINGRow(ByVal row As CCAMH_VIEW_TRACKINGRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSFastTrack = New DSFastTrack()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CCAMH_VIEW_TRACKINGDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CCAMH_VIEW_ADVISED_CLIENTSDataTable
        Inherits Global.System.Data.TypedTableBase(Of CCAMH_VIEW_ADVISED_CLIENTSRow)
        
        Private columnCLIENT_NO As Global.System.Data.DataColumn
        
        Private columnCLIENT_NAME_KHM As Global.System.Data.DataColumn
        
        Private columnCLIENT_NAME As Global.System.Data.DataColumn
        
        Private columnCLIENT_SEX As Global.System.Data.DataColumn
        
        Private columnCLIENT_AGE As Global.System.Data.DataColumn
        
        Private columnCLIENT_DOB As Global.System.Data.DataColumn
        
        Private columnCAL_AGE As Global.System.Data.DataColumn
        
        Private columnCLIENT_DATE_REG As Global.System.Data.DataColumn
        
        Private columnCLIENT_ADVISED_ASSESSMENT_DATE As Global.System.Data.DataColumn
        
        Private columnCLIENT_ADVISED_ASSESSMENT As Global.System.Data.DataColumn
        
        Private columnCLIENT_ADDRESS_PHONE As Global.System.Data.DataColumn
        
        Private columnPROV_EN As Global.System.Data.DataColumn
        
        Private columnDIST_EN As Global.System.Data.DataColumn
        
        Private columnVILL_EN As Global.System.Data.DataColumn
        
        Private columnCOMM_EN As Global.System.Data.DataColumn
        
        Private columnCOMM_KH As Global.System.Data.DataColumn
        
        Private columnVILL_KH As Global.System.Data.DataColumn
        
        Private columnDIST_KH As Global.System.Data.DataColumn
        
        Private columnPROV_KH As Global.System.Data.DataColumn
        
        Private columnCLIENT_IS_ASSESS_CHECKED As Global.System.Data.DataColumn
        
        Private columnCLIENT_ADVICED_ASSESSMENT_DETAIL As Global.System.Data.DataColumn
        
        Private columnCLIENT_ADVICED_ASSESSMENT_NOTE As Global.System.Data.DataColumn
        
        Private columnFULL_ADDRESS_KH As Global.System.Data.DataColumn
        
        Private columnFULL_ADDRESS_ENG As Global.System.Data.DataColumn
        
        Private columnCLIENT_PSYCHIATRIC As Global.System.Data.DataColumn
        
        Private columnCLIENT_NEUROLOGICAL As Global.System.Data.DataColumn
        
        Private columnCLIENT_DDISORDER As Global.System.Data.DataColumn
        
        Private columnCLIENT_PSYCHOLOGICAL As Global.System.Data.DataColumn
        
        Private columnDIAGNOSIS_CATE_ID As Global.System.Data.DataColumn
        
        Private columnIMPRESSION_DIAGNOSIS As Global.System.Data.DataColumn
        
        Private columnDIAGNOSIS_ID As Global.System.Data.DataColumn
        
        Private columnDIAGNOSIS As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CCAMH_VIEW_ADVISED_CLIENTS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_NAME_KHMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_NAME_KHM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_SEXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_SEX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_AGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_AGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_DOBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_DOB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CAL_AGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCAL_AGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_DATE_REGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_DATE_REG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_ADVISED_ASSESSMENT_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_ADVISED_ASSESSMENT_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_ADVISED_ASSESSMENTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_ADVISED_ASSESSMENT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_ADDRESS_PHONEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_ADDRESS_PHONE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PROV_ENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROV_EN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DIST_ENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIST_EN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VILL_ENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVILL_EN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COMM_ENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMM_EN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COMM_KHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMM_KH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VILL_KHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVILL_KH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DIST_KHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIST_KH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PROV_KHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROV_KH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_IS_ASSESS_CHECKEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_IS_ASSESS_CHECKED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_ADVICED_ASSESSMENT_DETAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_ADVICED_ASSESSMENT_DETAIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_ADVICED_ASSESSMENT_NOTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_ADVICED_ASSESSMENT_NOTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FULL_ADDRESS_KHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFULL_ADDRESS_KH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FULL_ADDRESS_ENGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFULL_ADDRESS_ENG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_PSYCHIATRICColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_PSYCHIATRIC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_NEUROLOGICALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_NEUROLOGICAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_DDISORDERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_DDISORDER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_PSYCHOLOGICALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_PSYCHOLOGICAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DIAGNOSIS_CATE_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIAGNOSIS_CATE_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IMPRESSION_DIAGNOSISColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMPRESSION_DIAGNOSIS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DIAGNOSIS_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIAGNOSIS_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DIAGNOSISColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIAGNOSIS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CCAMH_VIEW_ADVISED_CLIENTSRow
            Get
                Return CType(Me.Rows(index),CCAMH_VIEW_ADVISED_CLIENTSRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_VIEW_ADVISED_CLIENTSRowChanging As CCAMH_VIEW_ADVISED_CLIENTSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_VIEW_ADVISED_CLIENTSRowChanged As CCAMH_VIEW_ADVISED_CLIENTSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_VIEW_ADVISED_CLIENTSRowDeleting As CCAMH_VIEW_ADVISED_CLIENTSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_VIEW_ADVISED_CLIENTSRowDeleted As CCAMH_VIEW_ADVISED_CLIENTSRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCCAMH_VIEW_ADVISED_CLIENTSRow(ByVal row As CCAMH_VIEW_ADVISED_CLIENTSRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCCAMH_VIEW_ADVISED_CLIENTSRow( _
                    ByVal CLIENT_NO As Decimal,  _
                    ByVal CLIENT_NAME_KHM As String,  _
                    ByVal CLIENT_NAME As String,  _
                    ByVal CLIENT_SEX As String,  _
                    ByVal CLIENT_AGE As Decimal,  _
                    ByVal CLIENT_DOB As Date,  _
                    ByVal CAL_AGE As Integer,  _
                    ByVal CLIENT_DATE_REG As Date,  _
                    ByVal CLIENT_ADVISED_ASSESSMENT_DATE As Date,  _
                    ByVal CLIENT_ADVISED_ASSESSMENT As String,  _
                    ByVal CLIENT_ADDRESS_PHONE As String,  _
                    ByVal PROV_EN As String,  _
                    ByVal DIST_EN As String,  _
                    ByVal VILL_EN As String,  _
                    ByVal COMM_EN As String,  _
                    ByVal COMM_KH As String,  _
                    ByVal VILL_KH As String,  _
                    ByVal DIST_KH As String,  _
                    ByVal PROV_KH As String,  _
                    ByVal CLIENT_IS_ASSESS_CHECKED As Boolean,  _
                    ByVal CLIENT_ADVICED_ASSESSMENT_DETAIL As Boolean,  _
                    ByVal CLIENT_ADVICED_ASSESSMENT_NOTE As String,  _
                    ByVal FULL_ADDRESS_KH As String,  _
                    ByVal FULL_ADDRESS_ENG As String,  _
                    ByVal CLIENT_PSYCHIATRIC As Boolean,  _
                    ByVal CLIENT_NEUROLOGICAL As Boolean,  _
                    ByVal CLIENT_DDISORDER As Boolean,  _
                    ByVal CLIENT_PSYCHOLOGICAL As Boolean,  _
                    ByVal DIAGNOSIS_CATE_ID As Decimal,  _
                    ByVal IMPRESSION_DIAGNOSIS As String,  _
                    ByVal DIAGNOSIS_ID As Decimal,  _
                    ByVal DIAGNOSIS As String) As CCAMH_VIEW_ADVISED_CLIENTSRow
            Dim rowCCAMH_VIEW_ADVISED_CLIENTSRow As CCAMH_VIEW_ADVISED_CLIENTSRow = CType(Me.NewRow,CCAMH_VIEW_ADVISED_CLIENTSRow)
            Dim columnValuesArray() As Object = New Object() {CLIENT_NO, CLIENT_NAME_KHM, CLIENT_NAME, CLIENT_SEX, CLIENT_AGE, CLIENT_DOB, CAL_AGE, CLIENT_DATE_REG, CLIENT_ADVISED_ASSESSMENT_DATE, CLIENT_ADVISED_ASSESSMENT, CLIENT_ADDRESS_PHONE, PROV_EN, DIST_EN, VILL_EN, COMM_EN, COMM_KH, VILL_KH, DIST_KH, PROV_KH, CLIENT_IS_ASSESS_CHECKED, CLIENT_ADVICED_ASSESSMENT_DETAIL, CLIENT_ADVICED_ASSESSMENT_NOTE, FULL_ADDRESS_KH, FULL_ADDRESS_ENG, CLIENT_PSYCHIATRIC, CLIENT_NEUROLOGICAL, CLIENT_DDISORDER, CLIENT_PSYCHOLOGICAL, DIAGNOSIS_CATE_ID, IMPRESSION_DIAGNOSIS, DIAGNOSIS_ID, DIAGNOSIS}
            rowCCAMH_VIEW_ADVISED_CLIENTSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCCAMH_VIEW_ADVISED_CLIENTSRow)
            Return rowCCAMH_VIEW_ADVISED_CLIENTSRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCLIENT_NO(ByVal CLIENT_NO As Decimal) As CCAMH_VIEW_ADVISED_CLIENTSRow
            Return CType(Me.Rows.Find(New Object() {CLIENT_NO}),CCAMH_VIEW_ADVISED_CLIENTSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CCAMH_VIEW_ADVISED_CLIENTSDataTable = CType(MyBase.Clone,CCAMH_VIEW_ADVISED_CLIENTSDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CCAMH_VIEW_ADVISED_CLIENTSDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCLIENT_NO = MyBase.Columns("CLIENT_NO")
            Me.columnCLIENT_NAME_KHM = MyBase.Columns("CLIENT_NAME_KHM")
            Me.columnCLIENT_NAME = MyBase.Columns("CLIENT_NAME")
            Me.columnCLIENT_SEX = MyBase.Columns("CLIENT_SEX")
            Me.columnCLIENT_AGE = MyBase.Columns("CLIENT_AGE")
            Me.columnCLIENT_DOB = MyBase.Columns("CLIENT_DOB")
            Me.columnCAL_AGE = MyBase.Columns("CAL_AGE")
            Me.columnCLIENT_DATE_REG = MyBase.Columns("CLIENT_DATE_REG")
            Me.columnCLIENT_ADVISED_ASSESSMENT_DATE = MyBase.Columns("CLIENT_ADVISED_ASSESSMENT_DATE")
            Me.columnCLIENT_ADVISED_ASSESSMENT = MyBase.Columns("CLIENT_ADVISED_ASSESSMENT")
            Me.columnCLIENT_ADDRESS_PHONE = MyBase.Columns("CLIENT_ADDRESS_PHONE")
            Me.columnPROV_EN = MyBase.Columns("PROV_EN")
            Me.columnDIST_EN = MyBase.Columns("DIST_EN")
            Me.columnVILL_EN = MyBase.Columns("VILL_EN")
            Me.columnCOMM_EN = MyBase.Columns("COMM_EN")
            Me.columnCOMM_KH = MyBase.Columns("COMM_KH")
            Me.columnVILL_KH = MyBase.Columns("VILL_KH")
            Me.columnDIST_KH = MyBase.Columns("DIST_KH")
            Me.columnPROV_KH = MyBase.Columns("PROV_KH")
            Me.columnCLIENT_IS_ASSESS_CHECKED = MyBase.Columns("CLIENT_IS_ASSESS_CHECKED")
            Me.columnCLIENT_ADVICED_ASSESSMENT_DETAIL = MyBase.Columns("CLIENT_ADVICED_ASSESSMENT_DETAIL")
            Me.columnCLIENT_ADVICED_ASSESSMENT_NOTE = MyBase.Columns("CLIENT_ADVICED_ASSESSMENT_NOTE")
            Me.columnFULL_ADDRESS_KH = MyBase.Columns("FULL_ADDRESS_KH")
            Me.columnFULL_ADDRESS_ENG = MyBase.Columns("FULL_ADDRESS_ENG")
            Me.columnCLIENT_PSYCHIATRIC = MyBase.Columns("CLIENT_PSYCHIATRIC")
            Me.columnCLIENT_NEUROLOGICAL = MyBase.Columns("CLIENT_NEUROLOGICAL")
            Me.columnCLIENT_DDISORDER = MyBase.Columns("CLIENT_DDISORDER")
            Me.columnCLIENT_PSYCHOLOGICAL = MyBase.Columns("CLIENT_PSYCHOLOGICAL")
            Me.columnDIAGNOSIS_CATE_ID = MyBase.Columns("DIAGNOSIS_CATE_ID")
            Me.columnIMPRESSION_DIAGNOSIS = MyBase.Columns("IMPRESSION_DIAGNOSIS")
            Me.columnDIAGNOSIS_ID = MyBase.Columns("DIAGNOSIS_ID")
            Me.columnDIAGNOSIS = MyBase.Columns("DIAGNOSIS")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCLIENT_NO = New Global.System.Data.DataColumn("CLIENT_NO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_NO)
            Me.columnCLIENT_NAME_KHM = New Global.System.Data.DataColumn("CLIENT_NAME_KHM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_NAME_KHM)
            Me.columnCLIENT_NAME = New Global.System.Data.DataColumn("CLIENT_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_NAME)
            Me.columnCLIENT_SEX = New Global.System.Data.DataColumn("CLIENT_SEX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_SEX)
            Me.columnCLIENT_AGE = New Global.System.Data.DataColumn("CLIENT_AGE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_AGE)
            Me.columnCLIENT_DOB = New Global.System.Data.DataColumn("CLIENT_DOB", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_DOB)
            Me.columnCAL_AGE = New Global.System.Data.DataColumn("CAL_AGE", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCAL_AGE)
            Me.columnCLIENT_DATE_REG = New Global.System.Data.DataColumn("CLIENT_DATE_REG", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_DATE_REG)
            Me.columnCLIENT_ADVISED_ASSESSMENT_DATE = New Global.System.Data.DataColumn("CLIENT_ADVISED_ASSESSMENT_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_ADVISED_ASSESSMENT_DATE)
            Me.columnCLIENT_ADVISED_ASSESSMENT = New Global.System.Data.DataColumn("CLIENT_ADVISED_ASSESSMENT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_ADVISED_ASSESSMENT)
            Me.columnCLIENT_ADDRESS_PHONE = New Global.System.Data.DataColumn("CLIENT_ADDRESS_PHONE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_ADDRESS_PHONE)
            Me.columnPROV_EN = New Global.System.Data.DataColumn("PROV_EN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROV_EN)
            Me.columnDIST_EN = New Global.System.Data.DataColumn("DIST_EN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIST_EN)
            Me.columnVILL_EN = New Global.System.Data.DataColumn("VILL_EN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVILL_EN)
            Me.columnCOMM_EN = New Global.System.Data.DataColumn("COMM_EN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMM_EN)
            Me.columnCOMM_KH = New Global.System.Data.DataColumn("COMM_KH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMM_KH)
            Me.columnVILL_KH = New Global.System.Data.DataColumn("VILL_KH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVILL_KH)
            Me.columnDIST_KH = New Global.System.Data.DataColumn("DIST_KH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIST_KH)
            Me.columnPROV_KH = New Global.System.Data.DataColumn("PROV_KH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROV_KH)
            Me.columnCLIENT_IS_ASSESS_CHECKED = New Global.System.Data.DataColumn("CLIENT_IS_ASSESS_CHECKED", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_IS_ASSESS_CHECKED)
            Me.columnCLIENT_ADVICED_ASSESSMENT_DETAIL = New Global.System.Data.DataColumn("CLIENT_ADVICED_ASSESSMENT_DETAIL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_ADVICED_ASSESSMENT_DETAIL)
            Me.columnCLIENT_ADVICED_ASSESSMENT_NOTE = New Global.System.Data.DataColumn("CLIENT_ADVICED_ASSESSMENT_NOTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_ADVICED_ASSESSMENT_NOTE)
            Me.columnFULL_ADDRESS_KH = New Global.System.Data.DataColumn("FULL_ADDRESS_KH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFULL_ADDRESS_KH)
            Me.columnFULL_ADDRESS_ENG = New Global.System.Data.DataColumn("FULL_ADDRESS_ENG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFULL_ADDRESS_ENG)
            Me.columnCLIENT_PSYCHIATRIC = New Global.System.Data.DataColumn("CLIENT_PSYCHIATRIC", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_PSYCHIATRIC)
            Me.columnCLIENT_NEUROLOGICAL = New Global.System.Data.DataColumn("CLIENT_NEUROLOGICAL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_NEUROLOGICAL)
            Me.columnCLIENT_DDISORDER = New Global.System.Data.DataColumn("CLIENT_DDISORDER", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_DDISORDER)
            Me.columnCLIENT_PSYCHOLOGICAL = New Global.System.Data.DataColumn("CLIENT_PSYCHOLOGICAL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_PSYCHOLOGICAL)
            Me.columnDIAGNOSIS_CATE_ID = New Global.System.Data.DataColumn("DIAGNOSIS_CATE_ID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIAGNOSIS_CATE_ID)
            Me.columnIMPRESSION_DIAGNOSIS = New Global.System.Data.DataColumn("IMPRESSION_DIAGNOSIS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMPRESSION_DIAGNOSIS)
            Me.columnDIAGNOSIS_ID = New Global.System.Data.DataColumn("DIAGNOSIS_ID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIAGNOSIS_ID)
            Me.columnDIAGNOSIS = New Global.System.Data.DataColumn("DIAGNOSIS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIAGNOSIS)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCLIENT_NO}, true))
            Me.columnCLIENT_NO.AllowDBNull = false
            Me.columnCLIENT_NO.Unique = true
            Me.columnCLIENT_NAME_KHM.MaxLength = 100
            Me.columnCLIENT_NAME.MaxLength = 100
            Me.columnCLIENT_SEX.MaxLength = 1
            Me.columnCAL_AGE.ReadOnly = true
            Me.columnCLIENT_ADVISED_ASSESSMENT.MaxLength = 50
            Me.columnCLIENT_ADDRESS_PHONE.MaxLength = 150
            Me.columnPROV_EN.MaxLength = 50
            Me.columnDIST_EN.MaxLength = 50
            Me.columnVILL_EN.MaxLength = 50
            Me.columnCOMM_EN.MaxLength = 50
            Me.columnCOMM_KH.MaxLength = 50
            Me.columnVILL_KH.MaxLength = 50
            Me.columnDIST_KH.MaxLength = 50
            Me.columnPROV_KH.MaxLength = 50
            Me.columnCLIENT_ADVICED_ASSESSMENT_NOTE.MaxLength = 250
            Me.columnFULL_ADDRESS_KH.ReadOnly = true
            Me.columnFULL_ADDRESS_KH.MaxLength = 231
            Me.columnFULL_ADDRESS_ENG.ReadOnly = true
            Me.columnFULL_ADDRESS_ENG.MaxLength = 245
            Me.columnIMPRESSION_DIAGNOSIS.MaxLength = 150
            Me.columnDIAGNOSIS.MaxLength = 250
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCCAMH_VIEW_ADVISED_CLIENTSRow() As CCAMH_VIEW_ADVISED_CLIENTSRow
            Return CType(Me.NewRow,CCAMH_VIEW_ADVISED_CLIENTSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CCAMH_VIEW_ADVISED_CLIENTSRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CCAMH_VIEW_ADVISED_CLIENTSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CCAMH_VIEW_ADVISED_CLIENTSRowChangedEvent) Is Nothing) Then
                RaiseEvent CCAMH_VIEW_ADVISED_CLIENTSRowChanged(Me, New CCAMH_VIEW_ADVISED_CLIENTSRowChangeEvent(CType(e.Row,CCAMH_VIEW_ADVISED_CLIENTSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CCAMH_VIEW_ADVISED_CLIENTSRowChangingEvent) Is Nothing) Then
                RaiseEvent CCAMH_VIEW_ADVISED_CLIENTSRowChanging(Me, New CCAMH_VIEW_ADVISED_CLIENTSRowChangeEvent(CType(e.Row,CCAMH_VIEW_ADVISED_CLIENTSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CCAMH_VIEW_ADVISED_CLIENTSRowDeletedEvent) Is Nothing) Then
                RaiseEvent CCAMH_VIEW_ADVISED_CLIENTSRowDeleted(Me, New CCAMH_VIEW_ADVISED_CLIENTSRowChangeEvent(CType(e.Row,CCAMH_VIEW_ADVISED_CLIENTSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CCAMH_VIEW_ADVISED_CLIENTSRowDeletingEvent) Is Nothing) Then
                RaiseEvent CCAMH_VIEW_ADVISED_CLIENTSRowDeleting(Me, New CCAMH_VIEW_ADVISED_CLIENTSRowChangeEvent(CType(e.Row,CCAMH_VIEW_ADVISED_CLIENTSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCCAMH_VIEW_ADVISED_CLIENTSRow(ByVal row As CCAMH_VIEW_ADVISED_CLIENTSRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSFastTrack = New DSFastTrack()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CCAMH_VIEW_ADVISED_CLIENTSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CCAMH_FAST_TRACKINGRow
        Inherits Global.System.Data.DataRow
        
        Private tableCCAMH_FAST_TRACKING As CCAMH_FAST_TRACKINGDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCCAMH_FAST_TRACKING = CType(Me.Table,CCAMH_FAST_TRACKINGDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FAST_TRACK_ID() As Decimal
            Get
                Return CType(Me(Me.tableCCAMH_FAST_TRACKING.FAST_TRACK_IDColumn),Decimal)
            End Get
            Set
                Me(Me.tableCCAMH_FAST_TRACKING.FAST_TRACK_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREATE_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_FAST_TRACKING.CREATE_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CREATE_DATE' in table 'CCAMH_FAST_TRACKING' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_FAST_TRACKING.CREATE_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_NO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_FAST_TRACKING.CLIENT_NOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_NO' in table 'CCAMH_FAST_TRACKING' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_FAST_TRACKING.CLIENT_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DATE_OF_LAST_FIT() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_FAST_TRACKING.DATE_OF_LAST_FITColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DATE_OF_LAST_FIT' in table 'CCAMH_FAST_TRACKING' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_FAST_TRACKING.DATE_OF_LAST_FITColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DATE_OF_FAST_TRACT() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_FAST_TRACKING.DATE_OF_FAST_TRACTColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DATE_OF_FAST_TRACT' in table 'CCAMH_FAST_TRACKING' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_FAST_TRACKING.DATE_OF_FAST_TRACTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NEXT_VIST() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_FAST_TRACKING.NEXT_VISTColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NEXT_VIST' in table 'CCAMH_FAST_TRACKING' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_FAST_TRACKING.NEXT_VISTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TRACK_NOTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_FAST_TRACKING.TRACK_NOTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TRACK_NOTE' in table 'CCAMH_FAST_TRACKING' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_FAST_TRACKING.TRACK_NOTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TRACKING_STATUS() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_FAST_TRACKING.TRACKING_STATUSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TRACKING_STATUS' in table 'CCAMH_FAST_TRACKING' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_FAST_TRACKING.TRACKING_STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property THERAPY_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_FAST_TRACKING.THERAPY_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'THERAPY_NAME' in table 'CCAMH_FAST_TRACKING' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_FAST_TRACKING.THERAPY_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CART_LAVEL() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_FAST_TRACKING.CART_LAVELColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CART_LAVEL' in table 'CCAMH_FAST_TRACKING' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_FAST_TRACKING.CART_LAVELColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCREATE_DATENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_FAST_TRACKING.CREATE_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCREATE_DATENull()
            Me(Me.tableCCAMH_FAST_TRACKING.CREATE_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_NONull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_FAST_TRACKING.CLIENT_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_NONull()
            Me(Me.tableCCAMH_FAST_TRACKING.CLIENT_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDATE_OF_LAST_FITNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_FAST_TRACKING.DATE_OF_LAST_FITColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDATE_OF_LAST_FITNull()
            Me(Me.tableCCAMH_FAST_TRACKING.DATE_OF_LAST_FITColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDATE_OF_FAST_TRACTNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_FAST_TRACKING.DATE_OF_FAST_TRACTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDATE_OF_FAST_TRACTNull()
            Me(Me.tableCCAMH_FAST_TRACKING.DATE_OF_FAST_TRACTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNEXT_VISTNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_FAST_TRACKING.NEXT_VISTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNEXT_VISTNull()
            Me(Me.tableCCAMH_FAST_TRACKING.NEXT_VISTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTRACK_NOTENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_FAST_TRACKING.TRACK_NOTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTRACK_NOTENull()
            Me(Me.tableCCAMH_FAST_TRACKING.TRACK_NOTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTRACKING_STATUSNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_FAST_TRACKING.TRACKING_STATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTRACKING_STATUSNull()
            Me(Me.tableCCAMH_FAST_TRACKING.TRACKING_STATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTHERAPY_NAMENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_FAST_TRACKING.THERAPY_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTHERAPY_NAMENull()
            Me(Me.tableCCAMH_FAST_TRACKING.THERAPY_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCART_LAVELNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_FAST_TRACKING.CART_LAVELColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCART_LAVELNull()
            Me(Me.tableCCAMH_FAST_TRACKING.CART_LAVELColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CCAMH_VIEW_TRACKINGRow
        Inherits Global.System.Data.DataRow
        
        Private tableCCAMH_VIEW_TRACKING As CCAMH_VIEW_TRACKINGDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCCAMH_VIEW_TRACKING = CType(Me.Table,CCAMH_VIEW_TRACKINGDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_NO() As Decimal
            Get
                Return CType(Me(Me.tableCCAMH_VIEW_TRACKING.CLIENT_NOColumn),Decimal)
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_TRACKING.CLIENT_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_NAME_KHM() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_TRACKING.CLIENT_NAME_KHMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_NAME_KHM' in table 'CCAMH_VIEW_TRACKING' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_TRACKING.CLIENT_NAME_KHMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_TRACKING.CLIENT_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_NAME' in table 'CCAMH_VIEW_TRACKING' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_TRACKING.CLIENT_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_SEX() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_TRACKING.CLIENT_SEXColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_SEX' in table 'CCAMH_VIEW_TRACKING' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_TRACKING.CLIENT_SEXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CAL_AGE() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_TRACKING.CAL_AGEColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CAL_AGE' in table 'CCAMH_VIEW_TRACKING' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_TRACKING.CAL_AGEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_DATE_REG() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_TRACKING.CLIENT_DATE_REGColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_DATE_REG' in table 'CCAMH_VIEW_TRACKING' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_TRACKING.CLIENT_DATE_REGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FULL_ADDRESS_KH() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_TRACKING.FULL_ADDRESS_KHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FULL_ADDRESS_KH' in table 'CCAMH_VIEW_TRACKING' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_TRACKING.FULL_ADDRESS_KHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FULL_ADDRESS_ENG() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_TRACKING.FULL_ADDRESS_ENGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FULL_ADDRESS_ENG' in table 'CCAMH_VIEW_TRACKING' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_TRACKING.FULL_ADDRESS_ENGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FAST_TRACK_ID() As Decimal
            Get
                Return CType(Me(Me.tableCCAMH_VIEW_TRACKING.FAST_TRACK_IDColumn),Decimal)
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_TRACKING.FAST_TRACK_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREATE_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_TRACKING.CREATE_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CREATE_DATE' in table 'CCAMH_VIEW_TRACKING' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_TRACKING.CREATE_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DATE_OF_LAST_FIT() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_TRACKING.DATE_OF_LAST_FITColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DATE_OF_LAST_FIT' in table 'CCAMH_VIEW_TRACKING' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_TRACKING.DATE_OF_LAST_FITColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DATE_OF_FAST_TRACT() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_TRACKING.DATE_OF_FAST_TRACTColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DATE_OF_FAST_TRACT' in table 'CCAMH_VIEW_TRACKING' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_TRACKING.DATE_OF_FAST_TRACTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NEXT_VIST() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_TRACKING.NEXT_VISTColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NEXT_VIST' in table 'CCAMH_VIEW_TRACKING' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_TRACKING.NEXT_VISTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TRACK_NOTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_TRACKING.TRACK_NOTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TRACK_NOTE' in table 'CCAMH_VIEW_TRACKING' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_TRACKING.TRACK_NOTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TRACKING_STATUS() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_TRACKING.TRACKING_STATUSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TRACKING_STATUS' in table 'CCAMH_VIEW_TRACKING' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_TRACKING.TRACKING_STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property THERAPY_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_TRACKING.THERAPY_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'THERAPY_NAME' in table 'CCAMH_VIEW_TRACKING' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_TRACKING.THERAPY_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_ADDRESS_PHONE() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_TRACKING.CLIENT_ADDRESS_PHONEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_ADDRESS_PHONE' in table 'CCAMH_VIEW_TRACKING' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_TRACKING.CLIENT_ADDRESS_PHONEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CART_LAVEL() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_TRACKING.CART_LAVELColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CART_LAVEL' in table 'CCAMH_VIEW_TRACKING' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_TRACKING.CART_LAVELColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_NAME_KHMNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_TRACKING.CLIENT_NAME_KHMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_NAME_KHMNull()
            Me(Me.tableCCAMH_VIEW_TRACKING.CLIENT_NAME_KHMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_NAMENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_TRACKING.CLIENT_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_NAMENull()
            Me(Me.tableCCAMH_VIEW_TRACKING.CLIENT_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_SEXNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_TRACKING.CLIENT_SEXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_SEXNull()
            Me(Me.tableCCAMH_VIEW_TRACKING.CLIENT_SEXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCAL_AGENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_TRACKING.CAL_AGEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCAL_AGENull()
            Me(Me.tableCCAMH_VIEW_TRACKING.CAL_AGEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_DATE_REGNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_TRACKING.CLIENT_DATE_REGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_DATE_REGNull()
            Me(Me.tableCCAMH_VIEW_TRACKING.CLIENT_DATE_REGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFULL_ADDRESS_KHNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_TRACKING.FULL_ADDRESS_KHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFULL_ADDRESS_KHNull()
            Me(Me.tableCCAMH_VIEW_TRACKING.FULL_ADDRESS_KHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFULL_ADDRESS_ENGNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_TRACKING.FULL_ADDRESS_ENGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFULL_ADDRESS_ENGNull()
            Me(Me.tableCCAMH_VIEW_TRACKING.FULL_ADDRESS_ENGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCREATE_DATENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_TRACKING.CREATE_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCREATE_DATENull()
            Me(Me.tableCCAMH_VIEW_TRACKING.CREATE_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDATE_OF_LAST_FITNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_TRACKING.DATE_OF_LAST_FITColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDATE_OF_LAST_FITNull()
            Me(Me.tableCCAMH_VIEW_TRACKING.DATE_OF_LAST_FITColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDATE_OF_FAST_TRACTNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_TRACKING.DATE_OF_FAST_TRACTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDATE_OF_FAST_TRACTNull()
            Me(Me.tableCCAMH_VIEW_TRACKING.DATE_OF_FAST_TRACTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNEXT_VISTNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_TRACKING.NEXT_VISTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNEXT_VISTNull()
            Me(Me.tableCCAMH_VIEW_TRACKING.NEXT_VISTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTRACK_NOTENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_TRACKING.TRACK_NOTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTRACK_NOTENull()
            Me(Me.tableCCAMH_VIEW_TRACKING.TRACK_NOTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTRACKING_STATUSNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_TRACKING.TRACKING_STATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTRACKING_STATUSNull()
            Me(Me.tableCCAMH_VIEW_TRACKING.TRACKING_STATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTHERAPY_NAMENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_TRACKING.THERAPY_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTHERAPY_NAMENull()
            Me(Me.tableCCAMH_VIEW_TRACKING.THERAPY_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_ADDRESS_PHONENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_TRACKING.CLIENT_ADDRESS_PHONEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_ADDRESS_PHONENull()
            Me(Me.tableCCAMH_VIEW_TRACKING.CLIENT_ADDRESS_PHONEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCART_LAVELNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_TRACKING.CART_LAVELColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCART_LAVELNull()
            Me(Me.tableCCAMH_VIEW_TRACKING.CART_LAVELColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CCAMH_VIEW_ADVISED_CLIENTSRow
        Inherits Global.System.Data.DataRow
        
        Private tableCCAMH_VIEW_ADVISED_CLIENTS As CCAMH_VIEW_ADVISED_CLIENTSDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCCAMH_VIEW_ADVISED_CLIENTS = CType(Me.Table,CCAMH_VIEW_ADVISED_CLIENTSDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_NO() As Decimal
            Get
                Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_NOColumn),Decimal)
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_NAME_KHM() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_NAME_KHMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_NAME_KHM' in table 'CCAMH_VIEW_ADVISED_CLIENTS' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_NAME_KHMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_NAME' in table 'CCAMH_VIEW_ADVISED_CLIENTS' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_SEX() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_SEXColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_SEX' in table 'CCAMH_VIEW_ADVISED_CLIENTS' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_SEXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_AGE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_AGEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_AGE' in table 'CCAMH_VIEW_ADVISED_CLIENTS' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_AGEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_DOB() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_DOBColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_DOB' in table 'CCAMH_VIEW_ADVISED_CLIENTS' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_DOBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CAL_AGE() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CAL_AGEColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CAL_AGE' in table 'CCAMH_VIEW_ADVISED_CLIENTS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CAL_AGEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_DATE_REG() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_DATE_REGColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_DATE_REG' in table 'CCAMH_VIEW_ADVISED_CLIENTS' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_DATE_REGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_ADVISED_ASSESSMENT_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_ADVISED_ASSESSMENT_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_ADVISED_ASSESSMENT_DATE' in table 'CCAMH_VIEW_ADVISE"& _ 
                            "D_CLIENTS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_ADVISED_ASSESSMENT_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_ADVISED_ASSESSMENT() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_ADVISED_ASSESSMENTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_ADVISED_ASSESSMENT' in table 'CCAMH_VIEW_ADVISED_CLI"& _ 
                            "ENTS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_ADVISED_ASSESSMENTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_ADDRESS_PHONE() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_ADDRESS_PHONEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_ADDRESS_PHONE' in table 'CCAMH_VIEW_ADVISED_CLIENTS'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_ADDRESS_PHONEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PROV_EN() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.PROV_ENColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROV_EN' in table 'CCAMH_VIEW_ADVISED_CLIENTS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.PROV_ENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DIST_EN() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.DIST_ENColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIST_EN' in table 'CCAMH_VIEW_ADVISED_CLIENTS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.DIST_ENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VILL_EN() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.VILL_ENColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VILL_EN' in table 'CCAMH_VIEW_ADVISED_CLIENTS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.VILL_ENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COMM_EN() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.COMM_ENColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COMM_EN' in table 'CCAMH_VIEW_ADVISED_CLIENTS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.COMM_ENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COMM_KH() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.COMM_KHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COMM_KH' in table 'CCAMH_VIEW_ADVISED_CLIENTS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.COMM_KHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VILL_KH() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.VILL_KHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VILL_KH' in table 'CCAMH_VIEW_ADVISED_CLIENTS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.VILL_KHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DIST_KH() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.DIST_KHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIST_KH' in table 'CCAMH_VIEW_ADVISED_CLIENTS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.DIST_KHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PROV_KH() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.PROV_KHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROV_KH' in table 'CCAMH_VIEW_ADVISED_CLIENTS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.PROV_KHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_IS_ASSESS_CHECKED() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_IS_ASSESS_CHECKEDColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_IS_ASSESS_CHECKED' in table 'CCAMH_VIEW_ADVISED_CLIE"& _ 
                            "NTS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_IS_ASSESS_CHECKEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_ADVICED_ASSESSMENT_DETAIL() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_ADVICED_ASSESSMENT_DETAILColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_ADVICED_ASSESSMENT_DETAIL' in table 'CCAMH_VIEW_ADVI"& _ 
                            "SED_CLIENTS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_ADVICED_ASSESSMENT_DETAILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_ADVICED_ASSESSMENT_NOTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_ADVICED_ASSESSMENT_NOTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_ADVICED_ASSESSMENT_NOTE' in table 'CCAMH_VIEW_ADVISE"& _ 
                            "D_CLIENTS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_ADVICED_ASSESSMENT_NOTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FULL_ADDRESS_KH() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.FULL_ADDRESS_KHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FULL_ADDRESS_KH' in table 'CCAMH_VIEW_ADVISED_CLIENTS' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.FULL_ADDRESS_KHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FULL_ADDRESS_ENG() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.FULL_ADDRESS_ENGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FULL_ADDRESS_ENG' in table 'CCAMH_VIEW_ADVISED_CLIENTS' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.FULL_ADDRESS_ENGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_PSYCHIATRIC() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_PSYCHIATRICColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_PSYCHIATRIC' in table 'CCAMH_VIEW_ADVISED_CLIENTS' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_PSYCHIATRICColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_NEUROLOGICAL() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_NEUROLOGICALColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_NEUROLOGICAL' in table 'CCAMH_VIEW_ADVISED_CLIENTS' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_NEUROLOGICALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_DDISORDER() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_DDISORDERColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_DDISORDER' in table 'CCAMH_VIEW_ADVISED_CLIENTS' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_DDISORDERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_PSYCHOLOGICAL() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_PSYCHOLOGICALColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_PSYCHOLOGICAL' in table 'CCAMH_VIEW_ADVISED_CLIENTS'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_PSYCHOLOGICALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DIAGNOSIS_CATE_ID() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.DIAGNOSIS_CATE_IDColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIAGNOSIS_CATE_ID' in table 'CCAMH_VIEW_ADVISED_CLIENTS' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.DIAGNOSIS_CATE_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IMPRESSION_DIAGNOSIS() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.IMPRESSION_DIAGNOSISColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IMPRESSION_DIAGNOSIS' in table 'CCAMH_VIEW_ADVISED_CLIENTS'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.IMPRESSION_DIAGNOSISColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DIAGNOSIS_ID() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.DIAGNOSIS_IDColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIAGNOSIS_ID' in table 'CCAMH_VIEW_ADVISED_CLIENTS' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.DIAGNOSIS_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DIAGNOSIS() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.DIAGNOSISColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIAGNOSIS' in table 'CCAMH_VIEW_ADVISED_CLIENTS' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.DIAGNOSISColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_NAME_KHMNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_NAME_KHMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_NAME_KHMNull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_NAME_KHMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_NAMENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_NAMENull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_SEXNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_SEXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_SEXNull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_SEXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_AGENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_AGEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_AGENull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_AGEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_DOBNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_DOBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_DOBNull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_DOBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCAL_AGENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CAL_AGEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCAL_AGENull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CAL_AGEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_DATE_REGNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_DATE_REGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_DATE_REGNull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_DATE_REGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_ADVISED_ASSESSMENT_DATENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_ADVISED_ASSESSMENT_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_ADVISED_ASSESSMENT_DATENull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_ADVISED_ASSESSMENT_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_ADVISED_ASSESSMENTNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_ADVISED_ASSESSMENTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_ADVISED_ASSESSMENTNull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_ADVISED_ASSESSMENTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_ADDRESS_PHONENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_ADDRESS_PHONEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_ADDRESS_PHONENull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_ADDRESS_PHONEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPROV_ENNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.PROV_ENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPROV_ENNull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.PROV_ENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDIST_ENNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.DIST_ENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDIST_ENNull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.DIST_ENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVILL_ENNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.VILL_ENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVILL_ENNull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.VILL_ENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOMM_ENNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.COMM_ENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOMM_ENNull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.COMM_ENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOMM_KHNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.COMM_KHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOMM_KHNull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.COMM_KHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVILL_KHNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.VILL_KHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVILL_KHNull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.VILL_KHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDIST_KHNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.DIST_KHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDIST_KHNull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.DIST_KHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPROV_KHNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.PROV_KHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPROV_KHNull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.PROV_KHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_IS_ASSESS_CHECKEDNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_IS_ASSESS_CHECKEDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_IS_ASSESS_CHECKEDNull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_IS_ASSESS_CHECKEDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_ADVICED_ASSESSMENT_DETAILNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_ADVICED_ASSESSMENT_DETAILColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_ADVICED_ASSESSMENT_DETAILNull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_ADVICED_ASSESSMENT_DETAILColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_ADVICED_ASSESSMENT_NOTENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_ADVICED_ASSESSMENT_NOTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_ADVICED_ASSESSMENT_NOTENull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_ADVICED_ASSESSMENT_NOTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFULL_ADDRESS_KHNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.FULL_ADDRESS_KHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFULL_ADDRESS_KHNull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.FULL_ADDRESS_KHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFULL_ADDRESS_ENGNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.FULL_ADDRESS_ENGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFULL_ADDRESS_ENGNull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.FULL_ADDRESS_ENGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_PSYCHIATRICNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_PSYCHIATRICColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_PSYCHIATRICNull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_PSYCHIATRICColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_NEUROLOGICALNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_NEUROLOGICALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_NEUROLOGICALNull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_NEUROLOGICALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_DDISORDERNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_DDISORDERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_DDISORDERNull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_DDISORDERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_PSYCHOLOGICALNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_PSYCHOLOGICALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_PSYCHOLOGICALNull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.CLIENT_PSYCHOLOGICALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDIAGNOSIS_CATE_IDNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.DIAGNOSIS_CATE_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDIAGNOSIS_CATE_IDNull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.DIAGNOSIS_CATE_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIMPRESSION_DIAGNOSISNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.IMPRESSION_DIAGNOSISColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIMPRESSION_DIAGNOSISNull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.IMPRESSION_DIAGNOSISColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDIAGNOSIS_IDNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.DIAGNOSIS_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDIAGNOSIS_IDNull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.DIAGNOSIS_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDIAGNOSISNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.DIAGNOSISColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDIAGNOSISNull()
            Me(Me.tableCCAMH_VIEW_ADVISED_CLIENTS.DIAGNOSISColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class CCAMH_FAST_TRACKINGRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CCAMH_FAST_TRACKINGRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As CCAMH_FAST_TRACKINGRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As CCAMH_FAST_TRACKINGRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class CCAMH_VIEW_TRACKINGRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CCAMH_VIEW_TRACKINGRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As CCAMH_VIEW_TRACKINGRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As CCAMH_VIEW_TRACKINGRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class CCAMH_VIEW_ADVISED_CLIENTSRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CCAMH_VIEW_ADVISED_CLIENTSRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As CCAMH_VIEW_ADVISED_CLIENTSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As CCAMH_VIEW_ADVISED_CLIENTSRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace DSFastTrackTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class CCAMH_FAST_TRACKINGTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "CCAMH_FAST_TRACKING"
            tableMapping.ColumnMappings.Add("FAST_TRACK_ID", "FAST_TRACK_ID")
            tableMapping.ColumnMappings.Add("CREATE_DATE", "CREATE_DATE")
            tableMapping.ColumnMappings.Add("CLIENT_NO", "CLIENT_NO")
            tableMapping.ColumnMappings.Add("DATE_OF_LAST_FIT", "DATE_OF_LAST_FIT")
            tableMapping.ColumnMappings.Add("DATE_OF_FAST_TRACT", "DATE_OF_FAST_TRACT")
            tableMapping.ColumnMappings.Add("NEXT_VIST", "NEXT_VIST")
            tableMapping.ColumnMappings.Add("TRACK_NOTE", "TRACK_NOTE")
            tableMapping.ColumnMappings.Add("TRACKING_STATUS", "TRACKING_STATUS")
            tableMapping.ColumnMappings.Add("THERAPY_NAME", "THERAPY_NAME")
            tableMapping.ColumnMappings.Add("CART_LAVEL", "CART_LAVEL")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [CCAMH_FAST_TRACKING] WHERE (([FAST_TRACK_ID] = @Original_FAST_TRACK_"& _ 
                "ID) AND ((@IsNull_CREATE_DATE = 1 AND [CREATE_DATE] IS NULL) OR ([CREATE_DATE] ="& _ 
                " @Original_CREATE_DATE)) AND ((@IsNull_CLIENT_NO = 1 AND [CLIENT_NO] IS NULL) OR"& _ 
                " ([CLIENT_NO] = @Original_CLIENT_NO)) AND ((@IsNull_DATE_OF_LAST_FIT = 1 AND [DA"& _ 
                "TE_OF_LAST_FIT] IS NULL) OR ([DATE_OF_LAST_FIT] = @Original_DATE_OF_LAST_FIT)) A"& _ 
                "ND ((@IsNull_DATE_OF_FAST_TRACT = 1 AND [DATE_OF_FAST_TRACT] IS NULL) OR ([DATE_"& _ 
                "OF_FAST_TRACT] = @Original_DATE_OF_FAST_TRACT)) AND ((@IsNull_NEXT_VIST = 1 AND "& _ 
                "[NEXT_VIST] IS NULL) OR ([NEXT_VIST] = @Original_NEXT_VIST)) AND ((@IsNull_TRACK"& _ 
                "_NOTE = 1 AND [TRACK_NOTE] IS NULL) OR ([TRACK_NOTE] = @Original_TRACK_NOTE)) AN"& _ 
                "D ((@IsNull_TRACKING_STATUS = 1 AND [TRACKING_STATUS] IS NULL) OR ([TRACKING_STA"& _ 
                "TUS] = @Original_TRACKING_STATUS)) AND ((@IsNull_THERAPY_NAME = 1 AND [THERAPY_N"& _ 
                "AME] IS NULL) OR ([THERAPY_NAME] = @Original_THERAPY_NAME)) AND ((@IsNull_CART_L"& _ 
                "AVEL = 1 AND [CART_LAVEL] IS NULL) OR ([CART_LAVEL] = @Original_CART_LAVEL)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FAST_TRACK_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "FAST_TRACK_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CREATE_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CREATE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DATE_OF_LAST_FIT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATE_OF_LAST_FIT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DATE_OF_LAST_FIT", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATE_OF_LAST_FIT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DATE_OF_FAST_TRACT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATE_OF_FAST_TRACT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DATE_OF_FAST_TRACT", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATE_OF_FAST_TRACT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NEXT_VIST", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NEXT_VIST", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NEXT_VIST", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NEXT_VIST", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TRACK_NOTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRACK_NOTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TRACK_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRACK_NOTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TRACKING_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRACKING_STATUS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TRACKING_STATUS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRACKING_STATUS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_THERAPY_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "THERAPY_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_THERAPY_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "THERAPY_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CART_LAVEL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CART_LAVEL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CART_LAVEL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CART_LAVEL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [CCAMH_FAST_TRACKING] ([CREATE_DATE], [CLIENT_NO], [DATE_OF_LAST_FIT]"& _ 
                ", [DATE_OF_FAST_TRACT], [NEXT_VIST], [TRACK_NOTE], [TRACKING_STATUS], [THERAPY_N"& _ 
                "AME], [CART_LAVEL]) VALUES (@CREATE_DATE, @CLIENT_NO, @DATE_OF_LAST_FIT, @DATE_O"& _ 
                "F_FAST_TRACT, @NEXT_VIST, @TRACK_NOTE, @TRACKING_STATUS, @THERAPY_NAME, @CART_LA"& _ 
                "VEL);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT FAST_TRACK_ID, CREATE_DATE, CLIENT_NO, DATE_OF_LAST_FIT, DATE_OF_F"& _ 
                "AST_TRACT, NEXT_VIST, TRACK_NOTE, TRACKING_STATUS, THERAPY_NAME, CART_LAVEL FROM"& _ 
                " CCAMH_FAST_TRACKING WHERE (FAST_TRACK_ID = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CREATE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATE_OF_LAST_FIT", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATE_OF_LAST_FIT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATE_OF_FAST_TRACT", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATE_OF_FAST_TRACT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NEXT_VIST", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NEXT_VIST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TRACK_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRACK_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TRACKING_STATUS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRACKING_STATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@THERAPY_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "THERAPY_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CART_LAVEL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CART_LAVEL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [CCAMH_FAST_TRACKING] SET [CREATE_DATE] = @CREATE_DATE, [CLIENT_NO] = @CLI"& _ 
                "ENT_NO, [DATE_OF_LAST_FIT] = @DATE_OF_LAST_FIT, [DATE_OF_FAST_TRACT] = @DATE_OF_"& _ 
                "FAST_TRACT, [NEXT_VIST] = @NEXT_VIST, [TRACK_NOTE] = @TRACK_NOTE, [TRACKING_STAT"& _ 
                "US] = @TRACKING_STATUS, [THERAPY_NAME] = @THERAPY_NAME, [CART_LAVEL] = @CART_LAV"& _ 
                "EL WHERE (([FAST_TRACK_ID] = @Original_FAST_TRACK_ID) AND ((@IsNull_CREATE_DATE "& _ 
                "= 1 AND [CREATE_DATE] IS NULL) OR ([CREATE_DATE] = @Original_CREATE_DATE)) AND ("& _ 
                "(@IsNull_CLIENT_NO = 1 AND [CLIENT_NO] IS NULL) OR ([CLIENT_NO] = @Original_CLIE"& _ 
                "NT_NO)) AND ((@IsNull_DATE_OF_LAST_FIT = 1 AND [DATE_OF_LAST_FIT] IS NULL) OR (["& _ 
                "DATE_OF_LAST_FIT] = @Original_DATE_OF_LAST_FIT)) AND ((@IsNull_DATE_OF_FAST_TRAC"& _ 
                "T = 1 AND [DATE_OF_FAST_TRACT] IS NULL) OR ([DATE_OF_FAST_TRACT] = @Original_DAT"& _ 
                "E_OF_FAST_TRACT)) AND ((@IsNull_NEXT_VIST = 1 AND [NEXT_VIST] IS NULL) OR ([NEXT"& _ 
                "_VIST] = @Original_NEXT_VIST)) AND ((@IsNull_TRACK_NOTE = 1 AND [TRACK_NOTE] IS "& _ 
                "NULL) OR ([TRACK_NOTE] = @Original_TRACK_NOTE)) AND ((@IsNull_TRACKING_STATUS = "& _ 
                "1 AND [TRACKING_STATUS] IS NULL) OR ([TRACKING_STATUS] = @Original_TRACKING_STAT"& _ 
                "US)) AND ((@IsNull_THERAPY_NAME = 1 AND [THERAPY_NAME] IS NULL) OR ([THERAPY_NAM"& _ 
                "E] = @Original_THERAPY_NAME)) AND ((@IsNull_CART_LAVEL = 1 AND [CART_LAVEL] IS N"& _ 
                "ULL) OR ([CART_LAVEL] = @Original_CART_LAVEL)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT FAST_TRACK_ID, CREATE_D"& _ 
                "ATE, CLIENT_NO, DATE_OF_LAST_FIT, DATE_OF_FAST_TRACT, NEXT_VIST, TRACK_NOTE, TRA"& _ 
                "CKING_STATUS, THERAPY_NAME, CART_LAVEL FROM CCAMH_FAST_TRACKING WHERE (FAST_TRAC"& _ 
                "K_ID = @FAST_TRACK_ID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CREATE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATE_OF_LAST_FIT", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATE_OF_LAST_FIT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATE_OF_FAST_TRACT", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATE_OF_FAST_TRACT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NEXT_VIST", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NEXT_VIST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TRACK_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRACK_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TRACKING_STATUS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRACKING_STATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@THERAPY_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "THERAPY_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CART_LAVEL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CART_LAVEL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FAST_TRACK_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "FAST_TRACK_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CREATE_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CREATE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DATE_OF_LAST_FIT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATE_OF_LAST_FIT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DATE_OF_LAST_FIT", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATE_OF_LAST_FIT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DATE_OF_FAST_TRACT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATE_OF_FAST_TRACT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DATE_OF_FAST_TRACT", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATE_OF_FAST_TRACT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NEXT_VIST", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NEXT_VIST", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NEXT_VIST", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NEXT_VIST", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TRACK_NOTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRACK_NOTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TRACK_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRACK_NOTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TRACKING_STATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRACKING_STATUS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TRACKING_STATUS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRACKING_STATUS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_THERAPY_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "THERAPY_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_THERAPY_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "THERAPY_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CART_LAVEL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CART_LAVEL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CART_LAVEL", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CART_LAVEL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FAST_TRACK_ID", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "FAST_TRACK_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.KTGSYS.My.MySettings.Default.TakeoDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(3) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        FAST_TRACK_ID, CREATE_DATE, CLIENT_NO, DATE_OF_LAST_FIT, DATE_OF_FA"& _ 
                "ST_TRACT, NEXT_VIST, TRACK_NOTE, TRACKING_STATUS, THERAPY_NAME, CART_LAVEL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM"& _ 
                "            CCAMH_FAST_TRACKING"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT COUNT(*) FROM CCAMH_FAST_TRACKING"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"CLIENT_NO=@CLIENT_NO"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NO", Global.System.Data.SqlDbType.[Variant], 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "INSERT INTO CCAMH_FAST_TRACKING"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (CREATE_DATE, CLIENT_NO"& _ 
                ", DATE_OF_LAST_FIT, DATE_OF_FAST_TRACT, NEXT_VIST, TRACK_NOTE, TRACKING_STATUS, "& _ 
                "THERAPY_NAME, CART_LAVEL)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"VALUES        (@CREATE_DATE,@CLIENT_NO,@DATE_OF_LAST_"& _ 
                "FIT,@DATE_OF_FAST_TRACT,@NEXT_VIST,@TRACK_NOTE,@TRACKING_STATUS,@THERAPY_NAME,@C"& _ 
                "ART_LAVEL)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CREATE_DATE", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATE_OF_LAST_FIT", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "DATE_OF_LAST_FIT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATE_OF_FAST_TRACT", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "DATE_OF_FAST_TRACT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NEXT_VIST", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "NEXT_VIST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TRACK_NOTE", Global.System.Data.SqlDbType.NVarChar, 1550, Global.System.Data.ParameterDirection.Input, 0, 0, "TRACK_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TRACKING_STATUS", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "TRACKING_STATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@THERAPY_NAME", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "THERAPY_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CART_LAVEL", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CART_LAVEL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "UPDATE       CCAMH_FAST_TRACKING"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET                DATE_OF_LAST_FIT = @DATE_OF_"& _ 
                "LAST_FIT, DATE_OF_FAST_TRACT = @DATE_OF_FAST_TRACT, NEXT_VIST = @NEXT_VIST, TRAC"& _ 
                "K_NOTE = @TRACK_NOTE, THERAPY_NAME = @THERAPY_NAME, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         C"& _ 
                "ART_LAVEL = @CART_LAVEL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (FAST_TRACK_ID = @Original_FAST_TRACK_ID);"& _ 
                " "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATE_OF_LAST_FIT", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "DATE_OF_LAST_FIT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATE_OF_FAST_TRACT", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "DATE_OF_FAST_TRACT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NEXT_VIST", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "NEXT_VIST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TRACK_NOTE", Global.System.Data.SqlDbType.NVarChar, 1550, Global.System.Data.ParameterDirection.Input, 0, 0, "TRACK_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@THERAPY_NAME", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "THERAPY_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CART_LAVEL", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CART_LAVEL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FAST_TRACK_ID", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "FAST_TRACK_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSFastTrack.CCAMH_FAST_TRACKINGDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSFastTrack.CCAMH_FAST_TRACKINGDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSFastTrack.CCAMH_FAST_TRACKINGDataTable = New DSFastTrack.CCAMH_FAST_TRACKINGDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DSFastTrack.CCAMH_FAST_TRACKINGDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DSFastTrack) As Integer
            Return Me.Adapter.Update(dataSet, "CCAMH_FAST_TRACKING")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_FAST_TRACK_ID As Decimal, ByVal Original_CREATE_DATE As Global.System.Nullable(Of Date), ByVal Original_CLIENT_NO As Global.System.Nullable(Of Decimal), ByVal Original_DATE_OF_LAST_FIT As Global.System.Nullable(Of Date), ByVal Original_DATE_OF_FAST_TRACT As Global.System.Nullable(Of Date), ByVal Original_NEXT_VIST As Global.System.Nullable(Of Date), ByVal Original_TRACK_NOTE As String, ByVal Original_TRACKING_STATUS As String, ByVal Original_THERAPY_NAME As String, ByVal Original_CART_LAVEL As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_FAST_TRACK_ID,Decimal)
            If (Original_CREATE_DATE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_CREATE_DATE.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_NO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_CLIENT_NO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_DATE_OF_LAST_FIT.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_DATE_OF_LAST_FIT.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_DATE_OF_FAST_TRACT.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_DATE_OF_FAST_TRACT.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_NEXT_VIST.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_NEXT_VIST.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Original_TRACK_NOTE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_TRACK_NOTE,String)
            End If
            If (Original_TRACKING_STATUS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_TRACKING_STATUS,String)
            End If
            If (Original_THERAPY_NAME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_THERAPY_NAME,String)
            End If
            If (Original_CART_LAVEL Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_CART_LAVEL,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal CREATE_DATE As Global.System.Nullable(Of Date), ByVal CLIENT_NO As Global.System.Nullable(Of Decimal), ByVal DATE_OF_LAST_FIT As Global.System.Nullable(Of Date), ByVal DATE_OF_FAST_TRACT As Global.System.Nullable(Of Date), ByVal NEXT_VIST As Global.System.Nullable(Of Date), ByVal TRACK_NOTE As String, ByVal TRACKING_STATUS As String, ByVal THERAPY_NAME As String, ByVal CART_LAVEL As String) As Integer
            If (CREATE_DATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(CREATE_DATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_NO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(CLIENT_NO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (DATE_OF_LAST_FIT.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(DATE_OF_LAST_FIT.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (DATE_OF_FAST_TRACT.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(DATE_OF_FAST_TRACT.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (NEXT_VIST.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(NEXT_VIST.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (TRACK_NOTE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(TRACK_NOTE,String)
            End If
            If (TRACKING_STATUS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(TRACKING_STATUS,String)
            End If
            If (THERAPY_NAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(THERAPY_NAME,String)
            End If
            If (CART_LAVEL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(CART_LAVEL,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal CLIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal DATE_OF_LAST_FIT As Global.System.Nullable(Of Date),  _
                    ByVal DATE_OF_FAST_TRACT As Global.System.Nullable(Of Date),  _
                    ByVal NEXT_VIST As Global.System.Nullable(Of Date),  _
                    ByVal TRACK_NOTE As String,  _
                    ByVal TRACKING_STATUS As String,  _
                    ByVal THERAPY_NAME As String,  _
                    ByVal CART_LAVEL As String,  _
                    ByVal Original_FAST_TRACK_ID As Decimal,  _
                    ByVal Original_CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_CLIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_DATE_OF_LAST_FIT As Global.System.Nullable(Of Date),  _
                    ByVal Original_DATE_OF_FAST_TRACT As Global.System.Nullable(Of Date),  _
                    ByVal Original_NEXT_VIST As Global.System.Nullable(Of Date),  _
                    ByVal Original_TRACK_NOTE As String,  _
                    ByVal Original_TRACKING_STATUS As String,  _
                    ByVal Original_THERAPY_NAME As String,  _
                    ByVal Original_CART_LAVEL As String,  _
                    ByVal FAST_TRACK_ID As Decimal) As Integer
            If (CREATE_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(CREATE_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(CLIENT_NO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (DATE_OF_LAST_FIT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(DATE_OF_LAST_FIT.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (DATE_OF_FAST_TRACT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(DATE_OF_FAST_TRACT.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (NEXT_VIST.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(NEXT_VIST.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (TRACK_NOTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(TRACK_NOTE,String)
            End If
            If (TRACKING_STATUS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(TRACKING_STATUS,String)
            End If
            If (THERAPY_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(THERAPY_NAME,String)
            End If
            If (CART_LAVEL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(CART_LAVEL,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_FAST_TRACK_ID,Decimal)
            If (Original_CREATE_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_CREATE_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_CLIENT_NO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Original_DATE_OF_LAST_FIT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_DATE_OF_LAST_FIT.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Original_DATE_OF_FAST_TRACT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_DATE_OF_FAST_TRACT.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Original_NEXT_VIST.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_NEXT_VIST.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (Original_TRACK_NOTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_TRACK_NOTE,String)
            End If
            If (Original_TRACKING_STATUS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Original_TRACKING_STATUS,String)
            End If
            If (Original_THERAPY_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Original_THERAPY_NAME,String)
            End If
            If (Original_CART_LAVEL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Original_CART_LAVEL,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(28).Value = CType(FAST_TRACK_ID,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal CLIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal DATE_OF_LAST_FIT As Global.System.Nullable(Of Date),  _
                    ByVal DATE_OF_FAST_TRACT As Global.System.Nullable(Of Date),  _
                    ByVal NEXT_VIST As Global.System.Nullable(Of Date),  _
                    ByVal TRACK_NOTE As String,  _
                    ByVal TRACKING_STATUS As String,  _
                    ByVal THERAPY_NAME As String,  _
                    ByVal CART_LAVEL As String,  _
                    ByVal Original_FAST_TRACK_ID As Decimal,  _
                    ByVal Original_CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_CLIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_DATE_OF_LAST_FIT As Global.System.Nullable(Of Date),  _
                    ByVal Original_DATE_OF_FAST_TRACT As Global.System.Nullable(Of Date),  _
                    ByVal Original_NEXT_VIST As Global.System.Nullable(Of Date),  _
                    ByVal Original_TRACK_NOTE As String,  _
                    ByVal Original_TRACKING_STATUS As String,  _
                    ByVal Original_THERAPY_NAME As String,  _
                    ByVal Original_CART_LAVEL As String) As Integer
            Return Me.Update(CREATE_DATE, CLIENT_NO, DATE_OF_LAST_FIT, DATE_OF_FAST_TRACT, NEXT_VIST, TRACK_NOTE, TRACKING_STATUS, THERAPY_NAME, CART_LAVEL, Original_FAST_TRACK_ID, Original_CREATE_DATE, Original_CLIENT_NO, Original_DATE_OF_LAST_FIT, Original_DATE_OF_FAST_TRACT, Original_NEXT_VIST, Original_TRACK_NOTE, Original_TRACKING_STATUS, Original_THERAPY_NAME, Original_CART_LAVEL, Original_FAST_TRACK_ID)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function CheckExistingTracking(ByVal CLIENT_NO As Object) As Global.System.Nullable(Of Integer)
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            If (CLIENT_NO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("CLIENT_NO")
            Else
                command.Parameters(0).Value = CType(CLIENT_NO,Object)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Integer)()
            Else
                Return New Global.System.Nullable(Of Integer)(CType(returnValue,Integer))
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, false)>  _
        Public Overloads Overridable Function InsertNewClientTracking(ByVal CREATE_DATE As Global.System.Nullable(Of Date), ByVal CLIENT_NO As Global.System.Nullable(Of Decimal), ByVal DATE_OF_LAST_FIT As Global.System.Nullable(Of Date), ByVal DATE_OF_FAST_TRACT As Global.System.Nullable(Of Date), ByVal NEXT_VIST As Global.System.Nullable(Of Date), ByVal TRACK_NOTE As String, ByVal TRACKING_STATUS As String, ByVal THERAPY_NAME As String, ByVal CART_LAVEL As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(2)
            If (CREATE_DATE.HasValue = true) Then
                command.Parameters(0).Value = CType(CREATE_DATE.Value,Date)
            Else
                command.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_NO.HasValue = true) Then
                command.Parameters(1).Value = CType(CLIENT_NO.Value,Decimal)
            Else
                command.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (DATE_OF_LAST_FIT.HasValue = true) Then
                command.Parameters(2).Value = CType(DATE_OF_LAST_FIT.Value,Date)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (DATE_OF_FAST_TRACT.HasValue = true) Then
                command.Parameters(3).Value = CType(DATE_OF_FAST_TRACT.Value,Date)
            Else
                command.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (NEXT_VIST.HasValue = true) Then
                command.Parameters(4).Value = CType(NEXT_VIST.Value,Date)
            Else
                command.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (TRACK_NOTE Is Nothing) Then
                command.Parameters(5).Value = Global.System.DBNull.Value
            Else
                command.Parameters(5).Value = CType(TRACK_NOTE,String)
            End If
            If (TRACKING_STATUS Is Nothing) Then
                command.Parameters(6).Value = Global.System.DBNull.Value
            Else
                command.Parameters(6).Value = CType(TRACKING_STATUS,String)
            End If
            If (THERAPY_NAME Is Nothing) Then
                command.Parameters(7).Value = Global.System.DBNull.Value
            Else
                command.Parameters(7).Value = CType(THERAPY_NAME,String)
            End If
            If (CART_LAVEL Is Nothing) Then
                command.Parameters(8).Value = Global.System.DBNull.Value
            Else
                command.Parameters(8).Value = CType(CART_LAVEL,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UpdateTracking(ByVal DATE_OF_LAST_FIT As Global.System.Nullable(Of Date), ByVal DATE_OF_FAST_TRACT As Global.System.Nullable(Of Date), ByVal NEXT_VIST As Global.System.Nullable(Of Date), ByVal TRACK_NOTE As String, ByVal THERAPY_NAME As String, ByVal CART_LAVEL As String, ByVal Original_FAST_TRACK_ID As Decimal) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(3)
            If (DATE_OF_LAST_FIT.HasValue = true) Then
                command.Parameters(0).Value = CType(DATE_OF_LAST_FIT.Value,Date)
            Else
                command.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (DATE_OF_FAST_TRACT.HasValue = true) Then
                command.Parameters(1).Value = CType(DATE_OF_FAST_TRACT.Value,Date)
            Else
                command.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (NEXT_VIST.HasValue = true) Then
                command.Parameters(2).Value = CType(NEXT_VIST.Value,Date)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (TRACK_NOTE Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(TRACK_NOTE,String)
            End If
            If (THERAPY_NAME Is Nothing) Then
                command.Parameters(4).Value = Global.System.DBNull.Value
            Else
                command.Parameters(4).Value = CType(THERAPY_NAME,String)
            End If
            If (CART_LAVEL Is Nothing) Then
                command.Parameters(5).Value = Global.System.DBNull.Value
            Else
                command.Parameters(5).Value = CType(CART_LAVEL,String)
            End If
            command.Parameters(6).Value = CType(Original_FAST_TRACK_ID,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class CCAMH_VIEW_TRACKINGTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "CCAMH_VIEW_TRACKING"
            tableMapping.ColumnMappings.Add("CLIENT_NO", "CLIENT_NO")
            tableMapping.ColumnMappings.Add("CLIENT_NAME_KHM", "CLIENT_NAME_KHM")
            tableMapping.ColumnMappings.Add("CLIENT_NAME", "CLIENT_NAME")
            tableMapping.ColumnMappings.Add("CLIENT_SEX", "CLIENT_SEX")
            tableMapping.ColumnMappings.Add("CAL_AGE", "CAL_AGE")
            tableMapping.ColumnMappings.Add("CLIENT_DATE_REG", "CLIENT_DATE_REG")
            tableMapping.ColumnMappings.Add("FULL_ADDRESS_KH", "FULL_ADDRESS_KH")
            tableMapping.ColumnMappings.Add("FULL_ADDRESS_ENG", "FULL_ADDRESS_ENG")
            tableMapping.ColumnMappings.Add("FAST_TRACK_ID", "FAST_TRACK_ID")
            tableMapping.ColumnMappings.Add("CREATE_DATE", "CREATE_DATE")
            tableMapping.ColumnMappings.Add("DATE_OF_LAST_FIT", "DATE_OF_LAST_FIT")
            tableMapping.ColumnMappings.Add("DATE_OF_FAST_TRACT", "DATE_OF_FAST_TRACT")
            tableMapping.ColumnMappings.Add("NEXT_VIST", "NEXT_VIST")
            tableMapping.ColumnMappings.Add("TRACK_NOTE", "TRACK_NOTE")
            tableMapping.ColumnMappings.Add("TRACKING_STATUS", "TRACKING_STATUS")
            tableMapping.ColumnMappings.Add("THERAPY_NAME", "THERAPY_NAME")
            tableMapping.ColumnMappings.Add("CLIENT_ADDRESS_PHONE", "CLIENT_ADDRESS_PHONE")
            tableMapping.ColumnMappings.Add("CART_LAVEL", "CART_LAVEL")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.KTGSYS.My.MySettings.Default.TakeoDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(3) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        CLIENT_NO, CLIENT_NAME_KHM, CLIENT_NAME, CLIENT_SEX, CAL_AGE, CLIEN"& _ 
                "T_DATE_REG, FULL_ADDRESS_KH, FULL_ADDRESS_ENG, FAST_TRACK_ID, CREATE_DATE, DATE_"& _ 
                "OF_LAST_FIT, DATE_OF_FAST_TRACT, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         NEXT_VIST, TRACK_NOT"& _ 
                "E, TRACKING_STATUS, THERAPY_NAME, CLIENT_ADDRESS_PHONE, CART_LAVEL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM        "& _ 
                "    CCAMH_VIEW_TRACKING"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        CLIENT_NO, CLIENT_NAME_KHM, CLIENT_NAME, CLIENT_SEX, CAL_AGE, CLIEN"& _ 
                "T_DATE_REG, FULL_ADDRESS_KH, FULL_ADDRESS_ENG, FAST_TRACK_ID, CREATE_DATE, DATE_"& _ 
                "OF_LAST_FIT, DATE_OF_FAST_TRACT, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         NEXT_VIST, TRACK_NOT"& _ 
                "E, TRACKING_STATUS, THERAPY_NAME, CLIENT_ADDRESS_PHONE, CART_LAVEL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM        "& _ 
                "    CCAMH_VIEW_TRACKING"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"CLIENT_NO=@CLIENT_NO"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT        CLIENT_NO, CLIENT_NAME_KHM, CLIENT_NAME, CLIENT_SEX, CAL_AGE, CLIEN"& _ 
                "T_DATE_REG, FULL_ADDRESS_KH, FULL_ADDRESS_ENG, FAST_TRACK_ID, CREATE_DATE, DATE_"& _ 
                "OF_LAST_FIT, DATE_OF_FAST_TRACT, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         NEXT_VIST, TRACK_NOT"& _ 
                "E, TRACKING_STATUS, THERAPY_NAME, CLIENT_ADDRESS_PHONE, CART_LAVEL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM        "& _ 
                "    CCAMH_VIEW_TRACKING"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"CLIENT_NAME LIKE +'%'+ @CLIENT_NAME +'%'"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NAME", Global.System.Data.SqlDbType.NVarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT        CLIENT_NO, CLIENT_NAME_KHM, CLIENT_NAME, CLIENT_SEX, CAL_AGE, CLIEN"& _ 
                "T_DATE_REG, FULL_ADDRESS_KH, FULL_ADDRESS_ENG, FAST_TRACK_ID, CREATE_DATE, DATE_"& _ 
                "OF_LAST_FIT, DATE_OF_FAST_TRACT, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         NEXT_VIST, TRACK_NOT"& _ 
                "E, TRACKING_STATUS, THERAPY_NAME, CLIENT_ADDRESS_PHONE, CART_LAVEL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM        "& _ 
                "    CCAMH_VIEW_TRACKING"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"THERAPY_NAME LIKE +'%'+ @THERAPY_NAME +'%'"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@THERAPY_NAME", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "THERAPY_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSFastTrack.CCAMH_VIEW_TRACKINGDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSFastTrack.CCAMH_VIEW_TRACKINGDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSFastTrack.CCAMH_VIEW_TRACKINGDataTable = New DSFastTrack.CCAMH_VIEW_TRACKINGDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As DSFastTrack.CCAMH_VIEW_TRACKINGDataTable, ByVal CLIENT_NO As Decimal) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(CLIENT_NO,Decimal)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function SelectTrackingByClientNo(ByVal CLIENT_NO As Decimal) As DSFastTrack.CCAMH_VIEW_TRACKINGDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(CLIENT_NO,Decimal)
            Dim dataTable As DSFastTrack.CCAMH_VIEW_TRACKINGDataTable = New DSFastTrack.CCAMH_VIEW_TRACKINGDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy1(ByVal dataTable As DSFastTrack.CCAMH_VIEW_TRACKINGDataTable, ByVal CLIENT_NAME As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (CLIENT_NAME Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CLIENT_NAME,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function SelectTrackingByName(ByVal CLIENT_NAME As String) As DSFastTrack.CCAMH_VIEW_TRACKINGDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (CLIENT_NAME Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CLIENT_NAME,String)
            End If
            Dim dataTable As DSFastTrack.CCAMH_VIEW_TRACKINGDataTable = New DSFastTrack.CCAMH_VIEW_TRACKINGDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy2(ByVal dataTable As DSFastTrack.CCAMH_VIEW_TRACKINGDataTable, ByVal THERAPY_NAME As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            If (THERAPY_NAME Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(THERAPY_NAME,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function SelectTrackByTherapy(ByVal THERAPY_NAME As String) As DSFastTrack.CCAMH_VIEW_TRACKINGDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            If (THERAPY_NAME Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(THERAPY_NAME,String)
            End If
            Dim dataTable As DSFastTrack.CCAMH_VIEW_TRACKINGDataTable = New DSFastTrack.CCAMH_VIEW_TRACKINGDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class CCAMH_VIEW_ADVISED_CLIENTSTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "CCAMH_VIEW_ADVISED_CLIENTS"
            tableMapping.ColumnMappings.Add("CLIENT_NO", "CLIENT_NO")
            tableMapping.ColumnMappings.Add("CLIENT_NAME_KHM", "CLIENT_NAME_KHM")
            tableMapping.ColumnMappings.Add("CLIENT_NAME", "CLIENT_NAME")
            tableMapping.ColumnMappings.Add("CLIENT_SEX", "CLIENT_SEX")
            tableMapping.ColumnMappings.Add("CLIENT_AGE", "CLIENT_AGE")
            tableMapping.ColumnMappings.Add("CLIENT_DOB", "CLIENT_DOB")
            tableMapping.ColumnMappings.Add("CAL_AGE", "CAL_AGE")
            tableMapping.ColumnMappings.Add("CLIENT_DATE_REG", "CLIENT_DATE_REG")
            tableMapping.ColumnMappings.Add("CLIENT_ADVISED_ASSESSMENT_DATE", "CLIENT_ADVISED_ASSESSMENT_DATE")
            tableMapping.ColumnMappings.Add("CLIENT_ADVISED_ASSESSMENT", "CLIENT_ADVISED_ASSESSMENT")
            tableMapping.ColumnMappings.Add("CLIENT_ADDRESS_PHONE", "CLIENT_ADDRESS_PHONE")
            tableMapping.ColumnMappings.Add("PROV_EN", "PROV_EN")
            tableMapping.ColumnMappings.Add("DIST_EN", "DIST_EN")
            tableMapping.ColumnMappings.Add("VILL_EN", "VILL_EN")
            tableMapping.ColumnMappings.Add("COMM_EN", "COMM_EN")
            tableMapping.ColumnMappings.Add("COMM_KH", "COMM_KH")
            tableMapping.ColumnMappings.Add("VILL_KH", "VILL_KH")
            tableMapping.ColumnMappings.Add("DIST_KH", "DIST_KH")
            tableMapping.ColumnMappings.Add("PROV_KH", "PROV_KH")
            tableMapping.ColumnMappings.Add("CLIENT_IS_ASSESS_CHECKED", "CLIENT_IS_ASSESS_CHECKED")
            tableMapping.ColumnMappings.Add("CLIENT_ADVICED_ASSESSMENT_DETAIL", "CLIENT_ADVICED_ASSESSMENT_DETAIL")
            tableMapping.ColumnMappings.Add("CLIENT_ADVICED_ASSESSMENT_NOTE", "CLIENT_ADVICED_ASSESSMENT_NOTE")
            tableMapping.ColumnMappings.Add("FULL_ADDRESS_KH", "FULL_ADDRESS_KH")
            tableMapping.ColumnMappings.Add("FULL_ADDRESS_ENG", "FULL_ADDRESS_ENG")
            tableMapping.ColumnMappings.Add("CLIENT_PSYCHIATRIC", "CLIENT_PSYCHIATRIC")
            tableMapping.ColumnMappings.Add("CLIENT_NEUROLOGICAL", "CLIENT_NEUROLOGICAL")
            tableMapping.ColumnMappings.Add("CLIENT_DDISORDER", "CLIENT_DDISORDER")
            tableMapping.ColumnMappings.Add("CLIENT_PSYCHOLOGICAL", "CLIENT_PSYCHOLOGICAL")
            tableMapping.ColumnMappings.Add("DIAGNOSIS_CATE_ID", "DIAGNOSIS_CATE_ID")
            tableMapping.ColumnMappings.Add("IMPRESSION_DIAGNOSIS", "IMPRESSION_DIAGNOSIS")
            tableMapping.ColumnMappings.Add("DIAGNOSIS_ID", "DIAGNOSIS_ID")
            tableMapping.ColumnMappings.Add("DIAGNOSIS", "DIAGNOSIS")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.KTGSYS.My.MySettings.Default.TakeoDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        CLIENT_NO, CLIENT_NAME_KHM, CLIENT_NAME, CLIENT_SEX, CLIENT_AGE, CL"& _ 
                "IENT_DOB, CAL_AGE, CLIENT_DATE_REG, CLIENT_ADVISED_ASSESSMENT_DATE, CLIENT_ADVIS"& _ 
                "ED_ASSESSMENT, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CLIENT_ADDRESS_PHONE, PROV_EN, DIST_EN"& _ 
                ", VILL_EN, COMM_EN, COMM_KH, VILL_KH, DIST_KH, PROV_KH, CLIENT_IS_ASSESS_CHECKED"& _ 
                ", CLIENT_ADVICED_ASSESSMENT_DETAIL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CLIENT_ADVICED_AS"& _ 
                "SESSMENT_NOTE, FULL_ADDRESS_KH, FULL_ADDRESS_ENG, CLIENT_PSYCHIATRIC, CLIENT_NEU"& _ 
                "ROLOGICAL, CLIENT_DDISORDER, CLIENT_PSYCHOLOGICAL, DIAGNOSIS_CATE_ID, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        "& _ 
                "                 IMPRESSION_DIAGNOSIS, DIAGNOSIS_ID, DIAGNOSIS"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            "& _ 
                "CCAMH_VIEW_ADVISED_CLIENTS"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        CLIENT_NO, CLIENT_NAME_KHM, CLIENT_NAME, CLIENT_SEX, CLIENT_AGE, CL"& _ 
                "IENT_DOB, CAL_AGE, CLIENT_DATE_REG, CLIENT_ADVISED_ASSESSMENT_DATE, CLIENT_ADVIS"& _ 
                "ED_ASSESSMENT, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CLIENT_ADDRESS_PHONE, PROV_EN, DIST_EN"& _ 
                ", VILL_EN, COMM_EN, COMM_KH, VILL_KH, DIST_KH, PROV_KH, CLIENT_IS_ASSESS_CHECKED"& _ 
                ", CLIENT_ADVICED_ASSESSMENT_DETAIL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CLIENT_ADVICED_AS"& _ 
                "SESSMENT_NOTE, FULL_ADDRESS_KH, FULL_ADDRESS_ENG, CLIENT_PSYCHIATRIC, CLIENT_NEU"& _ 
                "ROLOGICAL, CLIENT_DDISORDER, CLIENT_PSYCHOLOGICAL, DIAGNOSIS_CATE_ID, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        "& _ 
                "                 IMPRESSION_DIAGNOSIS, DIAGNOSIS_ID, DIAGNOSIS"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            "& _ 
                "CCAMH_VIEW_ADVISED_CLIENTS"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"CLIENT_NO=@CLIENT_NO"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSFastTrack.CCAMH_VIEW_ADVISED_CLIENTSDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSFastTrack.CCAMH_VIEW_ADVISED_CLIENTSDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSFastTrack.CCAMH_VIEW_ADVISED_CLIENTSDataTable = New DSFastTrack.CCAMH_VIEW_ADVISED_CLIENTSDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As DSFastTrack.CCAMH_VIEW_ADVISED_CLIENTSDataTable, ByVal CLIENT_NO As Decimal) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(CLIENT_NO,Decimal)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function SelectClientInfo(ByVal CLIENT_NO As Decimal) As DSFastTrack.CCAMH_VIEW_ADVISED_CLIENTSDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(CLIENT_NO,Decimal)
            Dim dataTable As DSFastTrack.CCAMH_VIEW_ADVISED_CLIENTSDataTable = New DSFastTrack.CCAMH_VIEW_ADVISED_CLIENTSDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _cCAMH_FAST_TRACKINGTableAdapter As CCAMH_FAST_TRACKINGTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property CCAMH_FAST_TRACKINGTableAdapter() As CCAMH_FAST_TRACKINGTableAdapter
            Get
                Return Me._cCAMH_FAST_TRACKINGTableAdapter
            End Get
            Set
                Me._cCAMH_FAST_TRACKINGTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._cCAMH_FAST_TRACKINGTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._cCAMH_FAST_TRACKINGTableAdapter.Connection) Is Nothing)) Then
                    Return Me._cCAMH_FAST_TRACKINGTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._cCAMH_FAST_TRACKINGTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As DSFastTrack, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._cCAMH_FAST_TRACKINGTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.CCAMH_FAST_TRACKING.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._cCAMH_FAST_TRACKINGTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As DSFastTrack, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._cCAMH_FAST_TRACKINGTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.CCAMH_FAST_TRACKING.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._cCAMH_FAST_TRACKINGTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As DSFastTrack, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._cCAMH_FAST_TRACKINGTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.CCAMH_FAST_TRACKING.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._cCAMH_FAST_TRACKINGTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As DSFastTrack) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._cCAMH_FAST_TRACKINGTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._cCAMH_FAST_TRACKINGTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._cCAMH_FAST_TRACKINGTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._cCAMH_FAST_TRACKINGTableAdapter, Me._cCAMH_FAST_TRACKINGTableAdapter.Connection)
                    Me._cCAMH_FAST_TRACKINGTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._cCAMH_FAST_TRACKINGTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._cCAMH_FAST_TRACKINGTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._cCAMH_FAST_TRACKINGTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._cCAMH_FAST_TRACKINGTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._cCAMH_FAST_TRACKINGTableAdapter) Is Nothing) Then
                    Me._cCAMH_FAST_TRACKINGTableAdapter.Connection = CType(revertConnections(Me._cCAMH_FAST_TRACKINGTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._cCAMH_FAST_TRACKINGTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
