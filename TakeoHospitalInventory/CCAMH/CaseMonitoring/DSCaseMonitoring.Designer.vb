'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DSCaseMonitoring"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DSCaseMonitoring
    Inherits Global.System.Data.DataSet
    
    Private tableCCAMH_VIEW_PRESCRIPTION As CCAMH_VIEW_PRESCRIPTIONDataTable
    
    Private tableCCAMH_VIEW_CASE_MONITORING As CCAMH_VIEW_CASE_MONITORINGDataTable
    
    Private tableCCAMH_REFERED_DETIAL As CCAMH_REFERED_DETIALDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("CCAMH_VIEW_PRESCRIPTION")) Is Nothing) Then
                MyBase.Tables.Add(New CCAMH_VIEW_PRESCRIPTIONDataTable(ds.Tables("CCAMH_VIEW_PRESCRIPTION")))
            End If
            If (Not (ds.Tables("CCAMH_VIEW_CASE_MONITORING")) Is Nothing) Then
                MyBase.Tables.Add(New CCAMH_VIEW_CASE_MONITORINGDataTable(ds.Tables("CCAMH_VIEW_CASE_MONITORING")))
            End If
            If (Not (ds.Tables("CCAMH_REFERED_DETIAL")) Is Nothing) Then
                MyBase.Tables.Add(New CCAMH_REFERED_DETIALDataTable(ds.Tables("CCAMH_REFERED_DETIAL")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CCAMH_VIEW_PRESCRIPTION() As CCAMH_VIEW_PRESCRIPTIONDataTable
        Get
            Return Me.tableCCAMH_VIEW_PRESCRIPTION
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CCAMH_VIEW_CASE_MONITORING() As CCAMH_VIEW_CASE_MONITORINGDataTable
        Get
            Return Me.tableCCAMH_VIEW_CASE_MONITORING
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CCAMH_REFERED_DETIAL() As CCAMH_REFERED_DETIALDataTable
        Get
            Return Me.tableCCAMH_REFERED_DETIAL
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DSCaseMonitoring = CType(MyBase.Clone,DSCaseMonitoring)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("CCAMH_VIEW_PRESCRIPTION")) Is Nothing) Then
                MyBase.Tables.Add(New CCAMH_VIEW_PRESCRIPTIONDataTable(ds.Tables("CCAMH_VIEW_PRESCRIPTION")))
            End If
            If (Not (ds.Tables("CCAMH_VIEW_CASE_MONITORING")) Is Nothing) Then
                MyBase.Tables.Add(New CCAMH_VIEW_CASE_MONITORINGDataTable(ds.Tables("CCAMH_VIEW_CASE_MONITORING")))
            End If
            If (Not (ds.Tables("CCAMH_REFERED_DETIAL")) Is Nothing) Then
                MyBase.Tables.Add(New CCAMH_REFERED_DETIALDataTable(ds.Tables("CCAMH_REFERED_DETIAL")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableCCAMH_VIEW_PRESCRIPTION = CType(MyBase.Tables("CCAMH_VIEW_PRESCRIPTION"),CCAMH_VIEW_PRESCRIPTIONDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCCAMH_VIEW_PRESCRIPTION) Is Nothing) Then
                Me.tableCCAMH_VIEW_PRESCRIPTION.InitVars
            End If
        End If
        Me.tableCCAMH_VIEW_CASE_MONITORING = CType(MyBase.Tables("CCAMH_VIEW_CASE_MONITORING"),CCAMH_VIEW_CASE_MONITORINGDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCCAMH_VIEW_CASE_MONITORING) Is Nothing) Then
                Me.tableCCAMH_VIEW_CASE_MONITORING.InitVars
            End If
        End If
        Me.tableCCAMH_REFERED_DETIAL = CType(MyBase.Tables("CCAMH_REFERED_DETIAL"),CCAMH_REFERED_DETIALDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCCAMH_REFERED_DETIAL) Is Nothing) Then
                Me.tableCCAMH_REFERED_DETIAL.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "DSCaseMonitoring"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DSCaseMonitoring.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableCCAMH_VIEW_PRESCRIPTION = New CCAMH_VIEW_PRESCRIPTIONDataTable()
        MyBase.Tables.Add(Me.tableCCAMH_VIEW_PRESCRIPTION)
        Me.tableCCAMH_VIEW_CASE_MONITORING = New CCAMH_VIEW_CASE_MONITORINGDataTable()
        MyBase.Tables.Add(Me.tableCCAMH_VIEW_CASE_MONITORING)
        Me.tableCCAMH_REFERED_DETIAL = New CCAMH_REFERED_DETIALDataTable()
        MyBase.Tables.Add(Me.tableCCAMH_REFERED_DETIAL)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCCAMH_VIEW_PRESCRIPTION() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCCAMH_VIEW_CASE_MONITORING() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCCAMH_REFERED_DETIAL() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DSCaseMonitoring = New DSCaseMonitoring()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub CCAMH_VIEW_PRESCRIPTIONRowChangeEventHandler(ByVal sender As Object, ByVal e As CCAMH_VIEW_PRESCRIPTIONRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub CCAMH_VIEW_CASE_MONITORINGRowChangeEventHandler(ByVal sender As Object, ByVal e As CCAMH_VIEW_CASE_MONITORINGRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub CCAMH_REFERED_DETIALRowChangeEventHandler(ByVal sender As Object, ByVal e As CCAMH_REFERED_DETIALRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CCAMH_VIEW_PRESCRIPTIONDataTable
        Inherits Global.System.Data.TypedTableBase(Of CCAMH_VIEW_PRESCRIPTIONRow)
        
        Private columnPRESC_ID As Global.System.Data.DataColumn
        
        Private columnCLIENT_NO As Global.System.Data.DataColumn
        
        Private columnCLIENT_NAME As Global.System.Data.DataColumn
        
        Private columnCLIENT_AGE As Global.System.Data.DataColumn
        
        Private columnCLIENT_SEX As Global.System.Data.DataColumn
        
        Private columnCLIENT_TYPE As Global.System.Data.DataColumn
        
        Private columnDOCTOR_NAME As Global.System.Data.DataColumn
        
        Private columnDATE_PRESCR As Global.System.Data.DataColumn
        
        Private columnDATE_NEXT_VISIT As Global.System.Data.DataColumn
        
        Private columnIS_DELETE As Global.System.Data.DataColumn
        
        Private columnMED_ID As Global.System.Data.DataColumn
        
        Private columnMED_NAME As Global.System.Data.DataColumn
        
        Private columnMED_M As Global.System.Data.DataColumn
        
        Private columnMED_N As Global.System.Data.DataColumn
        
        Private columnMED_E As Global.System.Data.DataColumn
        
        Private columnMED_QTY As Global.System.Data.DataColumn
        
        Private columnMED_PRICE As Global.System.Data.DataColumn
        
        Private columnMED_SUB_TOTAL As Global.System.Data.DataColumn
        
        Private columnPRESCRIPT_NOTE As Global.System.Data.DataColumn
        
        Private columnIS_RECEIVED As Global.System.Data.DataColumn
        
        Private columnREMARK As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CCAMH_VIEW_PRESCRIPTION"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRESC_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRESC_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_AGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_AGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_SEXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_SEX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_TYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_TYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOCTOR_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOCTOR_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DATE_PRESCRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATE_PRESCR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DATE_NEXT_VISITColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATE_NEXT_VISIT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IS_DELETEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIS_DELETE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MED_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMED_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MED_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMED_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MED_MColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMED_M
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MED_NColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMED_N
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MED_EColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMED_E
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MED_QTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMED_QTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MED_PRICEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMED_PRICE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MED_SUB_TOTALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMED_SUB_TOTAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRESCRIPT_NOTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRESCRIPT_NOTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IS_RECEIVEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIS_RECEIVED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REMARKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREMARK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CCAMH_VIEW_PRESCRIPTIONRow
            Get
                Return CType(Me.Rows(index),CCAMH_VIEW_PRESCRIPTIONRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_VIEW_PRESCRIPTIONRowChanging As CCAMH_VIEW_PRESCRIPTIONRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_VIEW_PRESCRIPTIONRowChanged As CCAMH_VIEW_PRESCRIPTIONRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_VIEW_PRESCRIPTIONRowDeleting As CCAMH_VIEW_PRESCRIPTIONRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_VIEW_PRESCRIPTIONRowDeleted As CCAMH_VIEW_PRESCRIPTIONRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCCAMH_VIEW_PRESCRIPTIONRow(ByVal row As CCAMH_VIEW_PRESCRIPTIONRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCCAMH_VIEW_PRESCRIPTIONRow( _
                    ByVal PRESC_ID As Decimal,  _
                    ByVal CLIENT_NO As Decimal,  _
                    ByVal CLIENT_NAME As String,  _
                    ByVal CLIENT_AGE As Decimal,  _
                    ByVal CLIENT_SEX As String,  _
                    ByVal CLIENT_TYPE As String,  _
                    ByVal DOCTOR_NAME As String,  _
                    ByVal DATE_PRESCR As Date,  _
                    ByVal DATE_NEXT_VISIT As Date,  _
                    ByVal IS_DELETE As Boolean,  _
                    ByVal MED_ID As Decimal,  _
                    ByVal MED_NAME As String,  _
                    ByVal MED_M As String,  _
                    ByVal MED_N As String,  _
                    ByVal MED_E As String,  _
                    ByVal MED_QTY As Decimal,  _
                    ByVal MED_PRICE As Decimal,  _
                    ByVal MED_SUB_TOTAL As Decimal,  _
                    ByVal PRESCRIPT_NOTE As String,  _
                    ByVal IS_RECEIVED As Boolean,  _
                    ByVal REMARK As String) As CCAMH_VIEW_PRESCRIPTIONRow
            Dim rowCCAMH_VIEW_PRESCRIPTIONRow As CCAMH_VIEW_PRESCRIPTIONRow = CType(Me.NewRow,CCAMH_VIEW_PRESCRIPTIONRow)
            Dim columnValuesArray() As Object = New Object() {PRESC_ID, CLIENT_NO, CLIENT_NAME, CLIENT_AGE, CLIENT_SEX, CLIENT_TYPE, DOCTOR_NAME, DATE_PRESCR, DATE_NEXT_VISIT, IS_DELETE, MED_ID, MED_NAME, MED_M, MED_N, MED_E, MED_QTY, MED_PRICE, MED_SUB_TOTAL, PRESCRIPT_NOTE, IS_RECEIVED, REMARK}
            rowCCAMH_VIEW_PRESCRIPTIONRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCCAMH_VIEW_PRESCRIPTIONRow)
            Return rowCCAMH_VIEW_PRESCRIPTIONRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CCAMH_VIEW_PRESCRIPTIONDataTable = CType(MyBase.Clone,CCAMH_VIEW_PRESCRIPTIONDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CCAMH_VIEW_PRESCRIPTIONDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPRESC_ID = MyBase.Columns("PRESC_ID")
            Me.columnCLIENT_NO = MyBase.Columns("CLIENT_NO")
            Me.columnCLIENT_NAME = MyBase.Columns("CLIENT_NAME")
            Me.columnCLIENT_AGE = MyBase.Columns("CLIENT_AGE")
            Me.columnCLIENT_SEX = MyBase.Columns("CLIENT_SEX")
            Me.columnCLIENT_TYPE = MyBase.Columns("CLIENT_TYPE")
            Me.columnDOCTOR_NAME = MyBase.Columns("DOCTOR_NAME")
            Me.columnDATE_PRESCR = MyBase.Columns("DATE_PRESCR")
            Me.columnDATE_NEXT_VISIT = MyBase.Columns("DATE_NEXT_VISIT")
            Me.columnIS_DELETE = MyBase.Columns("IS_DELETE")
            Me.columnMED_ID = MyBase.Columns("MED_ID")
            Me.columnMED_NAME = MyBase.Columns("MED_NAME")
            Me.columnMED_M = MyBase.Columns("MED_M")
            Me.columnMED_N = MyBase.Columns("MED_N")
            Me.columnMED_E = MyBase.Columns("MED_E")
            Me.columnMED_QTY = MyBase.Columns("MED_QTY")
            Me.columnMED_PRICE = MyBase.Columns("MED_PRICE")
            Me.columnMED_SUB_TOTAL = MyBase.Columns("MED_SUB_TOTAL")
            Me.columnPRESCRIPT_NOTE = MyBase.Columns("PRESCRIPT_NOTE")
            Me.columnIS_RECEIVED = MyBase.Columns("IS_RECEIVED")
            Me.columnREMARK = MyBase.Columns("REMARK")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPRESC_ID = New Global.System.Data.DataColumn("PRESC_ID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRESC_ID)
            Me.columnCLIENT_NO = New Global.System.Data.DataColumn("CLIENT_NO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_NO)
            Me.columnCLIENT_NAME = New Global.System.Data.DataColumn("CLIENT_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_NAME)
            Me.columnCLIENT_AGE = New Global.System.Data.DataColumn("CLIENT_AGE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_AGE)
            Me.columnCLIENT_SEX = New Global.System.Data.DataColumn("CLIENT_SEX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_SEX)
            Me.columnCLIENT_TYPE = New Global.System.Data.DataColumn("CLIENT_TYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_TYPE)
            Me.columnDOCTOR_NAME = New Global.System.Data.DataColumn("DOCTOR_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOCTOR_NAME)
            Me.columnDATE_PRESCR = New Global.System.Data.DataColumn("DATE_PRESCR", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATE_PRESCR)
            Me.columnDATE_NEXT_VISIT = New Global.System.Data.DataColumn("DATE_NEXT_VISIT", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATE_NEXT_VISIT)
            Me.columnIS_DELETE = New Global.System.Data.DataColumn("IS_DELETE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIS_DELETE)
            Me.columnMED_ID = New Global.System.Data.DataColumn("MED_ID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMED_ID)
            Me.columnMED_NAME = New Global.System.Data.DataColumn("MED_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMED_NAME)
            Me.columnMED_M = New Global.System.Data.DataColumn("MED_M", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMED_M)
            Me.columnMED_N = New Global.System.Data.DataColumn("MED_N", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMED_N)
            Me.columnMED_E = New Global.System.Data.DataColumn("MED_E", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMED_E)
            Me.columnMED_QTY = New Global.System.Data.DataColumn("MED_QTY", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMED_QTY)
            Me.columnMED_PRICE = New Global.System.Data.DataColumn("MED_PRICE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMED_PRICE)
            Me.columnMED_SUB_TOTAL = New Global.System.Data.DataColumn("MED_SUB_TOTAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMED_SUB_TOTAL)
            Me.columnPRESCRIPT_NOTE = New Global.System.Data.DataColumn("PRESCRIPT_NOTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRESCRIPT_NOTE)
            Me.columnIS_RECEIVED = New Global.System.Data.DataColumn("IS_RECEIVED", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIS_RECEIVED)
            Me.columnREMARK = New Global.System.Data.DataColumn("REMARK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREMARK)
            Me.columnPRESC_ID.AllowDBNull = false
            Me.columnCLIENT_NAME.MaxLength = 50
            Me.columnCLIENT_SEX.MaxLength = 50
            Me.columnCLIENT_TYPE.MaxLength = 50
            Me.columnDOCTOR_NAME.MaxLength = 50
            Me.columnMED_NAME.MaxLength = 50
            Me.columnMED_M.MaxLength = 50
            Me.columnMED_N.MaxLength = 50
            Me.columnMED_E.MaxLength = 50
            Me.columnPRESCRIPT_NOTE.MaxLength = 150
            Me.columnREMARK.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCCAMH_VIEW_PRESCRIPTIONRow() As CCAMH_VIEW_PRESCRIPTIONRow
            Return CType(Me.NewRow,CCAMH_VIEW_PRESCRIPTIONRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CCAMH_VIEW_PRESCRIPTIONRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CCAMH_VIEW_PRESCRIPTIONRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CCAMH_VIEW_PRESCRIPTIONRowChangedEvent) Is Nothing) Then
                RaiseEvent CCAMH_VIEW_PRESCRIPTIONRowChanged(Me, New CCAMH_VIEW_PRESCRIPTIONRowChangeEvent(CType(e.Row,CCAMH_VIEW_PRESCRIPTIONRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CCAMH_VIEW_PRESCRIPTIONRowChangingEvent) Is Nothing) Then
                RaiseEvent CCAMH_VIEW_PRESCRIPTIONRowChanging(Me, New CCAMH_VIEW_PRESCRIPTIONRowChangeEvent(CType(e.Row,CCAMH_VIEW_PRESCRIPTIONRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CCAMH_VIEW_PRESCRIPTIONRowDeletedEvent) Is Nothing) Then
                RaiseEvent CCAMH_VIEW_PRESCRIPTIONRowDeleted(Me, New CCAMH_VIEW_PRESCRIPTIONRowChangeEvent(CType(e.Row,CCAMH_VIEW_PRESCRIPTIONRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CCAMH_VIEW_PRESCRIPTIONRowDeletingEvent) Is Nothing) Then
                RaiseEvent CCAMH_VIEW_PRESCRIPTIONRowDeleting(Me, New CCAMH_VIEW_PRESCRIPTIONRowChangeEvent(CType(e.Row,CCAMH_VIEW_PRESCRIPTIONRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCCAMH_VIEW_PRESCRIPTIONRow(ByVal row As CCAMH_VIEW_PRESCRIPTIONRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSCaseMonitoring = New DSCaseMonitoring()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CCAMH_VIEW_PRESCRIPTIONDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CCAMH_VIEW_CASE_MONITORINGDataTable
        Inherits Global.System.Data.TypedTableBase(Of CCAMH_VIEW_CASE_MONITORINGRow)
        
        Private columnCLIENT_MG_ID As Global.System.Data.DataColumn
        
        Private columnCLIENT_NAME_KHM As Global.System.Data.DataColumn
        
        Private columnCLIENT_NAME As Global.System.Data.DataColumn
        
        Private columnCLIENT_SEX As Global.System.Data.DataColumn
        
        Private columnCLIENT_AGE As Global.System.Data.DataColumn
        
        Private columnCLIENT_DOB As Global.System.Data.DataColumn
        
        Private columnCLIENT_DATE_REG As Global.System.Data.DataColumn
        
        Private columnCLIENT_ADVISED_ASSESSMENT_DATE As Global.System.Data.DataColumn
        
        Private columnCLIENT_ADVISED_ASSESSMENT As Global.System.Data.DataColumn
        
        Private columnCLIENT_ADDRESS_PHONE As Global.System.Data.DataColumn
        
        Private columnCLIENT_IS_ASSESS_CHECKED As Global.System.Data.DataColumn
        
        Private columnCLIENT_ADVICED_ASSESSMENT_DETAIL As Global.System.Data.DataColumn
        
        Private columnCLIENT_ADVICED_ASSESSMENT_NOTE As Global.System.Data.DataColumn
        
        Private columnFULL_ADDRESS_KH As Global.System.Data.DataColumn
        
        Private columnFULL_ADDRESS_ENG As Global.System.Data.DataColumn
        
        Private columnDIAGNOSIS As Global.System.Data.DataColumn
        
        Private columnDATE_CREATE As Global.System.Data.DataColumn
        
        Private columnIS_CLIENT_NEWOLD As Global.System.Data.DataColumn
        
        Private columnIS_MONINTORING As Global.System.Data.DataColumn
        
        Private columnMONITORING_ID As Global.System.Data.DataColumn
        
        Private columnCLIENT_NO As Global.System.Data.DataColumn
        
        Private columnFACILATER As Global.System.Data.DataColumn
        
        Private columnNOTED_BY As Global.System.Data.DataColumn
        
        Private columnDRUG As Global.System.Data.DataColumn
        
        Private columnCOUNSELING As Global.System.Data.DataColumn
        
        Private columnABT As Global.System.Data.DataColumn
        
        Private columnSPECIAL_NEED As Global.System.Data.DataColumn
        
        Private columnTHEARAPY_NAME As Global.System.Data.DataColumn
        
        Private columnSELF_SEEEN_BY As Global.System.Data.DataColumn
        
        Private columnOTHER_SEEN_BY As Global.System.Data.DataColumn
        
        Private columnREFER_BY_NGO As Global.System.Data.DataColumn
        
        Private columnREFER_BY_SCHOOL As Global.System.Data.DataColumn
        
        Private columnREFER_BY_OTHER As Global.System.Data.DataColumn
        
        Private columnREMARK As Global.System.Data.DataColumn
        
        Private columnCAL_AGE As Global.System.Data.DataColumn
        
        Private columnNUMBER_VISIT As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CCAMH_VIEW_CASE_MONITORING"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_MG_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_MG_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_NAME_KHMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_NAME_KHM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_SEXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_SEX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_AGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_AGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_DOBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_DOB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_DATE_REGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_DATE_REG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_ADVISED_ASSESSMENT_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_ADVISED_ASSESSMENT_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_ADVISED_ASSESSMENTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_ADVISED_ASSESSMENT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_ADDRESS_PHONEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_ADDRESS_PHONE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_IS_ASSESS_CHECKEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_IS_ASSESS_CHECKED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_ADVICED_ASSESSMENT_DETAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_ADVICED_ASSESSMENT_DETAIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_ADVICED_ASSESSMENT_NOTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_ADVICED_ASSESSMENT_NOTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FULL_ADDRESS_KHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFULL_ADDRESS_KH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FULL_ADDRESS_ENGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFULL_ADDRESS_ENG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DIAGNOSISColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIAGNOSIS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DATE_CREATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATE_CREATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IS_CLIENT_NEWOLDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIS_CLIENT_NEWOLD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IS_MONINTORINGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIS_MONINTORING
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MONITORING_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMONITORING_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FACILATERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFACILATER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NOTED_BYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOTED_BY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DRUGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDRUG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COUNSELINGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOUNSELING
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ABTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnABT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SPECIAL_NEEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPECIAL_NEED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property THEARAPY_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTHEARAPY_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SELF_SEEEN_BYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSELF_SEEEN_BY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OTHER_SEEN_BYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOTHER_SEEN_BY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REFER_BY_NGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREFER_BY_NGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REFER_BY_SCHOOLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREFER_BY_SCHOOL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REFER_BY_OTHERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREFER_BY_OTHER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REMARKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREMARK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CAL_AGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCAL_AGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMBER_VISITColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMBER_VISIT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CCAMH_VIEW_CASE_MONITORINGRow
            Get
                Return CType(Me.Rows(index),CCAMH_VIEW_CASE_MONITORINGRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_VIEW_CASE_MONITORINGRowChanging As CCAMH_VIEW_CASE_MONITORINGRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_VIEW_CASE_MONITORINGRowChanged As CCAMH_VIEW_CASE_MONITORINGRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_VIEW_CASE_MONITORINGRowDeleting As CCAMH_VIEW_CASE_MONITORINGRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_VIEW_CASE_MONITORINGRowDeleted As CCAMH_VIEW_CASE_MONITORINGRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCCAMH_VIEW_CASE_MONITORINGRow(ByVal row As CCAMH_VIEW_CASE_MONITORINGRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCCAMH_VIEW_CASE_MONITORINGRow( _
                    ByVal CLIENT_MG_ID As Decimal,  _
                    ByVal CLIENT_NAME_KHM As String,  _
                    ByVal CLIENT_NAME As String,  _
                    ByVal CLIENT_SEX As String,  _
                    ByVal CLIENT_AGE As Decimal,  _
                    ByVal CLIENT_DOB As Date,  _
                    ByVal CLIENT_DATE_REG As Date,  _
                    ByVal CLIENT_ADVISED_ASSESSMENT_DATE As Date,  _
                    ByVal CLIENT_ADVISED_ASSESSMENT As String,  _
                    ByVal CLIENT_ADDRESS_PHONE As String,  _
                    ByVal CLIENT_IS_ASSESS_CHECKED As Boolean,  _
                    ByVal CLIENT_ADVICED_ASSESSMENT_DETAIL As Boolean,  _
                    ByVal CLIENT_ADVICED_ASSESSMENT_NOTE As String,  _
                    ByVal FULL_ADDRESS_KH As String,  _
                    ByVal FULL_ADDRESS_ENG As String,  _
                    ByVal DIAGNOSIS As String,  _
                    ByVal DATE_CREATE As Date,  _
                    ByVal IS_CLIENT_NEWOLD As Decimal,  _
                    ByVal IS_MONINTORING As Boolean,  _
                    ByVal MONITORING_ID As Decimal,  _
                    ByVal CLIENT_NO As Decimal,  _
                    ByVal FACILATER As String,  _
                    ByVal NOTED_BY As String,  _
                    ByVal DRUG As String,  _
                    ByVal COUNSELING As Boolean,  _
                    ByVal ABT As Boolean,  _
                    ByVal SPECIAL_NEED As Boolean,  _
                    ByVal THEARAPY_NAME As String,  _
                    ByVal SELF_SEEEN_BY As Boolean,  _
                    ByVal OTHER_SEEN_BY As String,  _
                    ByVal REFER_BY_NGO As String,  _
                    ByVal REFER_BY_SCHOOL As String,  _
                    ByVal REFER_BY_OTHER As String,  _
                    ByVal REMARK As String,  _
                    ByVal CAL_AGE As Integer,  _
                    ByVal NUMBER_VISIT As Decimal) As CCAMH_VIEW_CASE_MONITORINGRow
            Dim rowCCAMH_VIEW_CASE_MONITORINGRow As CCAMH_VIEW_CASE_MONITORINGRow = CType(Me.NewRow,CCAMH_VIEW_CASE_MONITORINGRow)
            Dim columnValuesArray() As Object = New Object() {CLIENT_MG_ID, CLIENT_NAME_KHM, CLIENT_NAME, CLIENT_SEX, CLIENT_AGE, CLIENT_DOB, CLIENT_DATE_REG, CLIENT_ADVISED_ASSESSMENT_DATE, CLIENT_ADVISED_ASSESSMENT, CLIENT_ADDRESS_PHONE, CLIENT_IS_ASSESS_CHECKED, CLIENT_ADVICED_ASSESSMENT_DETAIL, CLIENT_ADVICED_ASSESSMENT_NOTE, FULL_ADDRESS_KH, FULL_ADDRESS_ENG, DIAGNOSIS, DATE_CREATE, IS_CLIENT_NEWOLD, IS_MONINTORING, MONITORING_ID, CLIENT_NO, FACILATER, NOTED_BY, DRUG, COUNSELING, ABT, SPECIAL_NEED, THEARAPY_NAME, SELF_SEEEN_BY, OTHER_SEEN_BY, REFER_BY_NGO, REFER_BY_SCHOOL, REFER_BY_OTHER, REMARK, CAL_AGE, NUMBER_VISIT}
            rowCCAMH_VIEW_CASE_MONITORINGRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCCAMH_VIEW_CASE_MONITORINGRow)
            Return rowCCAMH_VIEW_CASE_MONITORINGRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CCAMH_VIEW_CASE_MONITORINGDataTable = CType(MyBase.Clone,CCAMH_VIEW_CASE_MONITORINGDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CCAMH_VIEW_CASE_MONITORINGDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCLIENT_MG_ID = MyBase.Columns("CLIENT_MG_ID")
            Me.columnCLIENT_NAME_KHM = MyBase.Columns("CLIENT_NAME_KHM")
            Me.columnCLIENT_NAME = MyBase.Columns("CLIENT_NAME")
            Me.columnCLIENT_SEX = MyBase.Columns("CLIENT_SEX")
            Me.columnCLIENT_AGE = MyBase.Columns("CLIENT_AGE")
            Me.columnCLIENT_DOB = MyBase.Columns("CLIENT_DOB")
            Me.columnCLIENT_DATE_REG = MyBase.Columns("CLIENT_DATE_REG")
            Me.columnCLIENT_ADVISED_ASSESSMENT_DATE = MyBase.Columns("CLIENT_ADVISED_ASSESSMENT_DATE")
            Me.columnCLIENT_ADVISED_ASSESSMENT = MyBase.Columns("CLIENT_ADVISED_ASSESSMENT")
            Me.columnCLIENT_ADDRESS_PHONE = MyBase.Columns("CLIENT_ADDRESS_PHONE")
            Me.columnCLIENT_IS_ASSESS_CHECKED = MyBase.Columns("CLIENT_IS_ASSESS_CHECKED")
            Me.columnCLIENT_ADVICED_ASSESSMENT_DETAIL = MyBase.Columns("CLIENT_ADVICED_ASSESSMENT_DETAIL")
            Me.columnCLIENT_ADVICED_ASSESSMENT_NOTE = MyBase.Columns("CLIENT_ADVICED_ASSESSMENT_NOTE")
            Me.columnFULL_ADDRESS_KH = MyBase.Columns("FULL_ADDRESS_KH")
            Me.columnFULL_ADDRESS_ENG = MyBase.Columns("FULL_ADDRESS_ENG")
            Me.columnDIAGNOSIS = MyBase.Columns("DIAGNOSIS")
            Me.columnDATE_CREATE = MyBase.Columns("DATE_CREATE")
            Me.columnIS_CLIENT_NEWOLD = MyBase.Columns("IS_CLIENT_NEWOLD")
            Me.columnIS_MONINTORING = MyBase.Columns("IS_MONINTORING")
            Me.columnMONITORING_ID = MyBase.Columns("MONITORING_ID")
            Me.columnCLIENT_NO = MyBase.Columns("CLIENT_NO")
            Me.columnFACILATER = MyBase.Columns("FACILATER")
            Me.columnNOTED_BY = MyBase.Columns("NOTED_BY")
            Me.columnDRUG = MyBase.Columns("DRUG")
            Me.columnCOUNSELING = MyBase.Columns("COUNSELING")
            Me.columnABT = MyBase.Columns("ABT")
            Me.columnSPECIAL_NEED = MyBase.Columns("SPECIAL_NEED")
            Me.columnTHEARAPY_NAME = MyBase.Columns("THEARAPY_NAME")
            Me.columnSELF_SEEEN_BY = MyBase.Columns("SELF_SEEEN_BY")
            Me.columnOTHER_SEEN_BY = MyBase.Columns("OTHER_SEEN_BY")
            Me.columnREFER_BY_NGO = MyBase.Columns("REFER_BY_NGO")
            Me.columnREFER_BY_SCHOOL = MyBase.Columns("REFER_BY_SCHOOL")
            Me.columnREFER_BY_OTHER = MyBase.Columns("REFER_BY_OTHER")
            Me.columnREMARK = MyBase.Columns("REMARK")
            Me.columnCAL_AGE = MyBase.Columns("CAL_AGE")
            Me.columnNUMBER_VISIT = MyBase.Columns("NUMBER_VISIT")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCLIENT_MG_ID = New Global.System.Data.DataColumn("CLIENT_MG_ID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_MG_ID)
            Me.columnCLIENT_NAME_KHM = New Global.System.Data.DataColumn("CLIENT_NAME_KHM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_NAME_KHM)
            Me.columnCLIENT_NAME = New Global.System.Data.DataColumn("CLIENT_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_NAME)
            Me.columnCLIENT_SEX = New Global.System.Data.DataColumn("CLIENT_SEX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_SEX)
            Me.columnCLIENT_AGE = New Global.System.Data.DataColumn("CLIENT_AGE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_AGE)
            Me.columnCLIENT_DOB = New Global.System.Data.DataColumn("CLIENT_DOB", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_DOB)
            Me.columnCLIENT_DATE_REG = New Global.System.Data.DataColumn("CLIENT_DATE_REG", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_DATE_REG)
            Me.columnCLIENT_ADVISED_ASSESSMENT_DATE = New Global.System.Data.DataColumn("CLIENT_ADVISED_ASSESSMENT_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_ADVISED_ASSESSMENT_DATE)
            Me.columnCLIENT_ADVISED_ASSESSMENT = New Global.System.Data.DataColumn("CLIENT_ADVISED_ASSESSMENT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_ADVISED_ASSESSMENT)
            Me.columnCLIENT_ADDRESS_PHONE = New Global.System.Data.DataColumn("CLIENT_ADDRESS_PHONE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_ADDRESS_PHONE)
            Me.columnCLIENT_IS_ASSESS_CHECKED = New Global.System.Data.DataColumn("CLIENT_IS_ASSESS_CHECKED", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_IS_ASSESS_CHECKED)
            Me.columnCLIENT_ADVICED_ASSESSMENT_DETAIL = New Global.System.Data.DataColumn("CLIENT_ADVICED_ASSESSMENT_DETAIL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_ADVICED_ASSESSMENT_DETAIL)
            Me.columnCLIENT_ADVICED_ASSESSMENT_NOTE = New Global.System.Data.DataColumn("CLIENT_ADVICED_ASSESSMENT_NOTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_ADVICED_ASSESSMENT_NOTE)
            Me.columnFULL_ADDRESS_KH = New Global.System.Data.DataColumn("FULL_ADDRESS_KH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFULL_ADDRESS_KH)
            Me.columnFULL_ADDRESS_ENG = New Global.System.Data.DataColumn("FULL_ADDRESS_ENG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFULL_ADDRESS_ENG)
            Me.columnDIAGNOSIS = New Global.System.Data.DataColumn("DIAGNOSIS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIAGNOSIS)
            Me.columnDATE_CREATE = New Global.System.Data.DataColumn("DATE_CREATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATE_CREATE)
            Me.columnIS_CLIENT_NEWOLD = New Global.System.Data.DataColumn("IS_CLIENT_NEWOLD", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIS_CLIENT_NEWOLD)
            Me.columnIS_MONINTORING = New Global.System.Data.DataColumn("IS_MONINTORING", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIS_MONINTORING)
            Me.columnMONITORING_ID = New Global.System.Data.DataColumn("MONITORING_ID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMONITORING_ID)
            Me.columnCLIENT_NO = New Global.System.Data.DataColumn("CLIENT_NO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_NO)
            Me.columnFACILATER = New Global.System.Data.DataColumn("FACILATER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFACILATER)
            Me.columnNOTED_BY = New Global.System.Data.DataColumn("NOTED_BY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOTED_BY)
            Me.columnDRUG = New Global.System.Data.DataColumn("DRUG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDRUG)
            Me.columnCOUNSELING = New Global.System.Data.DataColumn("COUNSELING", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOUNSELING)
            Me.columnABT = New Global.System.Data.DataColumn("ABT", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnABT)
            Me.columnSPECIAL_NEED = New Global.System.Data.DataColumn("SPECIAL_NEED", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPECIAL_NEED)
            Me.columnTHEARAPY_NAME = New Global.System.Data.DataColumn("THEARAPY_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTHEARAPY_NAME)
            Me.columnSELF_SEEEN_BY = New Global.System.Data.DataColumn("SELF_SEEEN_BY", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSELF_SEEEN_BY)
            Me.columnOTHER_SEEN_BY = New Global.System.Data.DataColumn("OTHER_SEEN_BY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTHER_SEEN_BY)
            Me.columnREFER_BY_NGO = New Global.System.Data.DataColumn("REFER_BY_NGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREFER_BY_NGO)
            Me.columnREFER_BY_SCHOOL = New Global.System.Data.DataColumn("REFER_BY_SCHOOL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREFER_BY_SCHOOL)
            Me.columnREFER_BY_OTHER = New Global.System.Data.DataColumn("REFER_BY_OTHER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREFER_BY_OTHER)
            Me.columnREMARK = New Global.System.Data.DataColumn("REMARK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREMARK)
            Me.columnCAL_AGE = New Global.System.Data.DataColumn("CAL_AGE", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCAL_AGE)
            Me.columnNUMBER_VISIT = New Global.System.Data.DataColumn("NUMBER_VISIT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMBER_VISIT)
            Me.columnCLIENT_MG_ID.AllowDBNull = false
            Me.columnCLIENT_NAME_KHM.MaxLength = 100
            Me.columnCLIENT_NAME.MaxLength = 100
            Me.columnCLIENT_SEX.MaxLength = 1
            Me.columnCLIENT_ADVISED_ASSESSMENT.MaxLength = 50
            Me.columnCLIENT_ADDRESS_PHONE.MaxLength = 150
            Me.columnCLIENT_ADVICED_ASSESSMENT_NOTE.MaxLength = 250
            Me.columnFULL_ADDRESS_KH.ReadOnly = true
            Me.columnFULL_ADDRESS_KH.MaxLength = 231
            Me.columnFULL_ADDRESS_ENG.ReadOnly = true
            Me.columnFULL_ADDRESS_ENG.MaxLength = 245
            Me.columnDIAGNOSIS.MaxLength = 150
            Me.columnDATE_CREATE.AllowDBNull = false
            Me.columnMONITORING_ID.AllowDBNull = false
            Me.columnFACILATER.MaxLength = 150
            Me.columnNOTED_BY.MaxLength = 150
            Me.columnDRUG.MaxLength = 250
            Me.columnTHEARAPY_NAME.MaxLength = 150
            Me.columnOTHER_SEEN_BY.MaxLength = 150
            Me.columnREFER_BY_NGO.MaxLength = 150
            Me.columnREFER_BY_SCHOOL.MaxLength = 150
            Me.columnREFER_BY_OTHER.MaxLength = 150
            Me.columnREMARK.MaxLength = 250
            Me.columnCAL_AGE.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCCAMH_VIEW_CASE_MONITORINGRow() As CCAMH_VIEW_CASE_MONITORINGRow
            Return CType(Me.NewRow,CCAMH_VIEW_CASE_MONITORINGRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CCAMH_VIEW_CASE_MONITORINGRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CCAMH_VIEW_CASE_MONITORINGRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CCAMH_VIEW_CASE_MONITORINGRowChangedEvent) Is Nothing) Then
                RaiseEvent CCAMH_VIEW_CASE_MONITORINGRowChanged(Me, New CCAMH_VIEW_CASE_MONITORINGRowChangeEvent(CType(e.Row,CCAMH_VIEW_CASE_MONITORINGRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CCAMH_VIEW_CASE_MONITORINGRowChangingEvent) Is Nothing) Then
                RaiseEvent CCAMH_VIEW_CASE_MONITORINGRowChanging(Me, New CCAMH_VIEW_CASE_MONITORINGRowChangeEvent(CType(e.Row,CCAMH_VIEW_CASE_MONITORINGRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CCAMH_VIEW_CASE_MONITORINGRowDeletedEvent) Is Nothing) Then
                RaiseEvent CCAMH_VIEW_CASE_MONITORINGRowDeleted(Me, New CCAMH_VIEW_CASE_MONITORINGRowChangeEvent(CType(e.Row,CCAMH_VIEW_CASE_MONITORINGRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CCAMH_VIEW_CASE_MONITORINGRowDeletingEvent) Is Nothing) Then
                RaiseEvent CCAMH_VIEW_CASE_MONITORINGRowDeleting(Me, New CCAMH_VIEW_CASE_MONITORINGRowChangeEvent(CType(e.Row,CCAMH_VIEW_CASE_MONITORINGRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCCAMH_VIEW_CASE_MONITORINGRow(ByVal row As CCAMH_VIEW_CASE_MONITORINGRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSCaseMonitoring = New DSCaseMonitoring()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CCAMH_VIEW_CASE_MONITORINGDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CCAMH_REFERED_DETIALDataTable
        Inherits Global.System.Data.TypedTableBase(Of CCAMH_REFERED_DETIALRow)
        
        Private columnREFER_ID As Global.System.Data.DataColumn
        
        Private columnCLIENT_REG_ID As Global.System.Data.DataColumn
        
        Private columnCLIENT_NO As Global.System.Data.DataColumn
        
        Private columnREFERED_FROM As Global.System.Data.DataColumn
        
        Private columnREFERED_TYPE As Global.System.Data.DataColumn
        
        Private columnREFFERED_NOTE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CCAMH_REFERED_DETIAL"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REFER_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREFER_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_REG_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_REG_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENT_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REFERED_FROMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREFERED_FROM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REFERED_TYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREFERED_TYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REFFERED_NOTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREFFERED_NOTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CCAMH_REFERED_DETIALRow
            Get
                Return CType(Me.Rows(index),CCAMH_REFERED_DETIALRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_REFERED_DETIALRowChanging As CCAMH_REFERED_DETIALRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_REFERED_DETIALRowChanged As CCAMH_REFERED_DETIALRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_REFERED_DETIALRowDeleting As CCAMH_REFERED_DETIALRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CCAMH_REFERED_DETIALRowDeleted As CCAMH_REFERED_DETIALRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCCAMH_REFERED_DETIALRow(ByVal row As CCAMH_REFERED_DETIALRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCCAMH_REFERED_DETIALRow(ByVal CLIENT_REG_ID As Decimal, ByVal CLIENT_NO As Decimal, ByVal REFERED_FROM As String, ByVal REFERED_TYPE As String, ByVal REFFERED_NOTE As String) As CCAMH_REFERED_DETIALRow
            Dim rowCCAMH_REFERED_DETIALRow As CCAMH_REFERED_DETIALRow = CType(Me.NewRow,CCAMH_REFERED_DETIALRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, CLIENT_REG_ID, CLIENT_NO, REFERED_FROM, REFERED_TYPE, REFFERED_NOTE}
            rowCCAMH_REFERED_DETIALRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCCAMH_REFERED_DETIALRow)
            Return rowCCAMH_REFERED_DETIALRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByREFER_ID(ByVal REFER_ID As Decimal) As CCAMH_REFERED_DETIALRow
            Return CType(Me.Rows.Find(New Object() {REFER_ID}),CCAMH_REFERED_DETIALRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CCAMH_REFERED_DETIALDataTable = CType(MyBase.Clone,CCAMH_REFERED_DETIALDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CCAMH_REFERED_DETIALDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnREFER_ID = MyBase.Columns("REFER_ID")
            Me.columnCLIENT_REG_ID = MyBase.Columns("CLIENT_REG_ID")
            Me.columnCLIENT_NO = MyBase.Columns("CLIENT_NO")
            Me.columnREFERED_FROM = MyBase.Columns("REFERED_FROM")
            Me.columnREFERED_TYPE = MyBase.Columns("REFERED_TYPE")
            Me.columnREFFERED_NOTE = MyBase.Columns("REFFERED_NOTE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnREFER_ID = New Global.System.Data.DataColumn("REFER_ID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREFER_ID)
            Me.columnCLIENT_REG_ID = New Global.System.Data.DataColumn("CLIENT_REG_ID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_REG_ID)
            Me.columnCLIENT_NO = New Global.System.Data.DataColumn("CLIENT_NO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENT_NO)
            Me.columnREFERED_FROM = New Global.System.Data.DataColumn("REFERED_FROM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREFERED_FROM)
            Me.columnREFERED_TYPE = New Global.System.Data.DataColumn("REFERED_TYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREFERED_TYPE)
            Me.columnREFFERED_NOTE = New Global.System.Data.DataColumn("REFFERED_NOTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREFFERED_NOTE)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnREFER_ID}, true))
            Me.columnREFER_ID.AutoIncrement = true
            Me.columnREFER_ID.AutoIncrementSeed = -1
            Me.columnREFER_ID.AutoIncrementStep = -1
            Me.columnREFER_ID.AllowDBNull = false
            Me.columnREFER_ID.ReadOnly = true
            Me.columnREFER_ID.Unique = true
            Me.columnREFERED_FROM.MaxLength = 150
            Me.columnREFERED_TYPE.MaxLength = 150
            Me.columnREFFERED_NOTE.MaxLength = 250
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCCAMH_REFERED_DETIALRow() As CCAMH_REFERED_DETIALRow
            Return CType(Me.NewRow,CCAMH_REFERED_DETIALRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CCAMH_REFERED_DETIALRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CCAMH_REFERED_DETIALRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CCAMH_REFERED_DETIALRowChangedEvent) Is Nothing) Then
                RaiseEvent CCAMH_REFERED_DETIALRowChanged(Me, New CCAMH_REFERED_DETIALRowChangeEvent(CType(e.Row,CCAMH_REFERED_DETIALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CCAMH_REFERED_DETIALRowChangingEvent) Is Nothing) Then
                RaiseEvent CCAMH_REFERED_DETIALRowChanging(Me, New CCAMH_REFERED_DETIALRowChangeEvent(CType(e.Row,CCAMH_REFERED_DETIALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CCAMH_REFERED_DETIALRowDeletedEvent) Is Nothing) Then
                RaiseEvent CCAMH_REFERED_DETIALRowDeleted(Me, New CCAMH_REFERED_DETIALRowChangeEvent(CType(e.Row,CCAMH_REFERED_DETIALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CCAMH_REFERED_DETIALRowDeletingEvent) Is Nothing) Then
                RaiseEvent CCAMH_REFERED_DETIALRowDeleting(Me, New CCAMH_REFERED_DETIALRowChangeEvent(CType(e.Row,CCAMH_REFERED_DETIALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCCAMH_REFERED_DETIALRow(ByVal row As CCAMH_REFERED_DETIALRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSCaseMonitoring = New DSCaseMonitoring()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CCAMH_REFERED_DETIALDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CCAMH_VIEW_PRESCRIPTIONRow
        Inherits Global.System.Data.DataRow
        
        Private tableCCAMH_VIEW_PRESCRIPTION As CCAMH_VIEW_PRESCRIPTIONDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCCAMH_VIEW_PRESCRIPTION = CType(Me.Table,CCAMH_VIEW_PRESCRIPTIONDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRESC_ID() As Decimal
            Get
                Return CType(Me(Me.tableCCAMH_VIEW_PRESCRIPTION.PRESC_IDColumn),Decimal)
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_PRESCRIPTION.PRESC_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_NO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_PRESCRIPTION.CLIENT_NOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_NO' in table 'CCAMH_VIEW_PRESCRIPTION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_PRESCRIPTION.CLIENT_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_PRESCRIPTION.CLIENT_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_NAME' in table 'CCAMH_VIEW_PRESCRIPTION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_PRESCRIPTION.CLIENT_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_AGE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_PRESCRIPTION.CLIENT_AGEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_AGE' in table 'CCAMH_VIEW_PRESCRIPTION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_PRESCRIPTION.CLIENT_AGEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_SEX() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_PRESCRIPTION.CLIENT_SEXColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_SEX' in table 'CCAMH_VIEW_PRESCRIPTION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_PRESCRIPTION.CLIENT_SEXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_TYPE() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_PRESCRIPTION.CLIENT_TYPEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_TYPE' in table 'CCAMH_VIEW_PRESCRIPTION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_PRESCRIPTION.CLIENT_TYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DOCTOR_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_PRESCRIPTION.DOCTOR_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DOCTOR_NAME' in table 'CCAMH_VIEW_PRESCRIPTION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_PRESCRIPTION.DOCTOR_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DATE_PRESCR() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_PRESCRIPTION.DATE_PRESCRColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DATE_PRESCR' in table 'CCAMH_VIEW_PRESCRIPTION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_PRESCRIPTION.DATE_PRESCRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DATE_NEXT_VISIT() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_PRESCRIPTION.DATE_NEXT_VISITColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DATE_NEXT_VISIT' in table 'CCAMH_VIEW_PRESCRIPTION' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_PRESCRIPTION.DATE_NEXT_VISITColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IS_DELETE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_PRESCRIPTION.IS_DELETEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IS_DELETE' in table 'CCAMH_VIEW_PRESCRIPTION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_PRESCRIPTION.IS_DELETEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MED_ID() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_PRESCRIPTION.MED_IDColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MED_ID' in table 'CCAMH_VIEW_PRESCRIPTION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_PRESCRIPTION.MED_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MED_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_PRESCRIPTION.MED_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MED_NAME' in table 'CCAMH_VIEW_PRESCRIPTION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_PRESCRIPTION.MED_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MED_M() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_PRESCRIPTION.MED_MColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MED_M' in table 'CCAMH_VIEW_PRESCRIPTION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_PRESCRIPTION.MED_MColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MED_N() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_PRESCRIPTION.MED_NColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MED_N' in table 'CCAMH_VIEW_PRESCRIPTION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_PRESCRIPTION.MED_NColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MED_E() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_PRESCRIPTION.MED_EColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MED_E' in table 'CCAMH_VIEW_PRESCRIPTION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_PRESCRIPTION.MED_EColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MED_QTY() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_PRESCRIPTION.MED_QTYColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MED_QTY' in table 'CCAMH_VIEW_PRESCRIPTION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_PRESCRIPTION.MED_QTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MED_PRICE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_PRESCRIPTION.MED_PRICEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MED_PRICE' in table 'CCAMH_VIEW_PRESCRIPTION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_PRESCRIPTION.MED_PRICEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MED_SUB_TOTAL() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_PRESCRIPTION.MED_SUB_TOTALColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MED_SUB_TOTAL' in table 'CCAMH_VIEW_PRESCRIPTION' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_PRESCRIPTION.MED_SUB_TOTALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRESCRIPT_NOTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_PRESCRIPTION.PRESCRIPT_NOTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRESCRIPT_NOTE' in table 'CCAMH_VIEW_PRESCRIPTION' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_PRESCRIPTION.PRESCRIPT_NOTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IS_RECEIVED() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_PRESCRIPTION.IS_RECEIVEDColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IS_RECEIVED' in table 'CCAMH_VIEW_PRESCRIPTION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_PRESCRIPTION.IS_RECEIVEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REMARK() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_PRESCRIPTION.REMARKColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REMARK' in table 'CCAMH_VIEW_PRESCRIPTION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_PRESCRIPTION.REMARKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_NONull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_PRESCRIPTION.CLIENT_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_NONull()
            Me(Me.tableCCAMH_VIEW_PRESCRIPTION.CLIENT_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_NAMENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_PRESCRIPTION.CLIENT_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_NAMENull()
            Me(Me.tableCCAMH_VIEW_PRESCRIPTION.CLIENT_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_AGENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_PRESCRIPTION.CLIENT_AGEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_AGENull()
            Me(Me.tableCCAMH_VIEW_PRESCRIPTION.CLIENT_AGEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_SEXNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_PRESCRIPTION.CLIENT_SEXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_SEXNull()
            Me(Me.tableCCAMH_VIEW_PRESCRIPTION.CLIENT_SEXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_TYPENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_PRESCRIPTION.CLIENT_TYPEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_TYPENull()
            Me(Me.tableCCAMH_VIEW_PRESCRIPTION.CLIENT_TYPEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDOCTOR_NAMENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_PRESCRIPTION.DOCTOR_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDOCTOR_NAMENull()
            Me(Me.tableCCAMH_VIEW_PRESCRIPTION.DOCTOR_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDATE_PRESCRNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_PRESCRIPTION.DATE_PRESCRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDATE_PRESCRNull()
            Me(Me.tableCCAMH_VIEW_PRESCRIPTION.DATE_PRESCRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDATE_NEXT_VISITNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_PRESCRIPTION.DATE_NEXT_VISITColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDATE_NEXT_VISITNull()
            Me(Me.tableCCAMH_VIEW_PRESCRIPTION.DATE_NEXT_VISITColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIS_DELETENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_PRESCRIPTION.IS_DELETEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIS_DELETENull()
            Me(Me.tableCCAMH_VIEW_PRESCRIPTION.IS_DELETEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMED_IDNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_PRESCRIPTION.MED_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMED_IDNull()
            Me(Me.tableCCAMH_VIEW_PRESCRIPTION.MED_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMED_NAMENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_PRESCRIPTION.MED_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMED_NAMENull()
            Me(Me.tableCCAMH_VIEW_PRESCRIPTION.MED_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMED_MNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_PRESCRIPTION.MED_MColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMED_MNull()
            Me(Me.tableCCAMH_VIEW_PRESCRIPTION.MED_MColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMED_NNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_PRESCRIPTION.MED_NColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMED_NNull()
            Me(Me.tableCCAMH_VIEW_PRESCRIPTION.MED_NColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMED_ENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_PRESCRIPTION.MED_EColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMED_ENull()
            Me(Me.tableCCAMH_VIEW_PRESCRIPTION.MED_EColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMED_QTYNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_PRESCRIPTION.MED_QTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMED_QTYNull()
            Me(Me.tableCCAMH_VIEW_PRESCRIPTION.MED_QTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMED_PRICENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_PRESCRIPTION.MED_PRICEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMED_PRICENull()
            Me(Me.tableCCAMH_VIEW_PRESCRIPTION.MED_PRICEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMED_SUB_TOTALNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_PRESCRIPTION.MED_SUB_TOTALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMED_SUB_TOTALNull()
            Me(Me.tableCCAMH_VIEW_PRESCRIPTION.MED_SUB_TOTALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRESCRIPT_NOTENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_PRESCRIPTION.PRESCRIPT_NOTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRESCRIPT_NOTENull()
            Me(Me.tableCCAMH_VIEW_PRESCRIPTION.PRESCRIPT_NOTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIS_RECEIVEDNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_PRESCRIPTION.IS_RECEIVEDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIS_RECEIVEDNull()
            Me(Me.tableCCAMH_VIEW_PRESCRIPTION.IS_RECEIVEDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsREMARKNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_PRESCRIPTION.REMARKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetREMARKNull()
            Me(Me.tableCCAMH_VIEW_PRESCRIPTION.REMARKColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CCAMH_VIEW_CASE_MONITORINGRow
        Inherits Global.System.Data.DataRow
        
        Private tableCCAMH_VIEW_CASE_MONITORING As CCAMH_VIEW_CASE_MONITORINGDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCCAMH_VIEW_CASE_MONITORING = CType(Me.Table,CCAMH_VIEW_CASE_MONITORINGDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_MG_ID() As Decimal
            Get
                Return CType(Me(Me.tableCCAMH_VIEW_CASE_MONITORING.CLIENT_MG_IDColumn),Decimal)
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_CASE_MONITORING.CLIENT_MG_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_NAME_KHM() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_CASE_MONITORING.CLIENT_NAME_KHMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_NAME_KHM' in table 'CCAMH_VIEW_CASE_MONITORING' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_CASE_MONITORING.CLIENT_NAME_KHMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_CASE_MONITORING.CLIENT_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_NAME' in table 'CCAMH_VIEW_CASE_MONITORING' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_CASE_MONITORING.CLIENT_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_SEX() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_CASE_MONITORING.CLIENT_SEXColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_SEX' in table 'CCAMH_VIEW_CASE_MONITORING' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_CASE_MONITORING.CLIENT_SEXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_AGE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_CASE_MONITORING.CLIENT_AGEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_AGE' in table 'CCAMH_VIEW_CASE_MONITORING' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_CASE_MONITORING.CLIENT_AGEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_DOB() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_CASE_MONITORING.CLIENT_DOBColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_DOB' in table 'CCAMH_VIEW_CASE_MONITORING' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_CASE_MONITORING.CLIENT_DOBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_DATE_REG() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_CASE_MONITORING.CLIENT_DATE_REGColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_DATE_REG' in table 'CCAMH_VIEW_CASE_MONITORING' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_CASE_MONITORING.CLIENT_DATE_REGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_ADVISED_ASSESSMENT_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_CASE_MONITORING.CLIENT_ADVISED_ASSESSMENT_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_ADVISED_ASSESSMENT_DATE' in table 'CCAMH_VIEW_CASE_M"& _ 
                            "ONITORING' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_CASE_MONITORING.CLIENT_ADVISED_ASSESSMENT_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_ADVISED_ASSESSMENT() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_CASE_MONITORING.CLIENT_ADVISED_ASSESSMENTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_ADVISED_ASSESSMENT' in table 'CCAMH_VIEW_CASE_MONITO"& _ 
                            "RING' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_CASE_MONITORING.CLIENT_ADVISED_ASSESSMENTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_ADDRESS_PHONE() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_CASE_MONITORING.CLIENT_ADDRESS_PHONEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_ADDRESS_PHONE' in table 'CCAMH_VIEW_CASE_MONITORING'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_CASE_MONITORING.CLIENT_ADDRESS_PHONEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_IS_ASSESS_CHECKED() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_CASE_MONITORING.CLIENT_IS_ASSESS_CHECKEDColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_IS_ASSESS_CHECKED' in table 'CCAMH_VIEW_CASE_MONITOR"& _ 
                            "ING' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_CASE_MONITORING.CLIENT_IS_ASSESS_CHECKEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_ADVICED_ASSESSMENT_DETAIL() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_CASE_MONITORING.CLIENT_ADVICED_ASSESSMENT_DETAILColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_ADVICED_ASSESSMENT_DETAIL' in table 'CCAMH_VIEW_CASE"& _ 
                            "_MONITORING' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_CASE_MONITORING.CLIENT_ADVICED_ASSESSMENT_DETAILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_ADVICED_ASSESSMENT_NOTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_CASE_MONITORING.CLIENT_ADVICED_ASSESSMENT_NOTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_ADVICED_ASSESSMENT_NOTE' in table 'CCAMH_VIEW_CASE_M"& _ 
                            "ONITORING' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_CASE_MONITORING.CLIENT_ADVICED_ASSESSMENT_NOTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FULL_ADDRESS_KH() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_CASE_MONITORING.FULL_ADDRESS_KHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FULL_ADDRESS_KH' in table 'CCAMH_VIEW_CASE_MONITORING' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_CASE_MONITORING.FULL_ADDRESS_KHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FULL_ADDRESS_ENG() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_CASE_MONITORING.FULL_ADDRESS_ENGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FULL_ADDRESS_ENG' in table 'CCAMH_VIEW_CASE_MONITORING' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_CASE_MONITORING.FULL_ADDRESS_ENGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DIAGNOSIS() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_CASE_MONITORING.DIAGNOSISColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIAGNOSIS' in table 'CCAMH_VIEW_CASE_MONITORING' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_CASE_MONITORING.DIAGNOSISColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DATE_CREATE() As Date
            Get
                Return CType(Me(Me.tableCCAMH_VIEW_CASE_MONITORING.DATE_CREATEColumn),Date)
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_CASE_MONITORING.DATE_CREATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IS_CLIENT_NEWOLD() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_CASE_MONITORING.IS_CLIENT_NEWOLDColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IS_CLIENT_NEWOLD' in table 'CCAMH_VIEW_CASE_MONITORING' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_CASE_MONITORING.IS_CLIENT_NEWOLDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IS_MONINTORING() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_CASE_MONITORING.IS_MONINTORINGColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IS_MONINTORING' in table 'CCAMH_VIEW_CASE_MONITORING' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_CASE_MONITORING.IS_MONINTORINGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MONITORING_ID() As Decimal
            Get
                Return CType(Me(Me.tableCCAMH_VIEW_CASE_MONITORING.MONITORING_IDColumn),Decimal)
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_CASE_MONITORING.MONITORING_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_NO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_CASE_MONITORING.CLIENT_NOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_NO' in table 'CCAMH_VIEW_CASE_MONITORING' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_CASE_MONITORING.CLIENT_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FACILATER() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_CASE_MONITORING.FACILATERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FACILATER' in table 'CCAMH_VIEW_CASE_MONITORING' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_CASE_MONITORING.FACILATERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NOTED_BY() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_CASE_MONITORING.NOTED_BYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOTED_BY' in table 'CCAMH_VIEW_CASE_MONITORING' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_CASE_MONITORING.NOTED_BYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DRUG() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_CASE_MONITORING.DRUGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DRUG' in table 'CCAMH_VIEW_CASE_MONITORING' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_CASE_MONITORING.DRUGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COUNSELING() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_CASE_MONITORING.COUNSELINGColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COUNSELING' in table 'CCAMH_VIEW_CASE_MONITORING' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_CASE_MONITORING.COUNSELINGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ABT() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_CASE_MONITORING.ABTColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ABT' in table 'CCAMH_VIEW_CASE_MONITORING' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_CASE_MONITORING.ABTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SPECIAL_NEED() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_CASE_MONITORING.SPECIAL_NEEDColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SPECIAL_NEED' in table 'CCAMH_VIEW_CASE_MONITORING' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_CASE_MONITORING.SPECIAL_NEEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property THEARAPY_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_CASE_MONITORING.THEARAPY_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'THEARAPY_NAME' in table 'CCAMH_VIEW_CASE_MONITORING' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_CASE_MONITORING.THEARAPY_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SELF_SEEEN_BY() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_CASE_MONITORING.SELF_SEEEN_BYColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SELF_SEEEN_BY' in table 'CCAMH_VIEW_CASE_MONITORING' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_CASE_MONITORING.SELF_SEEEN_BYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OTHER_SEEN_BY() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_CASE_MONITORING.OTHER_SEEN_BYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OTHER_SEEN_BY' in table 'CCAMH_VIEW_CASE_MONITORING' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_CASE_MONITORING.OTHER_SEEN_BYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REFER_BY_NGO() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_CASE_MONITORING.REFER_BY_NGOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REFER_BY_NGO' in table 'CCAMH_VIEW_CASE_MONITORING' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_CASE_MONITORING.REFER_BY_NGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REFER_BY_SCHOOL() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_CASE_MONITORING.REFER_BY_SCHOOLColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REFER_BY_SCHOOL' in table 'CCAMH_VIEW_CASE_MONITORING' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_CASE_MONITORING.REFER_BY_SCHOOLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REFER_BY_OTHER() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_CASE_MONITORING.REFER_BY_OTHERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REFER_BY_OTHER' in table 'CCAMH_VIEW_CASE_MONITORING' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_CASE_MONITORING.REFER_BY_OTHERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REMARK() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_CASE_MONITORING.REMARKColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REMARK' in table 'CCAMH_VIEW_CASE_MONITORING' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_CASE_MONITORING.REMARKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CAL_AGE() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_CASE_MONITORING.CAL_AGEColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CAL_AGE' in table 'CCAMH_VIEW_CASE_MONITORING' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_CASE_MONITORING.CAL_AGEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NUMBER_VISIT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_VIEW_CASE_MONITORING.NUMBER_VISITColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUMBER_VISIT' in table 'CCAMH_VIEW_CASE_MONITORING' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_VIEW_CASE_MONITORING.NUMBER_VISITColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_NAME_KHMNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_CASE_MONITORING.CLIENT_NAME_KHMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_NAME_KHMNull()
            Me(Me.tableCCAMH_VIEW_CASE_MONITORING.CLIENT_NAME_KHMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_NAMENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_CASE_MONITORING.CLIENT_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_NAMENull()
            Me(Me.tableCCAMH_VIEW_CASE_MONITORING.CLIENT_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_SEXNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_CASE_MONITORING.CLIENT_SEXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_SEXNull()
            Me(Me.tableCCAMH_VIEW_CASE_MONITORING.CLIENT_SEXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_AGENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_CASE_MONITORING.CLIENT_AGEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_AGENull()
            Me(Me.tableCCAMH_VIEW_CASE_MONITORING.CLIENT_AGEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_DOBNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_CASE_MONITORING.CLIENT_DOBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_DOBNull()
            Me(Me.tableCCAMH_VIEW_CASE_MONITORING.CLIENT_DOBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_DATE_REGNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_CASE_MONITORING.CLIENT_DATE_REGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_DATE_REGNull()
            Me(Me.tableCCAMH_VIEW_CASE_MONITORING.CLIENT_DATE_REGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_ADVISED_ASSESSMENT_DATENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_CASE_MONITORING.CLIENT_ADVISED_ASSESSMENT_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_ADVISED_ASSESSMENT_DATENull()
            Me(Me.tableCCAMH_VIEW_CASE_MONITORING.CLIENT_ADVISED_ASSESSMENT_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_ADVISED_ASSESSMENTNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_CASE_MONITORING.CLIENT_ADVISED_ASSESSMENTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_ADVISED_ASSESSMENTNull()
            Me(Me.tableCCAMH_VIEW_CASE_MONITORING.CLIENT_ADVISED_ASSESSMENTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_ADDRESS_PHONENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_CASE_MONITORING.CLIENT_ADDRESS_PHONEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_ADDRESS_PHONENull()
            Me(Me.tableCCAMH_VIEW_CASE_MONITORING.CLIENT_ADDRESS_PHONEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_IS_ASSESS_CHECKEDNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_CASE_MONITORING.CLIENT_IS_ASSESS_CHECKEDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_IS_ASSESS_CHECKEDNull()
            Me(Me.tableCCAMH_VIEW_CASE_MONITORING.CLIENT_IS_ASSESS_CHECKEDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_ADVICED_ASSESSMENT_DETAILNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_CASE_MONITORING.CLIENT_ADVICED_ASSESSMENT_DETAILColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_ADVICED_ASSESSMENT_DETAILNull()
            Me(Me.tableCCAMH_VIEW_CASE_MONITORING.CLIENT_ADVICED_ASSESSMENT_DETAILColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_ADVICED_ASSESSMENT_NOTENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_CASE_MONITORING.CLIENT_ADVICED_ASSESSMENT_NOTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_ADVICED_ASSESSMENT_NOTENull()
            Me(Me.tableCCAMH_VIEW_CASE_MONITORING.CLIENT_ADVICED_ASSESSMENT_NOTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFULL_ADDRESS_KHNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_CASE_MONITORING.FULL_ADDRESS_KHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFULL_ADDRESS_KHNull()
            Me(Me.tableCCAMH_VIEW_CASE_MONITORING.FULL_ADDRESS_KHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFULL_ADDRESS_ENGNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_CASE_MONITORING.FULL_ADDRESS_ENGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFULL_ADDRESS_ENGNull()
            Me(Me.tableCCAMH_VIEW_CASE_MONITORING.FULL_ADDRESS_ENGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDIAGNOSISNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_CASE_MONITORING.DIAGNOSISColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDIAGNOSISNull()
            Me(Me.tableCCAMH_VIEW_CASE_MONITORING.DIAGNOSISColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIS_CLIENT_NEWOLDNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_CASE_MONITORING.IS_CLIENT_NEWOLDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIS_CLIENT_NEWOLDNull()
            Me(Me.tableCCAMH_VIEW_CASE_MONITORING.IS_CLIENT_NEWOLDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIS_MONINTORINGNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_CASE_MONITORING.IS_MONINTORINGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIS_MONINTORINGNull()
            Me(Me.tableCCAMH_VIEW_CASE_MONITORING.IS_MONINTORINGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_NONull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_CASE_MONITORING.CLIENT_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_NONull()
            Me(Me.tableCCAMH_VIEW_CASE_MONITORING.CLIENT_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFACILATERNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_CASE_MONITORING.FACILATERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFACILATERNull()
            Me(Me.tableCCAMH_VIEW_CASE_MONITORING.FACILATERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNOTED_BYNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_CASE_MONITORING.NOTED_BYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNOTED_BYNull()
            Me(Me.tableCCAMH_VIEW_CASE_MONITORING.NOTED_BYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDRUGNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_CASE_MONITORING.DRUGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDRUGNull()
            Me(Me.tableCCAMH_VIEW_CASE_MONITORING.DRUGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOUNSELINGNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_CASE_MONITORING.COUNSELINGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOUNSELINGNull()
            Me(Me.tableCCAMH_VIEW_CASE_MONITORING.COUNSELINGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsABTNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_CASE_MONITORING.ABTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetABTNull()
            Me(Me.tableCCAMH_VIEW_CASE_MONITORING.ABTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSPECIAL_NEEDNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_CASE_MONITORING.SPECIAL_NEEDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSPECIAL_NEEDNull()
            Me(Me.tableCCAMH_VIEW_CASE_MONITORING.SPECIAL_NEEDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTHEARAPY_NAMENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_CASE_MONITORING.THEARAPY_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTHEARAPY_NAMENull()
            Me(Me.tableCCAMH_VIEW_CASE_MONITORING.THEARAPY_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSELF_SEEEN_BYNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_CASE_MONITORING.SELF_SEEEN_BYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSELF_SEEEN_BYNull()
            Me(Me.tableCCAMH_VIEW_CASE_MONITORING.SELF_SEEEN_BYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOTHER_SEEN_BYNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_CASE_MONITORING.OTHER_SEEN_BYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOTHER_SEEN_BYNull()
            Me(Me.tableCCAMH_VIEW_CASE_MONITORING.OTHER_SEEN_BYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsREFER_BY_NGONull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_CASE_MONITORING.REFER_BY_NGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetREFER_BY_NGONull()
            Me(Me.tableCCAMH_VIEW_CASE_MONITORING.REFER_BY_NGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsREFER_BY_SCHOOLNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_CASE_MONITORING.REFER_BY_SCHOOLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetREFER_BY_SCHOOLNull()
            Me(Me.tableCCAMH_VIEW_CASE_MONITORING.REFER_BY_SCHOOLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsREFER_BY_OTHERNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_CASE_MONITORING.REFER_BY_OTHERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetREFER_BY_OTHERNull()
            Me(Me.tableCCAMH_VIEW_CASE_MONITORING.REFER_BY_OTHERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsREMARKNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_CASE_MONITORING.REMARKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetREMARKNull()
            Me(Me.tableCCAMH_VIEW_CASE_MONITORING.REMARKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCAL_AGENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_CASE_MONITORING.CAL_AGEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCAL_AGENull()
            Me(Me.tableCCAMH_VIEW_CASE_MONITORING.CAL_AGEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNUMBER_VISITNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_VIEW_CASE_MONITORING.NUMBER_VISITColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNUMBER_VISITNull()
            Me(Me.tableCCAMH_VIEW_CASE_MONITORING.NUMBER_VISITColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CCAMH_REFERED_DETIALRow
        Inherits Global.System.Data.DataRow
        
        Private tableCCAMH_REFERED_DETIAL As CCAMH_REFERED_DETIALDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCCAMH_REFERED_DETIAL = CType(Me.Table,CCAMH_REFERED_DETIALDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REFER_ID() As Decimal
            Get
                Return CType(Me(Me.tableCCAMH_REFERED_DETIAL.REFER_IDColumn),Decimal)
            End Get
            Set
                Me(Me.tableCCAMH_REFERED_DETIAL.REFER_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_REG_ID() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_REFERED_DETIAL.CLIENT_REG_IDColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_REG_ID' in table 'CCAMH_REFERED_DETIAL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_REFERED_DETIAL.CLIENT_REG_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENT_NO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_REFERED_DETIAL.CLIENT_NOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENT_NO' in table 'CCAMH_REFERED_DETIAL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_REFERED_DETIAL.CLIENT_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REFERED_FROM() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_REFERED_DETIAL.REFERED_FROMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REFERED_FROM' in table 'CCAMH_REFERED_DETIAL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_REFERED_DETIAL.REFERED_FROMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REFERED_TYPE() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_REFERED_DETIAL.REFERED_TYPEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REFERED_TYPE' in table 'CCAMH_REFERED_DETIAL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_REFERED_DETIAL.REFERED_TYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REFFERED_NOTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableCCAMH_REFERED_DETIAL.REFFERED_NOTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REFFERED_NOTE' in table 'CCAMH_REFERED_DETIAL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCCAMH_REFERED_DETIAL.REFFERED_NOTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_REG_IDNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_REFERED_DETIAL.CLIENT_REG_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_REG_IDNull()
            Me(Me.tableCCAMH_REFERED_DETIAL.CLIENT_REG_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENT_NONull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_REFERED_DETIAL.CLIENT_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENT_NONull()
            Me(Me.tableCCAMH_REFERED_DETIAL.CLIENT_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsREFERED_FROMNull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_REFERED_DETIAL.REFERED_FROMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetREFERED_FROMNull()
            Me(Me.tableCCAMH_REFERED_DETIAL.REFERED_FROMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsREFERED_TYPENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_REFERED_DETIAL.REFERED_TYPEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetREFERED_TYPENull()
            Me(Me.tableCCAMH_REFERED_DETIAL.REFERED_TYPEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsREFFERED_NOTENull() As Boolean
            Return Me.IsNull(Me.tableCCAMH_REFERED_DETIAL.REFFERED_NOTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetREFFERED_NOTENull()
            Me(Me.tableCCAMH_REFERED_DETIAL.REFFERED_NOTEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class CCAMH_VIEW_PRESCRIPTIONRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CCAMH_VIEW_PRESCRIPTIONRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As CCAMH_VIEW_PRESCRIPTIONRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As CCAMH_VIEW_PRESCRIPTIONRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class CCAMH_VIEW_CASE_MONITORINGRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CCAMH_VIEW_CASE_MONITORINGRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As CCAMH_VIEW_CASE_MONITORINGRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As CCAMH_VIEW_CASE_MONITORINGRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class CCAMH_REFERED_DETIALRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CCAMH_REFERED_DETIALRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As CCAMH_REFERED_DETIALRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As CCAMH_REFERED_DETIALRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace DSCaseMonitoringTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class CCAMH_VIEW_PRESCRIPTIONTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "CCAMH_VIEW_PRESCRIPTION"
            tableMapping.ColumnMappings.Add("PRESC_ID", "PRESC_ID")
            tableMapping.ColumnMappings.Add("CLIENT_NO", "CLIENT_NO")
            tableMapping.ColumnMappings.Add("CLIENT_NAME", "CLIENT_NAME")
            tableMapping.ColumnMappings.Add("CLIENT_AGE", "CLIENT_AGE")
            tableMapping.ColumnMappings.Add("CLIENT_SEX", "CLIENT_SEX")
            tableMapping.ColumnMappings.Add("CLIENT_TYPE", "CLIENT_TYPE")
            tableMapping.ColumnMappings.Add("DOCTOR_NAME", "DOCTOR_NAME")
            tableMapping.ColumnMappings.Add("DATE_PRESCR", "DATE_PRESCR")
            tableMapping.ColumnMappings.Add("DATE_NEXT_VISIT", "DATE_NEXT_VISIT")
            tableMapping.ColumnMappings.Add("IS_DELETE", "IS_DELETE")
            tableMapping.ColumnMappings.Add("MED_ID", "MED_ID")
            tableMapping.ColumnMappings.Add("MED_NAME", "MED_NAME")
            tableMapping.ColumnMappings.Add("MED_M", "MED_M")
            tableMapping.ColumnMappings.Add("MED_N", "MED_N")
            tableMapping.ColumnMappings.Add("MED_E", "MED_E")
            tableMapping.ColumnMappings.Add("MED_QTY", "MED_QTY")
            tableMapping.ColumnMappings.Add("MED_PRICE", "MED_PRICE")
            tableMapping.ColumnMappings.Add("MED_SUB_TOTAL", "MED_SUB_TOTAL")
            tableMapping.ColumnMappings.Add("PRESCRIPT_NOTE", "PRESCRIPT_NOTE")
            tableMapping.ColumnMappings.Add("IS_RECEIVED", "IS_RECEIVED")
            tableMapping.ColumnMappings.Add("REMARK", "REMARK")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.KTGSYS.My.MySettings.Default.TakeoDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(2) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        PRESC_ID, CLIENT_NO, CLIENT_NAME, CLIENT_AGE, CLIENT_SEX, CLIENT_TY" & _
                "PE, DOCTOR_NAME, DATE_PRESCR, DATE_NEXT_VISIT, IS_DELETE, MED_ID, MED_NAME, MED_" & _
                "M, MED_N, MED_E, MED_QTY, MED_PRICE, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         MED_SUB_TOTAL, P" & _
                "RESCRIPT_NOTE, IS_RECEIVED, REMARK" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM            CCAMH_VIEW_PRESCRIPTION"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        PRESC_ID, CLIENT_NO, CLIENT_NAME, CLIENT_AGE, CLIENT_SEX, CLIENT_TY" & _
                "PE, DOCTOR_NAME, DATE_PRESCR, DATE_NEXT_VISIT, IS_DELETE, MED_ID, MED_NAME, MED_" & _
                "M, MED_N, MED_E, MED_QTY, MED_PRICE, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         MED_SUB_TOTAL, P" & _
                "RESCRIPT_NOTE, IS_RECEIVED, REMARK" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM            CCAMH_VIEW_PRESCRIPTION" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "WHE" & _
                "RE" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "CLIENT_NO=@CLIENT_NO and DATE_PRESCR=@DATE_PRESCR"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATE_PRESCR", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "DATE_PRESCR", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT        PRESC_ID, CLIENT_NO, CLIENT_NAME, CLIENT_AGE, CLIENT_SEX, CLIENT_TY" & _
                "PE, DOCTOR_NAME, DATE_PRESCR, DATE_NEXT_VISIT, IS_DELETE, MED_ID, MED_NAME, MED_" & _
                "M, MED_N, MED_E, MED_QTY, MED_PRICE, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         MED_SUB_TOTAL, P" & _
                "RESCRIPT_NOTE, IS_RECEIVED, REMARK" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM            CCAMH_VIEW_PRESCRIPTION" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "w" & _
                "here  PRESC_ID = (select MAX(PRESC_ID) from CCAMH_VIEW_PRESCRIPTION where  CLIEN" & _
                "T_NO =@CLIENT_NO)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As DSCaseMonitoring.CCAMH_VIEW_PRESCRIPTIONDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData() As DSCaseMonitoring.CCAMH_VIEW_PRESCRIPTIONDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSCaseMonitoring.CCAMH_VIEW_PRESCRIPTIONDataTable = New DSCaseMonitoring.CCAMH_VIEW_PRESCRIPTIONDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, False)> _
        Public Overridable Overloads Function FillBy(ByVal dataTable As DSCaseMonitoring.CCAMH_VIEW_PRESCRIPTIONDataTable, ByVal CLIENT_NO As Global.System.Nullable(Of Decimal), ByVal DATE_PRESCR As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (CLIENT_NO.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CLIENT_NO.Value, Decimal)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (DATE_PRESCR.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(DATE_PRESCR.Value, Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], False)> _
        Public Overridable Overloads Function SelectMedicineByClientNo(ByVal CLIENT_NO As Global.System.Nullable(Of Decimal), ByVal DATE_PRESCR As Global.System.Nullable(Of Date)) As DSCaseMonitoring.CCAMH_VIEW_PRESCRIPTIONDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (CLIENT_NO.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CLIENT_NO.Value, Decimal)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (DATE_PRESCR.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(DATE_PRESCR.Value, Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DSCaseMonitoring.CCAMH_VIEW_PRESCRIPTIONDataTable = New DSCaseMonitoring.CCAMH_VIEW_PRESCRIPTIONDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, False)> _
        Public Overridable Overloads Function FillBy1(ByVal dataTable As DSCaseMonitoring.CCAMH_VIEW_PRESCRIPTIONDataTable, ByVal CLIENT_NO As Global.System.Nullable(Of Decimal)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (CLIENT_NO.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CLIENT_NO.Value, Decimal)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], False)> _
        Public Overridable Overloads Function SelectAllMedicineByClientNo(ByVal CLIENT_NO As Global.System.Nullable(Of Decimal)) As DSCaseMonitoring.CCAMH_VIEW_PRESCRIPTIONDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (CLIENT_NO.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CLIENT_NO.Value, Decimal)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DSCaseMonitoring.CCAMH_VIEW_PRESCRIPTIONDataTable = New DSCaseMonitoring.CCAMH_VIEW_PRESCRIPTIONDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class CCAMH_VIEW_CASE_MONITORINGTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "CCAMH_VIEW_CASE_MONITORING"
            tableMapping.ColumnMappings.Add("CLIENT_MG_ID", "CLIENT_MG_ID")
            tableMapping.ColumnMappings.Add("CLIENT_NAME_KHM", "CLIENT_NAME_KHM")
            tableMapping.ColumnMappings.Add("CLIENT_NAME", "CLIENT_NAME")
            tableMapping.ColumnMappings.Add("CLIENT_SEX", "CLIENT_SEX")
            tableMapping.ColumnMappings.Add("CLIENT_AGE", "CLIENT_AGE")
            tableMapping.ColumnMappings.Add("CLIENT_DOB", "CLIENT_DOB")
            tableMapping.ColumnMappings.Add("CLIENT_DATE_REG", "CLIENT_DATE_REG")
            tableMapping.ColumnMappings.Add("CLIENT_ADVISED_ASSESSMENT_DATE", "CLIENT_ADVISED_ASSESSMENT_DATE")
            tableMapping.ColumnMappings.Add("CLIENT_ADVISED_ASSESSMENT", "CLIENT_ADVISED_ASSESSMENT")
            tableMapping.ColumnMappings.Add("CLIENT_ADDRESS_PHONE", "CLIENT_ADDRESS_PHONE")
            tableMapping.ColumnMappings.Add("CLIENT_IS_ASSESS_CHECKED", "CLIENT_IS_ASSESS_CHECKED")
            tableMapping.ColumnMappings.Add("CLIENT_ADVICED_ASSESSMENT_DETAIL", "CLIENT_ADVICED_ASSESSMENT_DETAIL")
            tableMapping.ColumnMappings.Add("CLIENT_ADVICED_ASSESSMENT_NOTE", "CLIENT_ADVICED_ASSESSMENT_NOTE")
            tableMapping.ColumnMappings.Add("FULL_ADDRESS_KH", "FULL_ADDRESS_KH")
            tableMapping.ColumnMappings.Add("FULL_ADDRESS_ENG", "FULL_ADDRESS_ENG")
            tableMapping.ColumnMappings.Add("DIAGNOSIS", "DIAGNOSIS")
            tableMapping.ColumnMappings.Add("DATE_CREATE", "DATE_CREATE")
            tableMapping.ColumnMappings.Add("IS_CLIENT_NEWOLD", "IS_CLIENT_NEWOLD")
            tableMapping.ColumnMappings.Add("IS_MONINTORING", "IS_MONINTORING")
            tableMapping.ColumnMappings.Add("MONITORING_ID", "MONITORING_ID")
            tableMapping.ColumnMappings.Add("CLIENT_NO", "CLIENT_NO")
            tableMapping.ColumnMappings.Add("FACILATER", "FACILATER")
            tableMapping.ColumnMappings.Add("NOTED_BY", "NOTED_BY")
            tableMapping.ColumnMappings.Add("DRUG", "DRUG")
            tableMapping.ColumnMappings.Add("COUNSELING", "COUNSELING")
            tableMapping.ColumnMappings.Add("ABT", "ABT")
            tableMapping.ColumnMappings.Add("SPECIAL_NEED", "SPECIAL_NEED")
            tableMapping.ColumnMappings.Add("THEARAPY_NAME", "THEARAPY_NAME")
            tableMapping.ColumnMappings.Add("SELF_SEEEN_BY", "SELF_SEEEN_BY")
            tableMapping.ColumnMappings.Add("OTHER_SEEN_BY", "OTHER_SEEN_BY")
            tableMapping.ColumnMappings.Add("REFER_BY_NGO", "REFER_BY_NGO")
            tableMapping.ColumnMappings.Add("REFER_BY_SCHOOL", "REFER_BY_SCHOOL")
            tableMapping.ColumnMappings.Add("REFER_BY_OTHER", "REFER_BY_OTHER")
            tableMapping.ColumnMappings.Add("REMARK", "REMARK")
            tableMapping.ColumnMappings.Add("CAL_AGE", "CAL_AGE")
            tableMapping.ColumnMappings.Add("NUMBER_VISIT", "NUMBER_VISIT")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.KTGSYS.My.MySettings.Default.TakeoDBConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(5) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        CLIENT_MG_ID, CLIENT_NAME_KHM, CLIENT_NAME, CLIENT_SEX, CLIENT_AGE," & _
                " CLIENT_DOB, CLIENT_DATE_REG, CLIENT_ADVISED_ASSESSMENT_DATE, CLIENT_ADVISED_ASS" & _
                "ESSMENT, CLIENT_ADDRESS_PHONE, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         CLIENT_IS_ASSESS_CHECK" & _
                "ED, CLIENT_ADVICED_ASSESSMENT_DETAIL, CLIENT_ADVICED_ASSESSMENT_NOTE, FULL_ADDRE" & _
                "SS_KH, FULL_ADDRESS_ENG, DIAGNOSIS, DATE_CREATE, IS_CLIENT_NEWOLD, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "           " & _
                "              IS_MONINTORING, MONITORING_ID, CLIENT_NO, FACILATER, NOTED_BY, DRU" & _
                "G, COUNSELING, ABT, SPECIAL_NEED, THEARAPY_NAME, SELF_SEEEN_BY, OTHER_SEEN_BY, R" & _
                "EFER_BY_NGO, REFER_BY_SCHOOL, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         REFER_BY_OTHER, REMARK," & _
                " CAL_AGE, NUMBER_VISIT" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM            CCAMH_VIEW_CASE_MONITORING"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        CLIENT_MG_ID, CLIENT_NAME_KHM, CLIENT_NAME, CLIENT_SEX, CLIENT_AGE," & _
                " CLIENT_DOB, CLIENT_DATE_REG, CLIENT_ADVISED_ASSESSMENT_DATE, CLIENT_ADVISED_ASS" & _
                "ESSMENT, CLIENT_ADDRESS_PHONE, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         CLIENT_IS_ASSESS_CHECK" & _
                "ED, CLIENT_ADVICED_ASSESSMENT_DETAIL, CLIENT_ADVICED_ASSESSMENT_NOTE, FULL_ADDRE" & _
                "SS_KH, FULL_ADDRESS_ENG, DIAGNOSIS, DATE_CREATE, IS_CLIENT_NEWOLD, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "           " & _
                "              IS_MONINTORING, MONITORING_ID, CLIENT_NO, FACILATER, NOTED_BY, DRU" & _
                "G, COUNSELING, ABT, SPECIAL_NEED, THEARAPY_NAME, SELF_SEEEN_BY, OTHER_SEEN_BY, R" & _
                "EFER_BY_NGO, REFER_BY_SCHOOL, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         REFER_BY_OTHER, REMARK," & _
                " CAL_AGE, NUMBER_VISIT" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM            CCAMH_VIEW_CASE_MONITORING" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "WHERE" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "DATE_" & _
                "CREATE BETWEEN @DFrom and @DTo" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "order by DATE_CREATE"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DFrom", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "DATE_CREATE", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DTo", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "DATE_CREATE", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT        CLIENT_MG_ID, CLIENT_NAME_KHM, CLIENT_NAME, CLIENT_SEX, CLIENT_AGE," & _
                " CLIENT_DOB, CLIENT_DATE_REG, CLIENT_ADVISED_ASSESSMENT_DATE, CLIENT_ADVISED_ASS" & _
                "ESSMENT, CLIENT_ADDRESS_PHONE, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         CLIENT_IS_ASSESS_CHECK" & _
                "ED, CLIENT_ADVICED_ASSESSMENT_DETAIL, CLIENT_ADVICED_ASSESSMENT_NOTE, FULL_ADDRE" & _
                "SS_KH, FULL_ADDRESS_ENG, DIAGNOSIS, DATE_CREATE, IS_CLIENT_NEWOLD, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "           " & _
                "              IS_MONINTORING, MONITORING_ID, CLIENT_NO, FACILATER, NOTED_BY, DRU" & _
                "G, COUNSELING, ABT, SPECIAL_NEED, THEARAPY_NAME, SELF_SEEEN_BY, OTHER_SEEN_BY, R" & _
                "EFER_BY_NGO, REFER_BY_SCHOOL, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         REFER_BY_OTHER, REMARK," & _
                " CAL_AGE, NUMBER_VISIT" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM            CCAMH_VIEW_CASE_MONITORING" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "WHERE" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "CLIEN" & _
                "T_NO=@CLIENT_NO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10)
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT        CLIENT_MG_ID, CLIENT_NAME_KHM, CLIENT_NAME, CLIENT_SEX, CLIENT_AGE," & _
                " CLIENT_DOB, CLIENT_DATE_REG, CLIENT_ADVISED_ASSESSMENT_DATE, CLIENT_ADVISED_ASS" & _
                "ESSMENT, CLIENT_ADDRESS_PHONE, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         CLIENT_IS_ASSESS_CHECK" & _
                "ED, CLIENT_ADVICED_ASSESSMENT_DETAIL, CLIENT_ADVICED_ASSESSMENT_NOTE, FULL_ADDRE" & _
                "SS_KH, FULL_ADDRESS_ENG, DIAGNOSIS, DATE_CREATE, IS_CLIENT_NEWOLD, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "           " & _
                "              IS_MONINTORING, MONITORING_ID, CLIENT_NO, FACILATER, NOTED_BY, DRU" & _
                "G, COUNSELING, ABT, SPECIAL_NEED, THEARAPY_NAME, SELF_SEEEN_BY, OTHER_SEEN_BY, R" & _
                "EFER_BY_NGO, REFER_BY_SCHOOL, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         REFER_BY_OTHER, REMARK," & _
                " CAL_AGE, NUMBER_VISIT" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM            CCAMH_VIEW_CASE_MONITORING" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "WHERE" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "CLIEN" & _
                "T_NAME LIKE +'%'+ @CLIENT_NAME +'%'"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NAME", Global.System.Data.SqlDbType.NVarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_NAME", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(4) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "SELECT        CLIENT_MG_ID, CLIENT_NAME_KHM, CLIENT_NAME, CLIENT_SEX, CLIENT_AGE," & _
                " CLIENT_DOB, CLIENT_DATE_REG, CLIENT_ADVISED_ASSESSMENT_DATE, CLIENT_ADVISED_ASS" & _
                "ESSMENT, CLIENT_ADDRESS_PHONE, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         CLIENT_IS_ASSESS_CHECK" & _
                "ED, CLIENT_ADVICED_ASSESSMENT_DETAIL, CLIENT_ADVICED_ASSESSMENT_NOTE, FULL_ADDRE" & _
                "SS_KH, FULL_ADDRESS_ENG, DIAGNOSIS, DATE_CREATE, IS_CLIENT_NEWOLD, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "           " & _
                "              IS_MONINTORING, MONITORING_ID, CLIENT_NO, FACILATER, NOTED_BY, DRU" & _
                "G, COUNSELING, ABT, SPECIAL_NEED, THEARAPY_NAME, SELF_SEEEN_BY, OTHER_SEEN_BY, R" & _
                "EFER_BY_NGO, REFER_BY_SCHOOL, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         REFER_BY_OTHER, REMARK," & _
                " CAL_AGE, NUMBER_VISIT" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM            CCAMH_VIEW_CASE_MONITORING" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "WHERE" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FACIL" & _
                "ATER  = @FACILATER"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FACILATER", Global.System.Data.SqlDbType.NVarChar, 150, Global.System.Data.ParameterDirection.Input, 0, 0, "FACILATER", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(5) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(5).Connection = Me.Connection
            Me._commandCollection(5).CommandText = "SELECT        CLIENT_MG_ID, CLIENT_NAME_KHM, CLIENT_NAME, CLIENT_SEX, CLIENT_AGE," & _
                " CLIENT_DOB, CLIENT_DATE_REG, CLIENT_ADVISED_ASSESSMENT_DATE, CLIENT_ADVISED_ASS" & _
                "ESSMENT, CLIENT_ADDRESS_PHONE, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         CLIENT_IS_ASSESS_CHECK" & _
                "ED, CLIENT_ADVICED_ASSESSMENT_DETAIL, CLIENT_ADVICED_ASSESSMENT_NOTE, FULL_ADDRE" & _
                "SS_KH, FULL_ADDRESS_ENG, DIAGNOSIS, DATE_CREATE, IS_CLIENT_NEWOLD, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "           " & _
                "              IS_MONINTORING, MONITORING_ID, CLIENT_NO, FACILATER, NOTED_BY, DRU" & _
                "G, COUNSELING, ABT, SPECIAL_NEED, THEARAPY_NAME, SELF_SEEEN_BY, OTHER_SEEN_BY, R" & _
                "EFER_BY_NGO, REFER_BY_SCHOOL, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         REFER_BY_OTHER, REMARK," & _
                " CAL_AGE, NUMBER_VISIT" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM            CCAMH_VIEW_CASE_MONITORING" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "WHERE" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "CLIEN" & _
                "T_ADDRESS_PHONE LIKE +'%'+ @CLIENT_ADDRESS_PHONE +'%'"
            Me._commandCollection(5).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_ADDRESS_PHONE", Global.System.Data.SqlDbType.VarChar, 20, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_ADDRESS_PHONE", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As DSCaseMonitoring.CCAMH_VIEW_CASE_MONITORINGDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData() As DSCaseMonitoring.CCAMH_VIEW_CASE_MONITORINGDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSCaseMonitoring.CCAMH_VIEW_CASE_MONITORINGDataTable = New DSCaseMonitoring.CCAMH_VIEW_CASE_MONITORINGDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, False)> _
        Public Overridable Overloads Function FillBy(ByVal dataTable As DSCaseMonitoring.CCAMH_VIEW_CASE_MONITORINGDataTable, ByVal DFrom As Global.System.Nullable(Of Date), ByVal DTo As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (DFrom.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(DFrom.Value, Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (DTo.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(DTo.Value, Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], False)> _
        Public Overridable Overloads Function SelectCaseMonitoringDateToDate(ByVal DFrom As Global.System.Nullable(Of Date), ByVal DTo As Global.System.Nullable(Of Date)) As DSCaseMonitoring.CCAMH_VIEW_CASE_MONITORINGDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (DFrom.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(DFrom.Value, Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (DTo.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(DTo.Value, Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DSCaseMonitoring.CCAMH_VIEW_CASE_MONITORINGDataTable = New DSCaseMonitoring.CCAMH_VIEW_CASE_MONITORINGDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, False)> _
        Public Overridable Overloads Function FillBy1(ByVal dataTable As DSCaseMonitoring.CCAMH_VIEW_CASE_MONITORINGDataTable, ByVal CLIENT_NO As Global.System.Nullable(Of Decimal)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (CLIENT_NO.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CLIENT_NO.Value, Decimal)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], False)> _
        Public Overridable Overloads Function SelectCaseMonitoringByClientNo(ByVal CLIENT_NO As Global.System.Nullable(Of Decimal)) As DSCaseMonitoring.CCAMH_VIEW_CASE_MONITORINGDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (CLIENT_NO.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CLIENT_NO.Value, Decimal)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DSCaseMonitoring.CCAMH_VIEW_CASE_MONITORINGDataTable = New DSCaseMonitoring.CCAMH_VIEW_CASE_MONITORINGDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, False)> _
        Public Overridable Overloads Function FillBy2(ByVal dataTable As DSCaseMonitoring.CCAMH_VIEW_CASE_MONITORINGDataTable, ByVal CLIENT_NAME As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            If (CLIENT_NAME Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CLIENT_NAME, String)
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], False)> _
        Public Overridable Overloads Function SelectClientNameEng(ByVal CLIENT_NAME As String) As DSCaseMonitoring.CCAMH_VIEW_CASE_MONITORINGDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            If (CLIENT_NAME Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CLIENT_NAME, String)
            End If
            Dim dataTable As DSCaseMonitoring.CCAMH_VIEW_CASE_MONITORINGDataTable = New DSCaseMonitoring.CCAMH_VIEW_CASE_MONITORINGDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, False)> _
        Public Overridable Overloads Function FillBy3(ByVal dataTable As DSCaseMonitoring.CCAMH_VIEW_CASE_MONITORINGDataTable, ByVal FACILATER As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            If (FACILATER Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(FACILATER, String)
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], False)> _
        Public Overridable Overloads Function SelectCaseMonitorFacilater(ByVal FACILATER As String) As DSCaseMonitoring.CCAMH_VIEW_CASE_MONITORINGDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            If (FACILATER Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(FACILATER, String)
            End If
            Dim dataTable As DSCaseMonitoring.CCAMH_VIEW_CASE_MONITORINGDataTable = New DSCaseMonitoring.CCAMH_VIEW_CASE_MONITORINGDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, False)> _
        Public Overridable Overloads Function FillBy4(ByVal dataTable As DSCaseMonitoring.CCAMH_VIEW_CASE_MONITORINGDataTable, ByVal CLIENT_ADDRESS_PHONE As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            If (CLIENT_ADDRESS_PHONE Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CLIENT_ADDRESS_PHONE, String)
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], False)> _
        Public Overridable Overloads Function SelectCaseMonitoringByPhone(ByVal CLIENT_ADDRESS_PHONE As String) As DSCaseMonitoring.CCAMH_VIEW_CASE_MONITORINGDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            If (CLIENT_ADDRESS_PHONE Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CLIENT_ADDRESS_PHONE, String)
            End If
            Dim dataTable As DSCaseMonitoring.CCAMH_VIEW_CASE_MONITORINGDataTable = New DSCaseMonitoring.CCAMH_VIEW_CASE_MONITORINGDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class CCAMH_REFERED_DETIALTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "CCAMH_REFERED_DETIAL"
            tableMapping.ColumnMappings.Add("REFER_ID", "REFER_ID")
            tableMapping.ColumnMappings.Add("CLIENT_REG_ID", "CLIENT_REG_ID")
            tableMapping.ColumnMappings.Add("CLIENT_NO", "CLIENT_NO")
            tableMapping.ColumnMappings.Add("REFERED_FROM", "REFERED_FROM")
            tableMapping.ColumnMappings.Add("REFERED_TYPE", "REFERED_TYPE")
            tableMapping.ColumnMappings.Add("REFFERED_NOTE", "REFFERED_NOTE")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [CCAMH_REFERED_DETIAL] WHERE (([REFER_ID] = @Original_REFER_ID) AND ("& _ 
                "(@IsNull_CLIENT_REG_ID = 1 AND [CLIENT_REG_ID] IS NULL) OR ([CLIENT_REG_ID] = @O"& _ 
                "riginal_CLIENT_REG_ID)) AND ((@IsNull_CLIENT_NO = 1 AND [CLIENT_NO] IS NULL) OR "& _ 
                "([CLIENT_NO] = @Original_CLIENT_NO)) AND ((@IsNull_REFERED_FROM = 1 AND [REFERED"& _ 
                "_FROM] IS NULL) OR ([REFERED_FROM] = @Original_REFERED_FROM)) AND ((@IsNull_REFE"& _ 
                "RED_TYPE = 1 AND [REFERED_TYPE] IS NULL) OR ([REFERED_TYPE] = @Original_REFERED_"& _ 
                "TYPE)) AND ((@IsNull_REFFERED_NOTE = 1 AND [REFFERED_NOTE] IS NULL) OR ([REFFERE"& _ 
                "D_NOTE] = @Original_REFFERED_NOTE)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REFER_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "REFER_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_REG_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_REG_ID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_REG_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_REG_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_REFERED_FROM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REFERED_FROM", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REFERED_FROM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REFERED_FROM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_REFERED_TYPE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REFERED_TYPE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REFERED_TYPE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REFERED_TYPE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_REFFERED_NOTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REFFERED_NOTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REFFERED_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REFFERED_NOTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [CCAMH_REFERED_DETIAL] ([CLIENT_REG_ID], [CLIENT_NO], [REFERED_FROM],"& _ 
                " [REFERED_TYPE], [REFFERED_NOTE]) VALUES (@CLIENT_REG_ID, @CLIENT_NO, @REFERED_F"& _ 
                "ROM, @REFERED_TYPE, @REFFERED_NOTE);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT REFER_ID, CLIENT_REG_ID, CLIENT_NO,"& _ 
                " REFERED_FROM, REFERED_TYPE, REFFERED_NOTE FROM CCAMH_REFERED_DETIAL WHERE (REFE"& _ 
                "R_ID = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_REG_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_REG_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REFERED_FROM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REFERED_FROM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REFERED_TYPE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REFERED_TYPE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REFFERED_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REFFERED_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [CCAMH_REFERED_DETIAL] SET [CLIENT_REG_ID] = @CLIENT_REG_ID, [CLIENT_NO] ="& _ 
                " @CLIENT_NO, [REFERED_FROM] = @REFERED_FROM, [REFERED_TYPE] = @REFERED_TYPE, [RE"& _ 
                "FFERED_NOTE] = @REFFERED_NOTE WHERE (([REFER_ID] = @Original_REFER_ID) AND ((@Is"& _ 
                "Null_CLIENT_REG_ID = 1 AND [CLIENT_REG_ID] IS NULL) OR ([CLIENT_REG_ID] = @Origi"& _ 
                "nal_CLIENT_REG_ID)) AND ((@IsNull_CLIENT_NO = 1 AND [CLIENT_NO] IS NULL) OR ([CL"& _ 
                "IENT_NO] = @Original_CLIENT_NO)) AND ((@IsNull_REFERED_FROM = 1 AND [REFERED_FRO"& _ 
                "M] IS NULL) OR ([REFERED_FROM] = @Original_REFERED_FROM)) AND ((@IsNull_REFERED_"& _ 
                "TYPE = 1 AND [REFERED_TYPE] IS NULL) OR ([REFERED_TYPE] = @Original_REFERED_TYPE"& _ 
                ")) AND ((@IsNull_REFFERED_NOTE = 1 AND [REFFERED_NOTE] IS NULL) OR ([REFFERED_NO"& _ 
                "TE] = @Original_REFFERED_NOTE)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT REFER_ID, CLIENT_REG_ID, CLIENT_NO, RE"& _ 
                "FERED_FROM, REFERED_TYPE, REFFERED_NOTE FROM CCAMH_REFERED_DETIAL WHERE (REFER_I"& _ 
                "D = @REFER_ID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_REG_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_REG_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REFERED_FROM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REFERED_FROM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REFERED_TYPE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REFERED_TYPE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REFFERED_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REFFERED_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REFER_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "REFER_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_REG_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_REG_ID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_REG_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_REG_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLIENT_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_REFERED_FROM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REFERED_FROM", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REFERED_FROM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REFERED_FROM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_REFERED_TYPE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REFERED_TYPE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REFERED_TYPE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REFERED_TYPE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_REFFERED_NOTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REFFERED_NOTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_REFFERED_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REFFERED_NOTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REFER_ID", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "REFER_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.KTGSYS.My.MySettings.Default.TakeoDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        REFER_ID, CLIENT_REG_ID, CLIENT_NO, REFERED_FROM, REFERED_TYPE, REF"& _ 
                "FERED_NOTE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            CCAMH_REFERED_DETIAL"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        REFER_ID, CLIENT_REG_ID, CLIENT_NO, REFERED_FROM, REFERED_TYPE, REF"& _ 
                "FERED_NOTE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            CCAMH_REFERED_DETIAL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"CLIENT_NO=@CLIENT_NO"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLIENT_NO", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CLIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSCaseMonitoring.CCAMH_REFERED_DETIALDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSCaseMonitoring.CCAMH_REFERED_DETIALDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSCaseMonitoring.CCAMH_REFERED_DETIALDataTable = New DSCaseMonitoring.CCAMH_REFERED_DETIALDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As DSCaseMonitoring.CCAMH_REFERED_DETIALDataTable, ByVal CLIENT_NO As Global.System.Nullable(Of Decimal)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (CLIENT_NO.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CLIENT_NO.Value,Decimal)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function SelectReferDetailByClientNo(ByVal CLIENT_NO As Global.System.Nullable(Of Decimal)) As DSCaseMonitoring.CCAMH_REFERED_DETIALDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (CLIENT_NO.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CLIENT_NO.Value,Decimal)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DSCaseMonitoring.CCAMH_REFERED_DETIALDataTable = New DSCaseMonitoring.CCAMH_REFERED_DETIALDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DSCaseMonitoring.CCAMH_REFERED_DETIALDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DSCaseMonitoring) As Integer
            Return Me.Adapter.Update(dataSet, "CCAMH_REFERED_DETIAL")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_REFER_ID As Decimal, ByVal Original_CLIENT_REG_ID As Global.System.Nullable(Of Decimal), ByVal Original_CLIENT_NO As Global.System.Nullable(Of Decimal), ByVal Original_REFERED_FROM As String, ByVal Original_REFERED_TYPE As String, ByVal Original_REFFERED_NOTE As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_REFER_ID,Decimal)
            If (Original_CLIENT_REG_ID.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_CLIENT_REG_ID.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_NO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_CLIENT_NO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_REFERED_FROM Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_REFERED_FROM,String)
            End If
            If (Original_REFERED_TYPE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_REFERED_TYPE,String)
            End If
            If (Original_REFFERED_NOTE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_REFFERED_NOTE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal CLIENT_REG_ID As Global.System.Nullable(Of Decimal), ByVal CLIENT_NO As Global.System.Nullable(Of Decimal), ByVal REFERED_FROM As String, ByVal REFERED_TYPE As String, ByVal REFFERED_NOTE As String) As Integer
            If (CLIENT_REG_ID.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(CLIENT_REG_ID.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_NO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(CLIENT_NO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (REFERED_FROM Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(REFERED_FROM,String)
            End If
            If (REFERED_TYPE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(REFERED_TYPE,String)
            End If
            If (REFFERED_NOTE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(REFFERED_NOTE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal CLIENT_REG_ID As Global.System.Nullable(Of Decimal), ByVal CLIENT_NO As Global.System.Nullable(Of Decimal), ByVal REFERED_FROM As String, ByVal REFERED_TYPE As String, ByVal REFFERED_NOTE As String, ByVal Original_REFER_ID As Decimal, ByVal Original_CLIENT_REG_ID As Global.System.Nullable(Of Decimal), ByVal Original_CLIENT_NO As Global.System.Nullable(Of Decimal), ByVal Original_REFERED_FROM As String, ByVal Original_REFERED_TYPE As String, ByVal Original_REFFERED_NOTE As String, ByVal REFER_ID As Decimal) As Integer
            If (CLIENT_REG_ID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(CLIENT_REG_ID.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (CLIENT_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(CLIENT_NO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (REFERED_FROM Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(REFERED_FROM,String)
            End If
            If (REFERED_TYPE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(REFERED_TYPE,String)
            End If
            If (REFFERED_NOTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(REFFERED_NOTE,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_REFER_ID,Decimal)
            If (Original_CLIENT_REG_ID.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_CLIENT_REG_ID.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENT_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_CLIENT_NO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Original_REFERED_FROM Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_REFERED_FROM,String)
            End If
            If (Original_REFERED_TYPE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_REFERED_TYPE,String)
            End If
            If (Original_REFFERED_NOTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_REFFERED_NOTE,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(16).Value = CType(REFER_ID,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal CLIENT_REG_ID As Global.System.Nullable(Of Decimal), ByVal CLIENT_NO As Global.System.Nullable(Of Decimal), ByVal REFERED_FROM As String, ByVal REFERED_TYPE As String, ByVal REFFERED_NOTE As String, ByVal Original_REFER_ID As Decimal, ByVal Original_CLIENT_REG_ID As Global.System.Nullable(Of Decimal), ByVal Original_CLIENT_NO As Global.System.Nullable(Of Decimal), ByVal Original_REFERED_FROM As String, ByVal Original_REFERED_TYPE As String, ByVal Original_REFFERED_NOTE As String) As Integer
            Return Me.Update(CLIENT_REG_ID, CLIENT_NO, REFERED_FROM, REFERED_TYPE, REFFERED_NOTE, Original_REFER_ID, Original_CLIENT_REG_ID, Original_CLIENT_NO, Original_REFERED_FROM, Original_REFERED_TYPE, Original_REFFERED_NOTE, Original_REFER_ID)
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _cCAMH_REFERED_DETIALTableAdapter As CCAMH_REFERED_DETIALTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property CCAMH_REFERED_DETIALTableAdapter() As CCAMH_REFERED_DETIALTableAdapter
            Get
                Return Me._cCAMH_REFERED_DETIALTableAdapter
            End Get
            Set
                Me._cCAMH_REFERED_DETIALTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._cCAMH_REFERED_DETIALTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._cCAMH_REFERED_DETIALTableAdapter.Connection) Is Nothing)) Then
                    Return Me._cCAMH_REFERED_DETIALTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._cCAMH_REFERED_DETIALTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As DSCaseMonitoring, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._cCAMH_REFERED_DETIALTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.CCAMH_REFERED_DETIAL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._cCAMH_REFERED_DETIALTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As DSCaseMonitoring, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._cCAMH_REFERED_DETIALTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.CCAMH_REFERED_DETIAL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._cCAMH_REFERED_DETIALTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As DSCaseMonitoring, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._cCAMH_REFERED_DETIALTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.CCAMH_REFERED_DETIAL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._cCAMH_REFERED_DETIALTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As DSCaseMonitoring) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._cCAMH_REFERED_DETIALTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._cCAMH_REFERED_DETIALTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._cCAMH_REFERED_DETIALTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._cCAMH_REFERED_DETIALTableAdapter, Me._cCAMH_REFERED_DETIALTableAdapter.Connection)
                    Me._cCAMH_REFERED_DETIALTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._cCAMH_REFERED_DETIALTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._cCAMH_REFERED_DETIALTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._cCAMH_REFERED_DETIALTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._cCAMH_REFERED_DETIALTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._cCAMH_REFERED_DETIALTableAdapter) Is Nothing) Then
                    Me._cCAMH_REFERED_DETIALTableAdapter.Connection = CType(revertConnections(Me._cCAMH_REFERED_DETIALTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._cCAMH_REFERED_DETIALTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
